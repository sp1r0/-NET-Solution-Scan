<?xml version="1.0" encoding="UTF-8"?>
<api_info>
	<package>
		<class name="&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;" uniqueID="&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;" uniqueID="&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;(System.Int32):System.Void">
				<signature>&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;.&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_id" uniqueID="get_id():System.Int32">
				<signature>&lt;&gt;f__AnonymousType0&lt;System.Int32&gt;.get_id():System.Int32</signature>
			</method>
		</class>
		<class name="&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;" uniqueID="&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;" uniqueID="&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;(System.Object;System.String):System.Void">
				<signature>&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;.&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;(System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_item" uniqueID="get_item():System.Object">
				<signature>&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;.get_item():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_value" uniqueID="get_value():System.String">
				<signature>&lt;&gt;f__AnonymousType6&lt;System.Object,System.String&gt;.get_value():System.String</signature>
			</method>
		</class>
		<class name="&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;" uniqueID="&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;" uniqueID="&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;(System.String;System.String;System.Web.Mvc.UrlParameter):System.Void">
				<signature>&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;.&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;(System.String;System.String;System.Web.Mvc.UrlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_action" uniqueID="get_action():System.String">
				<signature>&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;.get_action():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_controller" uniqueID="get_controller():System.String">
				<signature>&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;.get_controller():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_id" uniqueID="get_id():System.Web.Mvc.UrlParameter">
				<signature>&lt;&gt;f__AnonymousType1&lt;System.String,System.String,System.Web.Mvc.UrlParameter&gt;.get_id():System.Web.Mvc.UrlParameter</signature>
			</method>
		</class>
	</package>
	<package name="System">
		<class name="Action&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Action&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Action&lt;MvcMusicStore.Models.Album&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Album&gt;.Action&lt;MvcMusicStore.Models.Album&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;MvcMusicStore.Models.Album&gt;.BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Album&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Album):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Album&gt;.Invoke(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;.BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;.EndInvoke(System.IAsyncResult):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Cart):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;.Invoke(MvcMusicStore.Models.Cart):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;.EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
		</class>
		<class name="MulticastDelegate" uniqueID="System.MulticastDelegate">
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.op_Equality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.op_Inequality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CombineImpl" uniqueID="CombineImpl(System.Delegate):System.Delegate">
				<signature>System.MulticastDelegate.CombineImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorClosed" uniqueID="CtorClosed(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorClosed(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorClosedStatic" uniqueID="CtorClosedStatic(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorClosedStatic(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCollectibleClosedStatic" uniqueID="CtorCollectibleClosedStatic(System.Object;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorCollectibleClosedStatic(System.Object;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCollectibleOpened" uniqueID="CtorCollectibleOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorCollectibleOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCollectibleVirtualDispatch" uniqueID="CtorCollectibleVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorCollectibleVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorOpened" uniqueID="CtorOpened(System.Object;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorOpened(System.Object;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorRTClosed" uniqueID="CtorRTClosed(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorRTClosed(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureClosed" uniqueID="CtorSecureClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureClosedStatic" uniqueID="CtorSecureClosedStatic(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureClosedStatic(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureOpened" uniqueID="CtorSecureOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureRTClosed" uniqueID="CtorSecureRTClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureRTClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureVirtualDispatch" uniqueID="CtorSecureVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorVirtualDispatch" uniqueID="CtorVirtualDispatch(System.Object;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorVirtualDispatch(System.Object;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DeleteFromInvocationList" uniqueID="DeleteFromInvocationList(System.Object[];System.Int32;System.Int32;System.Int32):System.Object[]">
				<signature>System.MulticastDelegate.DeleteFromInvocationList(System.Object[];System.Int32;System.Int32;System.Int32):System.Object[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EqualInvocationLists" uniqueID="EqualInvocationLists(System.Object[];System.Object[];System.Int32;System.Int32):System.Boolean">
				<signature>System.MulticastDelegate.EqualInvocationLists(System.Object[];System.Object[];System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.MulticastDelegate.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.MulticastDelegate.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInvocationList" uniqueID="GetInvocationList():System.Delegate[]">
				<signature>System.MulticastDelegate.GetInvocationList():System.Delegate[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl():System.Reflection.MethodInfo">
				<signature>System.MulticastDelegate.GetMethodImpl():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTarget" uniqueID="GetTarget():System.Object">
				<signature>System.MulticastDelegate.GetTarget():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InvocationListEquals" uniqueID="InvocationListEquals(System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.InvocationListEquals(System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvocationListLogicallyNull" uniqueID="InvocationListLogicallyNull():System.Boolean">
				<signature>System.MulticastDelegate.InvocationListLogicallyNull():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsUnmanagedFunctionPtr" uniqueID="IsUnmanagedFunctionPtr():System.Boolean">
				<signature>System.MulticastDelegate.IsUnmanagedFunctionPtr():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MulticastDelegate" uniqueID="MulticastDelegate(System.Object;System.String):System.Void">
				<signature>System.MulticastDelegate.MulticastDelegate(System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MulticastDelegate" uniqueID="MulticastDelegate(System.Type;System.String):System.Void">
				<signature>System.MulticastDelegate.MulticastDelegate(System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewMulticastDelegate" uniqueID="NewMulticastDelegate(System.Object[];System.Int32):System.MulticastDelegate">
				<signature>System.MulticastDelegate.NewMulticastDelegate(System.Object[];System.Int32):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NewMulticastDelegate" uniqueID="NewMulticastDelegate(System.Object[];System.Int32;System.Boolean):System.MulticastDelegate">
				<signature>System.MulticastDelegate.NewMulticastDelegate(System.Object[];System.Int32;System.Boolean):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveImpl" uniqueID="RemoveImpl(System.Delegate):System.Delegate">
				<signature>System.MulticastDelegate.RemoveImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StoreDynamicMethod" uniqueID="StoreDynamicMethod(System.Reflection.MethodInfo):System.Void">
				<signature>System.MulticastDelegate.StoreDynamicMethod(System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ThrowNullThisInDelegateToInstance" uniqueID="ThrowNullThisInDelegateToInstance():System.Void">
				<signature>System.MulticastDelegate.ThrowNullThisInDelegateToInstance():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TrySetSlot" uniqueID="TrySetSlot(System.Object[];System.Int32;System.Object):System.Boolean">
				<signature>System.MulticastDelegate.TrySetSlot(System.Object[];System.Int32;System.Object):System.Boolean</signature>
			</method>
		</class>
		<class name="Object" uniqueID="System.Object">
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.Object;System.Object):System.Boolean">
				<signature>System.Object.Equals(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReferenceEquals" uniqueID="ReferenceEquals(System.Object;System.Object):System.Boolean">
				<signature>System.Object.ReferenceEquals(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Object.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FieldGetter" uniqueID="FieldGetter(System.String;System.String;System.Object):System.Void">
				<signature>System.Object.FieldGetter(System.String;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FieldSetter" uniqueID="FieldSetter(System.String;System.String;System.Object):System.Void">
				<signature>System.Object.FieldSetter(System.String;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Finalize" uniqueID="Finalize():System.Void">
				<signature>System.Object.Finalize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetFieldInfo" uniqueID="GetFieldInfo(System.String;System.String):System.Reflection.FieldInfo">
				<signature>System.Object.GetFieldInfo(System.String;System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Object.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Object.GetType():System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberwiseClone" uniqueID="MemberwiseClone():System.Object">
				<signature>System.Object.MemberwiseClone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Object" uniqueID="Object():System.Void">
				<signature>System.Object.Object():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Object.ToString():System.String</signature>
			</method>
		</class>
		<class name="Action&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Action&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;MvcMusicStore.Models.Order&gt;" uniqueID="Action&lt;MvcMusicStore.Models.Order&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Order&gt;.Action&lt;MvcMusicStore.Models.Order&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Order;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;MvcMusicStore.Models.Order&gt;.BeginInvoke(MvcMusicStore.Models.Order;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Order&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Order):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Order&gt;.Invoke(MvcMusicStore.Models.Order):System.Void</signature>
			</method>
		</class>
		<class name="Delegate" uniqueID="System.Delegate">
			<method accessibility="Public" methodKind="Static" name="Combine" uniqueID="Combine(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.Combine(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Combine" uniqueID="Combine(System.Delegate[]):System.Delegate">
				<signature>System.Delegate.Combine(System.Delegate[]):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CompareUnmanagedFunctionPtrs" uniqueID="CompareUnmanagedFunctionPtrs(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.CompareUnmanagedFunctionPtrs(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String;System.Boolean;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String;System.Boolean;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Reflection.MethodInfo;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Reflection.MethodInfo;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String;System.Boolean;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String;System.Boolean;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDelegateInternal" uniqueID="CreateDelegateInternal(System.RuntimeType;System.Reflection.RuntimeMethodInfo;System.Object;System.DelegateBindingFlags;System.Threading.StackCrawlMark):System.Delegate">
				<signature>System.Delegate.CreateDelegateInternal(System.RuntimeType;System.Reflection.RuntimeMethodInfo;System.Object;System.DelegateBindingFlags;System.Threading.StackCrawlMark):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDelegateNoSecurityCheck" uniqueID="CreateDelegateNoSecurityCheck(System.RuntimeType;System.Object;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.CreateDelegateNoSecurityCheck(System.RuntimeType;System.Object;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDelegateNoSecurityCheck" uniqueID="CreateDelegateNoSecurityCheck(System.Type;System.Object;System.RuntimeMethodHandle):System.Delegate">
				<signature>System.Delegate.CreateDelegateNoSecurityCheck(System.Type;System.Object;System.RuntimeMethodHandle):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalAlloc" uniqueID="InternalAlloc(System.RuntimeType):System.MulticastDelegate">
				<signature>System.Delegate.InternalAlloc(System.RuntimeType):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalAllocLike" uniqueID="InternalAllocLike(System.Delegate):System.MulticastDelegate">
				<signature>System.Delegate.InternalAllocLike(System.Delegate):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalEqualMethodHandles" uniqueID="InternalEqualMethodHandles(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.InternalEqualMethodHandles(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalEqualTypes" uniqueID="InternalEqualTypes(System.Object;System.Object):System.Boolean">
				<signature>System.Delegate.InternalEqualTypes(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Remove" uniqueID="Remove(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.Remove(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RemoveAll" uniqueID="RemoveAll(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.RemoveAll(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateDelegate" uniqueID="UnsafeCreateDelegate(System.RuntimeType;System.Reflection.RuntimeMethodInfo;System.Object;System.DelegateBindingFlags):System.Delegate">
				<signature>System.Delegate.UnsafeCreateDelegate(System.RuntimeType;System.Reflection.RuntimeMethodInfo;System.Object;System.DelegateBindingFlags):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.op_Equality(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.op_Inequality(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AdjustTarget" uniqueID="AdjustTarget(System.Object;System.IntPtr):System.IntPtr">
				<signature>System.Delegate.AdjustTarget(System.Object;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BindToMethodInfo" uniqueID="BindToMethodInfo(System.Object;System.IRuntimeMethodInfo;System.RuntimeType;System.DelegateBindingFlags):System.Boolean">
				<signature>System.Delegate.BindToMethodInfo(System.Object;System.IRuntimeMethodInfo;System.RuntimeType;System.DelegateBindingFlags):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BindToMethodName" uniqueID="BindToMethodName(System.Object;System.RuntimeType;System.String;System.DelegateBindingFlags):System.Boolean">
				<signature>System.Delegate.BindToMethodName(System.Object;System.RuntimeType;System.String;System.DelegateBindingFlags):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.Delegate.Clone():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CombineImpl" uniqueID="CombineImpl(System.Delegate):System.Delegate">
				<signature>System.Delegate.CombineImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Delegate" uniqueID="Delegate():System.Void">
				<signature>System.Delegate.Delegate():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Delegate" uniqueID="Delegate(System.Object;System.String):System.Void">
				<signature>System.Delegate.Delegate(System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Delegate" uniqueID="Delegate(System.Type;System.String):System.Void">
				<signature>System.Delegate.Delegate(System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DelegateConstruct" uniqueID="DelegateConstruct(System.Object;System.IntPtr):System.Void">
				<signature>System.Delegate.DelegateConstruct(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DynamicInvoke" uniqueID="DynamicInvoke(System.Object[]):System.Object">
				<signature>System.Delegate.DynamicInvoke(System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DynamicInvokeImpl" uniqueID="DynamicInvokeImpl(System.Object[]):System.Object">
				<signature>System.Delegate.DynamicInvokeImpl(System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Delegate.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindMethodHandle" uniqueID="FindMethodHandle():System.IRuntimeMethodInfo">
				<signature>System.Delegate.FindMethodHandle():System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCallStub" uniqueID="GetCallStub(System.IntPtr):System.IntPtr">
				<signature>System.Delegate.GetCallStub(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Delegate.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInvocationList" uniqueID="GetInvocationList():System.Delegate[]">
				<signature>System.Delegate.GetInvocationList():System.Delegate[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetInvokeMethod" uniqueID="GetInvokeMethod():System.IntPtr">
				<signature>System.Delegate.GetInvokeMethod():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl():System.Reflection.MethodInfo">
				<signature>System.Delegate.GetMethodImpl():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMulticastInvoke" uniqueID="GetMulticastInvoke():System.IntPtr">
				<signature>System.Delegate.GetMulticastInvoke():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTarget" uniqueID="GetTarget():System.Object">
				<signature>System.Delegate.GetTarget():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveImpl" uniqueID="RemoveImpl(System.Delegate):System.Delegate">
				<signature>System.Delegate.RemoveImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Method" uniqueID="get_Method():System.Reflection.MethodInfo">
				<signature>System.Delegate.get_Method():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Target" uniqueID="get_Target():System.Object">
				<signature>System.Delegate.get_Target():System.Object</signature>
			</method>
		</class>
		<class name="ICloneable" uniqueID="System.ICloneable">
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.ICloneable.Clone():System.Object</signature>
			</method>
		</class>
		<class name="IDisposable" uniqueID="System.IDisposable">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.IDisposable.Dispose():System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Action&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="Action&lt;MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Artist&gt;.Action&lt;MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Artist;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;MvcMusicStore.Models.Artist&gt;.BeginInvoke(MvcMusicStore.Models.Artist;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Artist&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Artist&gt;.Invoke(MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Action&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Action&lt;MvcMusicStore.Models.Cart&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Cart&gt;.Action&lt;MvcMusicStore.Models.Cart&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;MvcMusicStore.Models.Cart&gt;.BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Cart&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Cart&gt;.Invoke(MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
		</class>
		<class name="Comparison&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Comparison&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Artist;MvcMusicStore.Models.Artist;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Artist&gt;.BeginInvoke(MvcMusicStore.Models.Artist;MvcMusicStore.Models.Artist;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="Comparison&lt;MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Artist&gt;.Comparison&lt;MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Artist&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Artist;MvcMusicStore.Models.Artist):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Artist&gt;.Invoke(MvcMusicStore.Models.Artist;MvcMusicStore.Models.Artist):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Comparison&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Genre;MvcMusicStore.Models.Genre;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Genre&gt;.BeginInvoke(MvcMusicStore.Models.Genre;MvcMusicStore.Models.Genre;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Comparison&lt;MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Genre&gt;.Comparison&lt;MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Genre&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Genre;MvcMusicStore.Models.Genre):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Genre&gt;.Invoke(MvcMusicStore.Models.Genre;MvcMusicStore.Models.Genre):System.Int32</signature>
			</method>
		</class>
		<class name="Action&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Action&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Action&lt;MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Genre&gt;.Action&lt;MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Genre;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;MvcMusicStore.Models.Genre&gt;.BeginInvoke(MvcMusicStore.Models.Genre;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Genre&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.Genre&gt;.Invoke(MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Action&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="Action&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.OrderDetail&gt;.Action&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.OrderDetail;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;MvcMusicStore.Models.OrderDetail&gt;.BeginInvoke(MvcMusicStore.Models.OrderDetail;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.OrderDetail&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Action&lt;MvcMusicStore.Models.OrderDetail&gt;.Invoke(MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Album">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;.EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Album">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Album&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Album</signature>
			</method>
		</class>
		<class name="Action&lt;System.Attribute&gt;" uniqueID="System.Action&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Attribute&gt;" uniqueID="Action&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Attribute&gt;.Action&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Attribute&gt;.BeginInvoke(System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Attribute&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Attribute):System.Void">
				<signature>System.Action&lt;System.Attribute&gt;.Invoke(System.Attribute):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;" uniqueID="System.Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;" uniqueID="Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;.Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Action&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;.BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;.EndInvoke(System.IAsyncResult):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Cart):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;.Invoke(MvcMusicStore.Models.Cart):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
		</class>
		<class name="AttributeUsageAttribute" uniqueID="System.AttributeUsageAttribute">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.AttributeUsageAttribute.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AttributeUsageAttribute" uniqueID="AttributeUsageAttribute(System.AttributeTargets):System.Void">
				<signature>System.AttributeUsageAttribute.AttributeUsageAttribute(System.AttributeTargets):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AttributeUsageAttribute" uniqueID="AttributeUsageAttribute(System.AttributeTargets;System.Boolean;System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.AttributeUsageAttribute(System.AttributeTargets;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowMultiple" uniqueID="get_AllowMultiple():System.Boolean">
				<signature>System.AttributeUsageAttribute.get_AllowMultiple():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Inherited" uniqueID="get_Inherited():System.Boolean">
				<signature>System.AttributeUsageAttribute.get_Inherited():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValidOn" uniqueID="get_ValidOn():System.AttributeTargets">
				<signature>System.AttributeUsageAttribute.get_ValidOn():System.AttributeTargets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowMultiple" uniqueID="set_AllowMultiple(System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.set_AllowMultiple(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Inherited" uniqueID="set_Inherited(System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.set_Inherited(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Predicate&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Cart&gt;.BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Cart&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Cart&gt;.Invoke(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Predicate&lt;MvcMusicStore.Models.Cart&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Cart&gt;.Predicate&lt;MvcMusicStore.Models.Cart&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.DateTime&gt;" uniqueID="System.IEquatable&lt;System.DateTime&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.DateTime):System.Boolean">
				<signature>System.IEquatable&lt;System.DateTime&gt;.Equals(System.DateTime):System.Boolean</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.Entity.DbContext&gt;" uniqueID="System.Action&lt;System.Data.Entity.DbContext&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.Entity.DbContext&gt;" uniqueID="Action&lt;System.Data.Entity.DbContext&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.Entity.DbContext&gt;.Action&lt;System.Data.Entity.DbContext&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Entity.DbContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.Entity.DbContext&gt;.BeginInvoke(System.Data.Entity.DbContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.Entity.DbContext&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Entity.DbContext):System.Void">
				<signature>System.Action&lt;System.Data.Entity.DbContext&gt;.Invoke(System.Data.Entity.DbContext):System.Void</signature>
			</method>
		</class>
		<class name="IComparable" uniqueID="System.IComparable">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.IComparable.CompareTo(System.Object):System.Int32</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Objects.Internal.IEntityWrapper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.BeginInvoke(System.Data.Objects.Internal.IEntityWrapper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Invoke(System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Object,System.EventArgs&gt;" uniqueID="System.Action&lt;System.Object,System.EventArgs&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Object,System.EventArgs&gt;" uniqueID="Action&lt;System.Object,System.EventArgs&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Object,System.EventArgs&gt;.Action&lt;System.Object,System.EventArgs&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.EventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Object,System.EventArgs&gt;.BeginInvoke(System.Object;System.EventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Object,System.EventArgs&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.EventArgs):System.Void">
				<signature>System.Action&lt;System.Object,System.EventArgs&gt;.Invoke(System.Object;System.EventArgs):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Cart">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;.EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Cart">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Cart&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Cart</signature>
			</method>
		</class>
		<class name="Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.OrderDetail;MvcMusicStore.Models.OrderDetail;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;.BeginInvoke(MvcMusicStore.Models.OrderDetail;MvcMusicStore.Models.OrderDetail;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;.Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.OrderDetail;MvcMusicStore.Models.OrderDetail):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;.Invoke(MvcMusicStore.Models.OrderDetail;MvcMusicStore.Models.OrderDetail):System.Int32</signature>
			</method>
		</class>
		<class name="Action&lt;System.Web.HttpContext&gt;" uniqueID="System.Action&lt;System.Web.HttpContext&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Web.HttpContext&gt;" uniqueID="Action&lt;System.Web.HttpContext&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Web.HttpContext&gt;.Action&lt;System.Web.HttpContext&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Web.HttpContext&gt;.BeginInvoke(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Web.HttpContext&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.HttpContext):System.Void">
				<signature>System.Action&lt;System.Web.HttpContext&gt;.Invoke(System.Web.HttpContext):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;.BeginInvoke(MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;.Invoke(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
		</class>
		<class name="Action&lt;System.Web.HttpContextBase&gt;" uniqueID="System.Action&lt;System.Web.HttpContextBase&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Web.HttpContextBase&gt;" uniqueID="Action&lt;System.Web.HttpContextBase&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Web.HttpContextBase&gt;.Action&lt;System.Web.HttpContextBase&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.HttpContextBase;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Web.HttpContextBase&gt;.BeginInvoke(System.Web.HttpContextBase;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Web.HttpContextBase&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.HttpContextBase):System.Void">
				<signature>System.Action&lt;System.Web.HttpContextBase&gt;.Invoke(System.Web.HttpContextBase):System.Void</signature>
			</method>
		</class>
		<class name="ValueType" uniqueID="System.ValueType">
			<method accessibility="Private" methodKind="Static" name="CanCompareBits" uniqueID="CanCompareBits(System.Object):System.Boolean">
				<signature>System.ValueType.CanCompareBits(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FastEqualsCheck" uniqueID="FastEqualsCheck(System.Object;System.Object):System.Boolean">
				<signature>System.ValueType.FastEqualsCheck(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetHashCodeOfPtr" uniqueID="GetHashCodeOfPtr(System.IntPtr):System.Int32">
				<signature>System.ValueType.GetHashCodeOfPtr(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.ValueType.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.ValueType.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.ValueType.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValueType" uniqueID="ValueType():System.Void">
				<signature>System.ValueType.ValueType():System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Action&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="Action&lt;System.Web.ModuleConfigurationInfo&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Web.ModuleConfigurationInfo&gt;.Action&lt;System.Web.ModuleConfigurationInfo&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.ModuleConfigurationInfo;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Web.ModuleConfigurationInfo&gt;.BeginInvoke(System.Web.ModuleConfigurationInfo;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Web.ModuleConfigurationInfo&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Action&lt;System.Web.ModuleConfigurationInfo&gt;.Invoke(System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
		</class>
		<class name="Comparison&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Comparison&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Cart;MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Cart&gt;.BeginInvoke(MvcMusicStore.Models.Cart;MvcMusicStore.Models.Cart;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Comparison&lt;MvcMusicStore.Models.Cart&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Cart&gt;.Comparison&lt;MvcMusicStore.Models.Cart&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Cart&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Cart;MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Cart&gt;.Invoke(MvcMusicStore.Models.Cart;MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
		</class>
		<class name="Array" uniqueID="System.Array">
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Int32;System.Int32;System.Object):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Int32;System.Int32;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Object):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Clear" uniqueID="Clear(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Clear(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CombineHashCodes" uniqueID="CombineHashCodes(System.Int32;System.Int32):System.Int32">
				<signature>System.Array.CombineHashCodes(System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConstrainedCopy" uniqueID="ConstrainedCopy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.ConstrainedCopy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Array;System.Int32):System.Void">
				<signature>System.Array.Copy(System.Array;System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Array;System.Int64):System.Void">
				<signature>System.Array.Copy(System.Array;System.Array;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32;System.Boolean):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int64;System.Array;System.Int64;System.Int64):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int64;System.Array;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32;System.Int32;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int64[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int64[]):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMedian" uniqueID="GetMedian(System.Int32;System.Int32):System.Int32">
				<signature>System.Array.GetMedian(System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object;System.Int32):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalCreate" uniqueID="InternalCreate(System.Void;System.Int32;System.Int32;System.Int32):System.Array">
				<signature>System.Array.InternalCreate(System.Void;System.Int32;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalSetValue" uniqueID="InternalSetValue(System.Void;System.Object):System.Void">
				<signature>System.Array.InternalSetValue(System.Void;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object;System.Int32):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Reverse" uniqueID="Reverse(System.Array):System.Void">
				<signature>System.Array.Reverse(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Reverse" uniqueID="Reverse(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Reverse(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array):System.Void">
				<signature>System.Array.Sort(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Sort(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZBinarySearch" uniqueID="TrySZBinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZBinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZIndexOf" uniqueID="TrySZIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZLastIndexOf" uniqueID="TrySZLastIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZLastIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZReverse" uniqueID="TrySZReverse(System.Array;System.Int32;System.Int32):System.Boolean">
				<signature>System.Array.TrySZReverse(System.Array;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZSort" uniqueID="TrySZSort(System.Array;System.Array;System.Int32;System.Int32):System.Boolean">
				<signature>System.Array.TrySZSort(System.Array;System.Array;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateInstance" uniqueID="UnsafeCreateInstance(System.Type;System.Int32):System.Array">
				<signature>System.Array.UnsafeCreateInstance(System.Type;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateInstance" uniqueID="UnsafeCreateInstance(System.Type;System.Int32;System.Int32):System.Array">
				<signature>System.Array.UnsafeCreateInstance(System.Type;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateInstance" uniqueID="UnsafeCreateInstance(System.Type;System.Int32[]):System.Array">
				<signature>System.Array.UnsafeCreateInstance(System.Type;System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateInstance" uniqueID="UnsafeCreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array">
				<signature>System.Array.UnsafeCreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Array" uniqueID="Array():System.Void">
				<signature>System.Array.Array():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.Array.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Array.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int64):System.Void">
				<signature>System.Array.CopyTo(System.Array;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDataPtrOffsetInternal" uniqueID="GetDataPtrOffsetInternal():System.Int32">
				<signature>System.Array.GetDataPtrOffsetInternal():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Array.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLength" uniqueID="GetLength(System.Int32):System.Int32">
				<signature>System.Array.GetLength(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLongLength" uniqueID="GetLongLength(System.Int32):System.Int64">
				<signature>System.Array.GetLongLength(System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLowerBound" uniqueID="GetLowerBound(System.Int32):System.Int32">
				<signature>System.Array.GetLowerBound(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetUpperBound" uniqueID="GetUpperBound(System.Int32):System.Int32">
				<signature>System.Array.GetUpperBound(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32;System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32;System.Int32;System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32;System.Int32;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32[]):System.Object">
				<signature>System.Array.GetValue(System.Int32[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64;System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64;System.Int64;System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64;System.Int64;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64[]):System.Object">
				<signature>System.Array.GetValue(System.Int64[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Array.Initialize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalGetReference" uniqueID="InternalGetReference(System.Void;System.Int32;System.Int32):System.Void">
				<signature>System.Array.InternalGetReference(System.Void;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32[]):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64;System.Int64;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64[]):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_Count" uniqueID="System.Collections.ICollection.get_Count():System.Int32">
				<signature>System.Array.System.Collections.ICollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Array.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Array.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Array.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Array.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Array.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Array.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IStructuralComparable.CompareTo" uniqueID="System.Collections.IStructuralComparable.CompareTo(System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Array.System.Collections.IStructuralComparable.CompareTo(System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IStructuralEquatable.Equals" uniqueID="System.Collections.IStructuralEquatable.Equals(System.Object;System.Collections.IEqualityComparer):System.Boolean">
				<signature>System.Array.System.Collections.IStructuralEquatable.Equals(System.Object;System.Collections.IEqualityComparer):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IStructuralEquatable.GetHashCode" uniqueID="System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer):System.Int32">
				<signature>System.Array.System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Array.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Array.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Array.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Length" uniqueID="get_Length():System.Int32">
				<signature>System.Array.get_Length():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LongLength" uniqueID="get_LongLength():System.Int64">
				<signature>System.Array.get_LongLength():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Rank" uniqueID="get_Rank():System.Int32">
				<signature>System.Array.get_Rank():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Array.get_SyncRoot():System.Object</signature>
			</method>
		</class>
		<class name="Enum+EnumResult" uniqueID="System.Enum+EnumResult">
			<method accessibility="Protected" methodKind="Member" name="GetEnumParseException" uniqueID="GetEnumParseException():System.Exception">
				<signature>System.Enum+EnumResult.GetEnumParseException():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Init" uniqueID="Init(System.Boolean):System.Void">
				<signature>System.Enum+EnumResult.Init(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Enum+ParseFailureKind;System.String):System.Void">
				<signature>System.Enum+EnumResult.SetFailure(System.Enum+ParseFailureKind;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Enum+ParseFailureKind;System.String;System.Object):System.Void">
				<signature>System.Enum+EnumResult.SetFailure(System.Enum+ParseFailureKind;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Exception):System.Void">
				<signature>System.Enum+EnumResult.SetFailure(System.Exception):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Artist;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;.BeginInvoke(MvcMusicStore.Models.Artist;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;.Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Artist,System.Boolean&gt;.Invoke(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
		</class>
		<class name="Attribute" uniqueID="System.Attribute">
			<method accessibility="Private" methodKind="Static" name="AddAttributesToList" uniqueID="AddAttributesToList(System.Collections.Generic.List&lt;System.Attribute&gt;;System.Attribute[];System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Attribute.AddAttributesToList(System.Collections.Generic.List&lt;System.Attribute&gt;;System.Attribute[];System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="AreFieldValuesEqual" uniqueID="AreFieldValuesEqual(System.Object;System.Object):System.Boolean">
				<signature>System.Attribute.AreFieldValuesEqual(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CopyToArrayList" uniqueID="CopyToArrayList(System.Collections.Generic.List&lt;System.Attribute&gt;;System.Attribute[];System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Attribute.CopyToArrayList(System.Collections.Generic.List&lt;System.Attribute&gt;;System.Attribute[];System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateAttributeArrayHelper" uniqueID="CreateAttributeArrayHelper(System.Type;System.Int32):System.Attribute[]">
				<signature>System.Attribute.CreateAttributeArrayHelper(System.Type;System.Int32):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Assembly;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Assembly;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.MemberInfo;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Module;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Module;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Module;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Module;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.ParameterInfo;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParentDefinition" uniqueID="GetParentDefinition(System.Reflection.EventInfo):System.Reflection.EventInfo">
				<signature>System.Attribute.GetParentDefinition(System.Reflection.EventInfo):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParentDefinition" uniqueID="GetParentDefinition(System.Reflection.ParameterInfo):System.Reflection.ParameterInfo">
				<signature>System.Attribute.GetParentDefinition(System.Reflection.ParameterInfo):System.Reflection.ParameterInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParentDefinition" uniqueID="GetParentDefinition(System.Reflection.PropertyInfo):System.Reflection.PropertyInfo">
				<signature>System.Attribute.GetParentDefinition(System.Reflection.PropertyInfo):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetAttributeUsage" uniqueID="InternalGetAttributeUsage(System.Type):System.AttributeUsageAttribute">
				<signature>System.Attribute.InternalGetAttributeUsage(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetCustomAttributes" uniqueID="InternalGetCustomAttributes(System.Reflection.EventInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalGetCustomAttributes(System.Reflection.EventInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetCustomAttributes" uniqueID="InternalGetCustomAttributes(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalGetCustomAttributes(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalIsDefined" uniqueID="InternalIsDefined(System.Reflection.EventInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalIsDefined(System.Reflection.EventInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalIsDefined" uniqueID="InternalIsDefined(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalIsDefined(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalParamGetCustomAttributes" uniqueID="InternalParamGetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalParamGetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalParamIsDefined" uniqueID="InternalParamIsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalParamIsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Assembly;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Assembly;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Assembly;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Assembly;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.MemberInfo;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.MemberInfo;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Module;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Module;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Module;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Module;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.ParameterInfo;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.ParameterInfo;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Attribute" uniqueID="Attribute():System.Void">
				<signature>System.Attribute.Attribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Attribute.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Attribute.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefaultAttribute" uniqueID="IsDefaultAttribute():System.Boolean">
				<signature>System.Attribute.IsDefaultAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Match" uniqueID="Match(System.Object):System.Boolean">
				<signature>System.Attribute.Match(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetTypeInfo" uniqueID="System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.Invoke" uniqueID="System.Runtime.InteropServices._Attribute.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeId" uniqueID="get_TypeId():System.Object">
				<signature>System.Attribute.get_TypeId():System.Object</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;.BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Genre">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;.EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Album):MvcMusicStore.Models.Genre">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;.Invoke(MvcMusicStore.Models.Album):MvcMusicStore.Models.Genre</signature>
			</method>
		</class>
		<class name="IConvertible" uniqueID="System.IConvertible">
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.IConvertible.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToBoolean" uniqueID="ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToByte" uniqueID="ToByte(System.IFormatProvider):System.Byte">
				<signature>System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToChar" uniqueID="ToChar(System.IFormatProvider):System.Char">
				<signature>System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDateTime" uniqueID="ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDecimal" uniqueID="ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDouble" uniqueID="ToDouble(System.IFormatProvider):System.Double">
				<signature>System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt16" uniqueID="ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt32" uniqueID="ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt64" uniqueID="ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToSByte" uniqueID="ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToSingle" uniqueID="ToSingle(System.IFormatProvider):System.Single">
				<signature>System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.IConvertible.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToType" uniqueID="ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt16" uniqueID="ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt32" uniqueID="ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt64" uniqueID="ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Attribute&gt;" uniqueID="System.Comparison&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Attribute;System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Attribute&gt;.BeginInvoke(System.Attribute;System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Attribute&gt;" uniqueID="Comparison&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Attribute&gt;.Comparison&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Attribute&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Attribute;System.Attribute):System.Int32">
				<signature>System.Comparison&lt;System.Attribute&gt;.Invoke(System.Attribute;System.Attribute):System.Int32</signature>
			</method>
		</class>
		<class name="IFormattable" uniqueID="System.IFormattable">
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.IFormattable.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Enum" uniqueID="System.Enum">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Enum.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.Type;System.Object;System.String):System.String">
				<signature>System.Enum.Format(System.Type;System.Object;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetCachedValuesAndNames" uniqueID="GetCachedValuesAndNames(System.RuntimeType;System.UInt64[];System.String[];System.Boolean;System.Boolean):System.Void">
				<signature>System.Enum.GetCachedValuesAndNames(System.RuntimeType;System.UInt64[];System.String[];System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetEnumValuesAndNames" uniqueID="GetEnumValuesAndNames(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Boolean;System.Boolean):System.Void">
				<signature>System.Enum.GetEnumValuesAndNames(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetHashEntry" uniqueID="GetHashEntry(System.RuntimeType):System.Enum+HashEntry">
				<signature>System.Enum.GetHashEntry(System.RuntimeType):System.Enum+HashEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetName" uniqueID="GetName(System.Type;System.Object):System.String">
				<signature>System.Enum.GetName(System.Type;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetNames" uniqueID="GetNames(System.Type):System.String[]">
				<signature>System.Enum.GetNames(System.Type):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUnderlyingType" uniqueID="GetUnderlyingType(System.Type):System.Type">
				<signature>System.Enum.GetUnderlyingType(System.Type):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetValues" uniqueID="GetValues(System.Type):System.Array">
				<signature>System.Enum.GetValues(System.Type):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalBoxEnum" uniqueID="InternalBoxEnum(System.RuntimeType;System.Int64):System.Object">
				<signature>System.Enum.InternalBoxEnum(System.RuntimeType;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalCompareTo" uniqueID="InternalCompareTo(System.Object;System.Object):System.Int32">
				<signature>System.Enum.InternalCompareTo(System.Object;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFlagsFormat" uniqueID="InternalFlagsFormat(System.RuntimeType;System.Object):System.String">
				<signature>System.Enum.InternalFlagsFormat(System.RuntimeType;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFormat" uniqueID="InternalFormat(System.RuntimeType;System.Object):System.String">
				<signature>System.Enum.InternalFormat(System.RuntimeType;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFormattedHexString" uniqueID="InternalFormattedHexString(System.Object):System.String">
				<signature>System.Enum.InternalFormattedHexString(System.Object):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalGetNames" uniqueID="InternalGetNames(System.RuntimeType):System.String[]">
				<signature>System.Enum.InternalGetNames(System.RuntimeType):System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalGetUnderlyingType" uniqueID="InternalGetUnderlyingType(System.RuntimeType):System.RuntimeType">
				<signature>System.Enum.InternalGetUnderlyingType(System.RuntimeType):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalGetValues" uniqueID="InternalGetValues(System.RuntimeType):System.UInt64[]">
				<signature>System.Enum.InternalGetValues(System.RuntimeType):System.UInt64[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Type;System.Object):System.Boolean">
				<signature>System.Enum.IsDefined(System.Type;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.Type;System.String):System.Object">
				<signature>System.Enum.Parse(System.Type;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.Type;System.String;System.Boolean):System.Object">
				<signature>System.Enum.Parse(System.Type;System.String;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Boolean):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Byte):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Byte):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Char):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Char):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int16):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int16):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int32):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int64):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Object):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.SByte):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.SByte):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt16):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt16):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt32):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt64):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt64):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Object):System.UInt64">
				<signature>System.Enum.ToUInt64(System.Object):System.UInt64</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryParseEnum" uniqueID="TryParseEnum(System.Type;System.String;System.Boolean;System.Enum+EnumResult):System.Boolean">
				<signature>System.Enum.TryParseEnum(System.Type;System.String;System.Boolean;System.Enum+EnumResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Enum.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Enum" uniqueID="Enum():System.Void">
				<signature>System.Enum.Enum():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Enum.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Enum.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Enum.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValue" uniqueID="GetValue():System.Object">
				<signature>System.Enum.GetValue():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HasFlag" uniqueID="HasFlag(System.Enum):System.Boolean">
				<signature>System.Enum.HasFlag(System.Enum):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalGetValue" uniqueID="InternalGetValue():System.Object">
				<signature>System.Enum.InternalGetValue():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalHasFlag" uniqueID="InternalHasFlag(System.Enum):System.Boolean">
				<signature>System.Enum.InternalHasFlag(System.Enum):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Enum.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Enum.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Enum.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Enum.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Enum.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Enum.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Enum.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Enum.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Enum.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Enum.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Enum.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Enum.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Enum.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Enum.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Enum.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Enum.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Enum.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Enum.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Enum.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Comparison&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Comparison&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Album;MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Album&gt;.BeginInvoke(MvcMusicStore.Models.Album;MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Comparison&lt;MvcMusicStore.Models.Album&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Album&gt;.Comparison&lt;MvcMusicStore.Models.Album&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Album&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Album;MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Album&gt;.Invoke(MvcMusicStore.Models.Album;MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Comparison&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Order;MvcMusicStore.Models.Order;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Order&gt;.BeginInvoke(MvcMusicStore.Models.Order;MvcMusicStore.Models.Order;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;MvcMusicStore.Models.Order&gt;" uniqueID="Comparison&lt;MvcMusicStore.Models.Order&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Order&gt;.Comparison&lt;MvcMusicStore.Models.Order&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Order&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Order;MvcMusicStore.Models.Order):System.Int32">
				<signature>System.Comparison&lt;MvcMusicStore.Models.Order&gt;.Invoke(MvcMusicStore.Models.Order;MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Objects.Internal.IEntityWrapper;System.Data.Objects.Internal.IEntityWrapper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.BeginInvoke(System.Data.Objects.Internal.IEntityWrapper;System.Data.Objects.Internal.IEntityWrapper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Objects.Internal.IEntityWrapper;System.Data.Objects.Internal.IEntityWrapper):System.Int32">
				<signature>System.Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Invoke(System.Data.Objects.Internal.IEntityWrapper;System.Data.Objects.Internal.IEntityWrapper):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Comparison&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.ModuleConfigurationInfo;System.Web.ModuleConfigurationInfo;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Web.ModuleConfigurationInfo&gt;.BeginInvoke(System.Web.ModuleConfigurationInfo;System.Web.ModuleConfigurationInfo;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="Comparison&lt;System.Web.ModuleConfigurationInfo&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Web.ModuleConfigurationInfo&gt;.Comparison&lt;System.Web.ModuleConfigurationInfo&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Web.ModuleConfigurationInfo&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.ModuleConfigurationInfo;System.Web.ModuleConfigurationInfo):System.Int32">
				<signature>System.Comparison&lt;System.Web.ModuleConfigurationInfo&gt;.Invoke(System.Web.ModuleConfigurationInfo;System.Web.ModuleConfigurationInfo):System.Int32</signature>
			</method>
		</class>
		<class name="DateTime" uniqueID="System.DateTime">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.DateTime.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.DateTime;System.DateTime):System.Int32">
				<signature>System.DateTime.Compare(System.DateTime;System.DateTime):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DateToTicks" uniqueID="DateToTicks(System.Int32;System.Int32;System.Int32):System.Int64">
				<signature>System.DateTime.DateToTicks(System.Int32;System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DaysInMonth" uniqueID="DaysInMonth(System.Int32;System.Int32):System.Int32">
				<signature>System.DateTime.DaysInMonth(System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DoubleDateToTicks" uniqueID="DoubleDateToTicks(System.Double):System.Int64">
				<signature>System.DateTime.DoubleDateToTicks(System.Double):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.DateTime;System.DateTime):System.Boolean">
				<signature>System.DateTime.Equals(System.DateTime;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromBinary" uniqueID="FromBinary(System.Int64):System.DateTime">
				<signature>System.DateTime.FromBinary(System.Int64):System.DateTime</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromBinaryRaw" uniqueID="FromBinaryRaw(System.Int64):System.DateTime">
				<signature>System.DateTime.FromBinaryRaw(System.Int64):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromFileTime" uniqueID="FromFileTime(System.Int64):System.DateTime">
				<signature>System.DateTime.FromFileTime(System.Int64):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromFileTimeUtc" uniqueID="FromFileTimeUtc(System.Int64):System.DateTime">
				<signature>System.DateTime.FromFileTimeUtc(System.Int64):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromOADate" uniqueID="FromOADate(System.Double):System.DateTime">
				<signature>System.DateTime.FromOADate(System.Double):System.DateTime</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSystemTimeAsFileTime" uniqueID="GetSystemTimeAsFileTime():System.Int64">
				<signature>System.DateTime.GetSystemTimeAsFileTime():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLeapYear" uniqueID="IsLeapYear(System.Int32):System.Boolean">
				<signature>System.DateTime.IsLeapYear(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String):System.DateTime">
				<signature>System.DateTime.Parse(System.String):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.IFormatProvider):System.DateTime">
				<signature>System.DateTime.Parse(System.String;System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.IFormatProvider;System.Globalization.DateTimeStyles):System.DateTime">
				<signature>System.DateTime.Parse(System.String;System.IFormatProvider;System.Globalization.DateTimeStyles):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ParseExact" uniqueID="ParseExact(System.String;System.String;System.IFormatProvider):System.DateTime">
				<signature>System.DateTime.ParseExact(System.String;System.String;System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ParseExact" uniqueID="ParseExact(System.String;System.String;System.IFormatProvider;System.Globalization.DateTimeStyles):System.DateTime">
				<signature>System.DateTime.ParseExact(System.String;System.String;System.IFormatProvider;System.Globalization.DateTimeStyles):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ParseExact" uniqueID="ParseExact(System.String;System.String[];System.IFormatProvider;System.Globalization.DateTimeStyles):System.DateTime">
				<signature>System.DateTime.ParseExact(System.String;System.String[];System.IFormatProvider;System.Globalization.DateTimeStyles):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SpecifyKind" uniqueID="SpecifyKind(System.DateTime;System.DateTimeKind):System.DateTime">
				<signature>System.DateTime.SpecifyKind(System.DateTime;System.DateTimeKind):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TicksToOADate" uniqueID="TicksToOADate(System.Int64):System.Double">
				<signature>System.DateTime.TicksToOADate(System.Int64):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TimeToTicks" uniqueID="TimeToTicks(System.Int32;System.Int32;System.Int32):System.Int64">
				<signature>System.DateTime.TimeToTicks(System.Int32;System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="TryCreate" uniqueID="TryCreate(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.DateTime):System.Boolean">
				<signature>System.DateTime.TryCreate(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.DateTime):System.Boolean">
				<signature>System.DateTime.TryParse(System.String;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.IFormatProvider;System.Globalization.DateTimeStyles;System.DateTime):System.Boolean">
				<signature>System.DateTime.TryParse(System.String;System.IFormatProvider;System.Globalization.DateTimeStyles;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParseExact" uniqueID="TryParseExact(System.String;System.String;System.IFormatProvider;System.Globalization.DateTimeStyles;System.DateTime):System.Boolean">
				<signature>System.DateTime.TryParseExact(System.String;System.String;System.IFormatProvider;System.Globalization.DateTimeStyles;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParseExact" uniqueID="TryParseExact(System.String;System.String[];System.IFormatProvider;System.Globalization.DateTimeStyles;System.DateTime):System.Boolean">
				<signature>System.DateTime.TryParseExact(System.String;System.String[];System.IFormatProvider;System.Globalization.DateTimeStyles;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Now" uniqueID="get_Now():System.DateTime">
				<signature>System.DateTime.get_Now():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Today" uniqueID="get_Today():System.DateTime">
				<signature>System.DateTime.get_Today():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_UtcNow" uniqueID="get_UtcNow():System.DateTime">
				<signature>System.DateTime.get_UtcNow():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Addition" uniqueID="op_Addition(System.DateTime;System.TimeSpan):System.DateTime">
				<signature>System.DateTime.op_Addition(System.DateTime;System.TimeSpan):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.DateTime;System.DateTime):System.Boolean">
				<signature>System.DateTime.op_Equality(System.DateTime;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_GreaterThan" uniqueID="op_GreaterThan(System.DateTime;System.DateTime):System.Boolean">
				<signature>System.DateTime.op_GreaterThan(System.DateTime;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_GreaterThanOrEqual" uniqueID="op_GreaterThanOrEqual(System.DateTime;System.DateTime):System.Boolean">
				<signature>System.DateTime.op_GreaterThanOrEqual(System.DateTime;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.DateTime;System.DateTime):System.Boolean">
				<signature>System.DateTime.op_Inequality(System.DateTime;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_LessThan" uniqueID="op_LessThan(System.DateTime;System.DateTime):System.Boolean">
				<signature>System.DateTime.op_LessThan(System.DateTime;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_LessThanOrEqual" uniqueID="op_LessThanOrEqual(System.DateTime;System.DateTime):System.Boolean">
				<signature>System.DateTime.op_LessThanOrEqual(System.DateTime;System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Subtraction" uniqueID="op_Subtraction(System.DateTime;System.DateTime):System.TimeSpan">
				<signature>System.DateTime.op_Subtraction(System.DateTime;System.DateTime):System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Subtraction" uniqueID="op_Subtraction(System.DateTime;System.TimeSpan):System.DateTime">
				<signature>System.DateTime.op_Subtraction(System.DateTime;System.TimeSpan):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Add" uniqueID="Add(System.Double;System.Int32):System.DateTime">
				<signature>System.DateTime.Add(System.Double;System.Int32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.TimeSpan):System.DateTime">
				<signature>System.DateTime.Add(System.TimeSpan):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddDays" uniqueID="AddDays(System.Double):System.DateTime">
				<signature>System.DateTime.AddDays(System.Double):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddHours" uniqueID="AddHours(System.Double):System.DateTime">
				<signature>System.DateTime.AddHours(System.Double):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddMilliseconds" uniqueID="AddMilliseconds(System.Double):System.DateTime">
				<signature>System.DateTime.AddMilliseconds(System.Double):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddMinutes" uniqueID="AddMinutes(System.Double):System.DateTime">
				<signature>System.DateTime.AddMinutes(System.Double):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddMonths" uniqueID="AddMonths(System.Int32):System.DateTime">
				<signature>System.DateTime.AddMonths(System.Int32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddSeconds" uniqueID="AddSeconds(System.Double):System.DateTime">
				<signature>System.DateTime.AddSeconds(System.Double):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddTicks" uniqueID="AddTicks(System.Int64):System.DateTime">
				<signature>System.DateTime.AddTicks(System.Int64):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddYears" uniqueID="AddYears(System.Int32):System.DateTime">
				<signature>System.DateTime.AddYears(System.Int32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.DateTime):System.Int32">
				<signature>System.DateTime.CompareTo(System.DateTime):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.DateTime.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32;System.Globalization.Calendar):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32;System.Globalization.Calendar):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.DateTimeKind):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.DateTimeKind):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Globalization.Calendar):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Globalization.Calendar):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.DateTimeKind):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.DateTimeKind):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Globalization.Calendar):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Globalization.Calendar):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Globalization.Calendar;System.DateTimeKind):System.Void">
				<signature>System.DateTime.DateTime(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Globalization.Calendar;System.DateTimeKind):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int64):System.Void">
				<signature>System.DateTime.DateTime(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int64;System.DateTimeKind):System.Void">
				<signature>System.DateTime.DateTime(System.Int64;System.DateTimeKind):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Int64;System.DateTimeKind;System.Boolean):System.Void">
				<signature>System.DateTime.DateTime(System.Int64;System.DateTimeKind;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DateTime" uniqueID="DateTime(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.DateTime.DateTime(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DateTime" uniqueID="DateTime(System.UInt64):System.Void">
				<signature>System.DateTime.DateTime(System.UInt64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.DateTime):System.Boolean">
				<signature>System.DateTime.Equals(System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.DateTime.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDatePart" uniqueID="GetDatePart(System.Int32):System.Int32">
				<signature>System.DateTime.GetDatePart(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDateTimeFormats" uniqueID="GetDateTimeFormats():System.String[]">
				<signature>System.DateTime.GetDateTimeFormats():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDateTimeFormats" uniqueID="GetDateTimeFormats(System.Char):System.String[]">
				<signature>System.DateTime.GetDateTimeFormats(System.Char):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDateTimeFormats" uniqueID="GetDateTimeFormats(System.Char;System.IFormatProvider):System.String[]">
				<signature>System.DateTime.GetDateTimeFormats(System.Char;System.IFormatProvider):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDateTimeFormats" uniqueID="GetDateTimeFormats(System.IFormatProvider):System.String[]">
				<signature>System.DateTime.GetDateTimeFormats(System.IFormatProvider):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.DateTime.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.DateTime.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsAmbiguousDaylightSavingTime" uniqueID="IsAmbiguousDaylightSavingTime():System.Boolean">
				<signature>System.DateTime.IsAmbiguousDaylightSavingTime():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDaylightSavingTime" uniqueID="IsDaylightSavingTime():System.Boolean">
				<signature>System.DateTime.IsDaylightSavingTime():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Subtract" uniqueID="Subtract(System.DateTime):System.TimeSpan">
				<signature>System.DateTime.Subtract(System.DateTime):System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Subtract" uniqueID="Subtract(System.TimeSpan):System.DateTime">
				<signature>System.DateTime.Subtract(System.TimeSpan):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.DateTime.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.DateTime.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.DateTime.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.DateTime.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.DateTime.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.DateTime.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.DateTime.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.DateTime.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.DateTime.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.DateTime.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.DateTime.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.DateTime.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.DateTime.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.DateTime.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.DateTime.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.Serialization.ISerializable.GetObjectData" uniqueID="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.DateTime.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToBinary" uniqueID="ToBinary():System.Int64">
				<signature>System.DateTime.ToBinary():System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ToBinaryRaw" uniqueID="ToBinaryRaw():System.Int64">
				<signature>System.DateTime.ToBinaryRaw():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToFileTime" uniqueID="ToFileTime():System.Int64">
				<signature>System.DateTime.ToFileTime():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToFileTimeUtc" uniqueID="ToFileTimeUtc():System.Int64">
				<signature>System.DateTime.ToFileTimeUtc():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLocalTime" uniqueID="ToLocalTime():System.DateTime">
				<signature>System.DateTime.ToLocalTime():System.DateTime</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ToLocalTime" uniqueID="ToLocalTime(System.Boolean):System.DateTime">
				<signature>System.DateTime.ToLocalTime(System.Boolean):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLongDateString" uniqueID="ToLongDateString():System.String">
				<signature>System.DateTime.ToLongDateString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLongTimeString" uniqueID="ToLongTimeString():System.String">
				<signature>System.DateTime.ToLongTimeString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToOADate" uniqueID="ToOADate():System.Double">
				<signature>System.DateTime.ToOADate():System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToShortDateString" uniqueID="ToShortDateString():System.String">
				<signature>System.DateTime.ToShortDateString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToShortTimeString" uniqueID="ToShortTimeString():System.String">
				<signature>System.DateTime.ToShortTimeString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.DateTime.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.DateTime.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.DateTime.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.DateTime.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUniversalTime" uniqueID="ToUniversalTime():System.DateTime">
				<signature>System.DateTime.ToUniversalTime():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Date" uniqueID="get_Date():System.DateTime">
				<signature>System.DateTime.get_Date():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Day" uniqueID="get_Day():System.Int32">
				<signature>System.DateTime.get_Day():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DayOfWeek" uniqueID="get_DayOfWeek():System.DayOfWeek">
				<signature>System.DateTime.get_DayOfWeek():System.DayOfWeek</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DayOfYear" uniqueID="get_DayOfYear():System.Int32">
				<signature>System.DateTime.get_DayOfYear():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Hour" uniqueID="get_Hour():System.Int32">
				<signature>System.DateTime.get_Hour():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_InternalKind" uniqueID="get_InternalKind():System.UInt64">
				<signature>System.DateTime.get_InternalKind():System.UInt64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalTicks" uniqueID="get_InternalTicks():System.Int64">
				<signature>System.DateTime.get_InternalTicks():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Kind" uniqueID="get_Kind():System.DateTimeKind">
				<signature>System.DateTime.get_Kind():System.DateTimeKind</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Millisecond" uniqueID="get_Millisecond():System.Int32">
				<signature>System.DateTime.get_Millisecond():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Minute" uniqueID="get_Minute():System.Int32">
				<signature>System.DateTime.get_Minute():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Month" uniqueID="get_Month():System.Int32">
				<signature>System.DateTime.get_Month():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Second" uniqueID="get_Second():System.Int32">
				<signature>System.DateTime.get_Second():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Ticks" uniqueID="get_Ticks():System.Int64">
				<signature>System.DateTime.get_Ticks():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TimeOfDay" uniqueID="get_TimeOfDay():System.TimeSpan">
				<signature>System.DateTime.get_TimeOfDay():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Year" uniqueID="get_Year():System.Int32">
				<signature>System.DateTime.get_Year():System.Int32</signature>
			</method>
		</class>
		<class name="Exception" uniqueID="System.Exception">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Exception.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CopyDynamicMethods" uniqueID="CopyDynamicMethods(System.Object):System.Object">
				<signature>System.Exception.CopyDynamicMethods(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CopyStackTrace" uniqueID="CopyStackTrace(System.Object):System.Object">
				<signature>System.Exception.CopyStackTrace(System.Object):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMessageFromNativeResources" uniqueID="GetMessageFromNativeResources(System.Exception+ExceptionMessageKind):System.String">
				<signature>System.Exception.GetMessageFromNativeResources(System.Exception+ExceptionMessageKind):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMessageFromNativeResources" uniqueID="GetMessageFromNativeResources(System.Exception+ExceptionMessageKind;System.Runtime.CompilerServices.StringHandleOnStack):System.Void">
				<signature>System.Exception.GetMessageFromNativeResources(System.Exception+ExceptionMessageKind;System.Runtime.CompilerServices.StringHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMethodFromStackTrace" uniqueID="GetMethodFromStackTrace(System.Object):System.IRuntimeMethodInfo">
				<signature>System.Exception.GetMethodFromStackTrace(System.Object):System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetStackTracesDeepCopy" uniqueID="GetStackTracesDeepCopy(System.Exception;System.Object;System.Object):System.Void">
				<signature>System.Exception.GetStackTracesDeepCopy(System.Exception;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsImmutableAgileException" uniqueID="IsImmutableAgileException(System.Exception):System.Boolean">
				<signature>System.Exception.IsImmutableAgileException(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PrepareForForeignExceptionRaise" uniqueID="PrepareForForeignExceptionRaise():System.Void">
				<signature>System.Exception.PrepareForForeignExceptionRaise():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SaveStackTracesFromDeepCopy" uniqueID="SaveStackTracesFromDeepCopy(System.Exception;System.Object;System.Object):System.Void">
				<signature>System.Exception.SaveStackTracesFromDeepCopy(System.Exception;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="nIsTransient" uniqueID="nIsTransient(System.Int32):System.Boolean">
				<signature>System.Exception.nIsTransient(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddExceptionDataForRestrictedErrorInfo" uniqueID="AddExceptionDataForRestrictedErrorInfo(System.String;System.String;System.String;System.Object):System.Void">
				<signature>System.Exception.AddExceptionDataForRestrictedErrorInfo(System.String;System.String;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeepCopyDynamicMethods" uniqueID="DeepCopyDynamicMethods(System.Object):System.Object">
				<signature>System.Exception.DeepCopyDynamicMethods(System.Object):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeepCopyStackTrace" uniqueID="DeepCopyStackTrace(System.Object):System.Object">
				<signature>System.Exception.DeepCopyStackTrace(System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception():System.Void">
				<signature>System.Exception.Exception():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Exception" uniqueID="Exception(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Exception.Exception(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception(System.String):System.Void">
				<signature>System.Exception.Exception(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception(System.String;System.Exception):System.Void">
				<signature>System.Exception.Exception(System.String;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBaseException" uniqueID="GetBaseException():System.Exception">
				<signature>System.Exception.GetBaseException():System.Exception</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetClassName" uniqueID="GetClassName():System.String">
				<signature>System.Exception.GetClassName():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptionMethodFromStackTrace" uniqueID="GetExceptionMethodFromStackTrace():System.Reflection.MethodBase">
				<signature>System.Exception.GetExceptionMethodFromStackTrace():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptionMethodFromString" uniqueID="GetExceptionMethodFromString():System.Reflection.MethodBase">
				<signature>System.Exception.GetExceptionMethodFromString():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptionMethodString" uniqueID="GetExceptionMethodString():System.String">
				<signature>System.Exception.GetExceptionMethodString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetStackTrace" uniqueID="GetStackTrace(System.Boolean):System.String">
				<signature>System.Exception.GetStackTrace(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetStackTracesDeepCopy" uniqueID="GetStackTracesDeepCopy(System.Object;System.Object):System.Void">
				<signature>System.Exception.GetStackTracesDeepCopy(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetTargetSiteInternal" uniqueID="GetTargetSiteInternal():System.Reflection.MethodBase">
				<signature>System.Exception.GetTargetSiteInternal():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Exception.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Init" uniqueID="Init():System.Void">
				<signature>System.Exception.Init():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalPreserveStackTrace" uniqueID="InternalPreserveStackTrace():System.Void">
				<signature>System.Exception.InternalPreserveStackTrace():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalToString" uniqueID="InternalToString():System.String">
				<signature>System.Exception.InternalToString():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnDeserialized" uniqueID="OnDeserialized(System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Exception.OnDeserialized(System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PrepForRemoting" uniqueID="PrepForRemoting():System.Exception">
				<signature>System.Exception.PrepForRemoting():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RestoreExceptionDispatchInfo" uniqueID="RestoreExceptionDispatchInfo(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void">
				<signature>System.Exception.RestoreExceptionDispatchInfo(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetErrorCode" uniqueID="SetErrorCode(System.Int32):System.Void">
				<signature>System.Exception.SetErrorCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StripFileInfo" uniqueID="StripFileInfo(System.String;System.Boolean):System.String">
				<signature>System.Exception.StripFileInfo(System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Exception.ToString():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ToString" uniqueID="ToString(System.Boolean;System.Boolean):System.String">
				<signature>System.Exception.ToString(System.Boolean;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_SerializeObjectState" uniqueID="add_SerializeObjectState(System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;):System.Void">
				<signature>System.Exception.add_SerializeObjectState(System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Data" uniqueID="get_Data():System.Collections.IDictionary">
				<signature>System.Exception.get_Data():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HResult" uniqueID="get_HResult():System.Int32">
				<signature>System.Exception.get_HResult():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpLink" uniqueID="get_HelpLink():System.String">
				<signature>System.Exception.get_HelpLink():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IPForWatsonBuckets" uniqueID="get_IPForWatsonBuckets():System.UIntPtr">
				<signature>System.Exception.get_IPForWatsonBuckets():System.UIntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InnerException" uniqueID="get_InnerException():System.Exception">
				<signature>System.Exception.get_InnerException():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsTransient" uniqueID="get_IsTransient():System.Boolean">
				<signature>System.Exception.get_IsTransient():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Message" uniqueID="get_Message():System.String">
				<signature>System.Exception.get_Message():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RemoteStackTrace" uniqueID="get_RemoteStackTrace():System.String">
				<signature>System.Exception.get_RemoteStackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Source" uniqueID="get_Source():System.String">
				<signature>System.Exception.get_Source():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StackTrace" uniqueID="get_StackTrace():System.String">
				<signature>System.Exception.get_StackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TargetSite" uniqueID="get_TargetSite():System.Reflection.MethodBase">
				<signature>System.Exception.get_TargetSite():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_WatsonBuckets" uniqueID="get_WatsonBuckets():System.Object">
				<signature>System.Exception.get_WatsonBuckets():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_SerializeObjectState" uniqueID="remove_SerializeObjectState(System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;):System.Void">
				<signature>System.Exception.remove_SerializeObjectState(System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HResult" uniqueID="set_HResult(System.Int32):System.Void">
				<signature>System.Exception.set_HResult(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpLink" uniqueID="set_HelpLink(System.String):System.Void">
				<signature>System.Exception.set_HelpLink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Source" uniqueID="set_Source(System.String):System.Void">
				<signature>System.Exception.set_Source(System.String):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Order;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;.BeginInvoke(MvcMusicStore.Models.Order;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;.Invoke(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
		</class>
		<class name="IServiceProvider" uniqueID="System.IServiceProvider">
			<method accessibility="Public" methodKind="Member" name="GetService" uniqueID="GetService(System.Type):System.Object">
				<signature>System.IServiceProvider.GetService(System.Type):System.Object</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.DateTime&gt;" uniqueID="System.IComparable&lt;System.DateTime&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.DateTime):System.Int32">
				<signature>System.IComparable&lt;System.DateTime&gt;.CompareTo(System.DateTime):System.Int32</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.Decimal&gt;" uniqueID="System.IComparable&lt;System.Decimal&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Decimal):System.Int32">
				<signature>System.IComparable&lt;System.Decimal&gt;.CompareTo(System.Decimal):System.Int32</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.Decimal&gt;" uniqueID="System.IEquatable&lt;System.Decimal&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Decimal):System.Boolean">
				<signature>System.IEquatable&lt;System.Decimal&gt;.Equals(System.Decimal):System.Boolean</signature>
			</method>
		</class>
		<class name="Decimal" uniqueID="System.Decimal">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Decimal.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Abs" uniqueID="Abs(System.Decimal):System.Decimal">
				<signature>System.Decimal.Abs(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Add" uniqueID="Add(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.Add(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Ceiling" uniqueID="Ceiling(System.Decimal):System.Decimal">
				<signature>System.Decimal.Ceiling(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.Decimal;System.Decimal):System.Int32">
				<signature>System.Decimal.Compare(System.Decimal;System.Decimal):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Divide" uniqueID="Divide(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.Divide(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.Decimal;System.Decimal):System.Boolean">
				<signature>System.Decimal.Equals(System.Decimal;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallAddSub" uniqueID="FCallAddSub(System.Decimal;System.Decimal;System.Byte):System.Void">
				<signature>System.Decimal.FCallAddSub(System.Decimal;System.Decimal;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallAddSubOverflowed" uniqueID="FCallAddSubOverflowed(System.Decimal;System.Decimal;System.Byte;System.Boolean):System.Void">
				<signature>System.Decimal.FCallAddSubOverflowed(System.Decimal;System.Decimal;System.Byte;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallCompare" uniqueID="FCallCompare(System.Decimal;System.Decimal):System.Int32">
				<signature>System.Decimal.FCallCompare(System.Decimal;System.Decimal):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallDivide" uniqueID="FCallDivide(System.Decimal;System.Decimal):System.Void">
				<signature>System.Decimal.FCallDivide(System.Decimal;System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallDivideOverflowed" uniqueID="FCallDivideOverflowed(System.Decimal;System.Decimal;System.Boolean):System.Void">
				<signature>System.Decimal.FCallDivideOverflowed(System.Decimal;System.Decimal;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallFloor" uniqueID="FCallFloor(System.Decimal):System.Void">
				<signature>System.Decimal.FCallFloor(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallMultiply" uniqueID="FCallMultiply(System.Decimal;System.Decimal):System.Void">
				<signature>System.Decimal.FCallMultiply(System.Decimal;System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallMultiplyOverflowed" uniqueID="FCallMultiplyOverflowed(System.Decimal;System.Decimal;System.Boolean):System.Void">
				<signature>System.Decimal.FCallMultiplyOverflowed(System.Decimal;System.Decimal;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallRound" uniqueID="FCallRound(System.Decimal;System.Int32):System.Void">
				<signature>System.Decimal.FCallRound(System.Decimal;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallToCurrency" uniqueID="FCallToCurrency(System.Currency;System.Decimal):System.Void">
				<signature>System.Decimal.FCallToCurrency(System.Currency;System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FCallToInt32" uniqueID="FCallToInt32(System.Decimal):System.Int32">
				<signature>System.Decimal.FCallToInt32(System.Decimal):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FCallTruncate" uniqueID="FCallTruncate(System.Decimal):System.Void">
				<signature>System.Decimal.FCallTruncate(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Floor" uniqueID="Floor(System.Decimal):System.Decimal">
				<signature>System.Decimal.Floor(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromOACurrency" uniqueID="FromOACurrency(System.Int64):System.Decimal">
				<signature>System.Decimal.FromOACurrency(System.Int64):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetBits" uniqueID="GetBits(System.Decimal):System.Int32[]">
				<signature>System.Decimal.GetBits(System.Decimal):System.Int32[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetBytes" uniqueID="GetBytes(System.Decimal;System.Byte[]):System.Void">
				<signature>System.Decimal.GetBytes(System.Decimal;System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalAddUInt32RawUnchecked" uniqueID="InternalAddUInt32RawUnchecked(System.Decimal;System.UInt32):System.Void">
				<signature>System.Decimal.InternalAddUInt32RawUnchecked(System.Decimal;System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalDivRemUInt32" uniqueID="InternalDivRemUInt32(System.Decimal;System.UInt32):System.UInt32">
				<signature>System.Decimal.InternalDivRemUInt32(System.Decimal;System.UInt32):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalRoundFromZero" uniqueID="InternalRoundFromZero(System.Decimal;System.Int32):System.Void">
				<signature>System.Decimal.InternalRoundFromZero(System.Decimal;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Max" uniqueID="Max(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.Max(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Min" uniqueID="Min(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.Min(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Multiply" uniqueID="Multiply(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.Multiply(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Negate" uniqueID="Negate(System.Decimal):System.Decimal">
				<signature>System.Decimal.Negate(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String):System.Decimal">
				<signature>System.Decimal.Parse(System.String):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles):System.Decimal">
				<signature>System.Decimal.Parse(System.String;System.Globalization.NumberStyles):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Decimal">
				<signature>System.Decimal.Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.IFormatProvider):System.Decimal">
				<signature>System.Decimal.Parse(System.String;System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Remainder" uniqueID="Remainder(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.Remainder(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Round" uniqueID="Round(System.Decimal):System.Decimal">
				<signature>System.Decimal.Round(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Round" uniqueID="Round(System.Decimal;System.Int32):System.Decimal">
				<signature>System.Decimal.Round(System.Decimal;System.Int32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Round" uniqueID="Round(System.Decimal;System.Int32;System.MidpointRounding):System.Decimal">
				<signature>System.Decimal.Round(System.Decimal;System.Int32;System.MidpointRounding):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Round" uniqueID="Round(System.Decimal;System.MidpointRounding):System.Decimal">
				<signature>System.Decimal.Round(System.Decimal;System.MidpointRounding):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Subtract" uniqueID="Subtract(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.Subtract(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Decimal):System.Byte">
				<signature>System.Decimal.ToByte(System.Decimal):System.Byte</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ToCurrency" uniqueID="ToCurrency(System.Decimal):System.Currency">
				<signature>System.Decimal.ToCurrency(System.Decimal):System.Currency</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Byte[]):System.Decimal">
				<signature>System.Decimal.ToDecimal(System.Byte[]):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Decimal):System.Double">
				<signature>System.Decimal.ToDouble(System.Decimal):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Decimal):System.Int16">
				<signature>System.Decimal.ToInt16(System.Decimal):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Decimal):System.Int32">
				<signature>System.Decimal.ToInt32(System.Decimal):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Decimal):System.Int64">
				<signature>System.Decimal.ToInt64(System.Decimal):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToOACurrency" uniqueID="ToOACurrency(System.Decimal):System.Int64">
				<signature>System.Decimal.ToOACurrency(System.Decimal):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Decimal):System.SByte">
				<signature>System.Decimal.ToSByte(System.Decimal):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Decimal):System.Single">
				<signature>System.Decimal.ToSingle(System.Decimal):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Decimal):System.UInt16">
				<signature>System.Decimal.ToUInt16(System.Decimal):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Decimal):System.UInt32">
				<signature>System.Decimal.ToUInt32(System.Decimal):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Decimal):System.UInt64">
				<signature>System.Decimal.ToUInt64(System.Decimal):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Truncate" uniqueID="Truncate(System.Decimal):System.Decimal">
				<signature>System.Decimal.Truncate(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Decimal):System.Boolean">
				<signature>System.Decimal.TryParse(System.String;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Decimal):System.Boolean">
				<signature>System.Decimal.TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Addition" uniqueID="op_Addition(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.op_Addition(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Decrement" uniqueID="op_Decrement(System.Decimal):System.Decimal">
				<signature>System.Decimal.op_Decrement(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Division" uniqueID="op_Division(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.op_Division(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Decimal;System.Decimal):System.Boolean">
				<signature>System.Decimal.op_Equality(System.Decimal;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.Byte">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.Char">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.Double">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.Int16">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.Int32">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.Int64">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.SByte">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.Single">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.UInt16">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.UInt32">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Decimal):System.UInt64">
				<signature>System.Decimal.op_Explicit(System.Decimal):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Double):System.Decimal">
				<signature>System.Decimal.op_Explicit(System.Double):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Single):System.Decimal">
				<signature>System.Decimal.op_Explicit(System.Single):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_GreaterThan" uniqueID="op_GreaterThan(System.Decimal;System.Decimal):System.Boolean">
				<signature>System.Decimal.op_GreaterThan(System.Decimal;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_GreaterThanOrEqual" uniqueID="op_GreaterThanOrEqual(System.Decimal;System.Decimal):System.Boolean">
				<signature>System.Decimal.op_GreaterThanOrEqual(System.Decimal;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Byte):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.Byte):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Char):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.Char):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Int16):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.Int16):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Int32):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.Int32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Int64):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.Int64):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.SByte):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.SByte):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.UInt16):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.UInt16):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.UInt32):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.UInt32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.UInt64):System.Decimal">
				<signature>System.Decimal.op_Implicit(System.UInt64):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Increment" uniqueID="op_Increment(System.Decimal):System.Decimal">
				<signature>System.Decimal.op_Increment(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Decimal;System.Decimal):System.Boolean">
				<signature>System.Decimal.op_Inequality(System.Decimal;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_LessThan" uniqueID="op_LessThan(System.Decimal;System.Decimal):System.Boolean">
				<signature>System.Decimal.op_LessThan(System.Decimal;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_LessThanOrEqual" uniqueID="op_LessThanOrEqual(System.Decimal;System.Decimal):System.Boolean">
				<signature>System.Decimal.op_LessThanOrEqual(System.Decimal;System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Modulus" uniqueID="op_Modulus(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.op_Modulus(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Multiply" uniqueID="op_Multiply(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.op_Multiply(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Subtraction" uniqueID="op_Subtraction(System.Decimal;System.Decimal):System.Decimal">
				<signature>System.Decimal.op_Subtraction(System.Decimal;System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_UnaryNegation" uniqueID="op_UnaryNegation(System.Decimal):System.Decimal">
				<signature>System.Decimal.op_UnaryNegation(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_UnaryPlus" uniqueID="op_UnaryPlus(System.Decimal):System.Decimal">
				<signature>System.Decimal.op_UnaryPlus(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Decimal):System.Int32">
				<signature>System.Decimal.CompareTo(System.Decimal):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Decimal.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Decimal" uniqueID="Decimal(System.Currency):System.Void">
				<signature>System.Decimal.Decimal(System.Currency):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Decimal" uniqueID="Decimal(System.Double):System.Void">
				<signature>System.Decimal.Decimal(System.Double):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Decimal" uniqueID="Decimal(System.Int32):System.Void">
				<signature>System.Decimal.Decimal(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Decimal" uniqueID="Decimal(System.Int32;System.Int32;System.Int32;System.Boolean;System.Byte):System.Void">
				<signature>System.Decimal.Decimal(System.Int32;System.Int32;System.Int32;System.Boolean;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Decimal" uniqueID="Decimal(System.Int32;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.Decimal.Decimal(System.Int32;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Decimal" uniqueID="Decimal(System.Int32[]):System.Void">
				<signature>System.Decimal.Decimal(System.Int32[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Decimal" uniqueID="Decimal(System.Int64):System.Void">
				<signature>System.Decimal.Decimal(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Decimal" uniqueID="Decimal(System.Single):System.Void">
				<signature>System.Decimal.Decimal(System.Single):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Decimal" uniqueID="Decimal(System.UInt32):System.Void">
				<signature>System.Decimal.Decimal(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Decimal" uniqueID="Decimal(System.UInt64):System.Void">
				<signature>System.Decimal.Decimal(System.UInt64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Decimal):System.Boolean">
				<signature>System.Decimal.Equals(System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Decimal.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Decimal.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Decimal.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnSerializing" uniqueID="OnSerializing(System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Decimal.OnSerializing(System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetBits" uniqueID="SetBits(System.Int32[]):System.Void">
				<signature>System.Decimal.SetBits(System.Int32[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Decimal.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Decimal.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Decimal.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Decimal.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Decimal.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Decimal.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Decimal.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Decimal.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Decimal.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Decimal.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Decimal.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Decimal.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Decimal.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Decimal.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Decimal.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization" uniqueID="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object):System.Void">
				<signature>System.Decimal.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Decimal.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Decimal.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Decimal.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Decimal.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Enum+HashEntry" uniqueID="System.Enum+HashEntry">
			<method accessibility="Public" methodKind="Member" name="Enum+HashEntry" uniqueID="Enum+HashEntry(System.String[];System.UInt64[]):System.Void">
				<signature>System.Enum+HashEntry.Enum+HashEntry(System.String[];System.UInt64[]):System.Void</signature>
			</method>
		</class>
		<class name="EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;" uniqueID="System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.Runtime.Serialization.SafeSerializationEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;.BeginInvoke(System.Object;System.Runtime.Serialization.SafeSerializationEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;" uniqueID="EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Runtime.Serialization.SafeSerializationEventArgs):System.Void">
				<signature>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;.Invoke(System.Object;System.Runtime.Serialization.SafeSerializationEventArgs):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;.BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Artist">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;.EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Album):MvcMusicStore.Models.Artist">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;.Invoke(MvcMusicStore.Models.Album):MvcMusicStore.Models.Artist</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;.BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;.Invoke(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;.BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;.Invoke(MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
		</class>
		<class name="Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;" uniqueID="System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Genre;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;.BeginInvoke(MvcMusicStore.Models.Genre;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;" uniqueID="Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;.Invoke(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
		</class>
		<class name="Func&lt;System.Collections.Specialized.NameValueCollection&gt;" uniqueID="System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Specialized.NameValueCollection">
				<signature>System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;.EndInvoke(System.IAsyncResult):System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Collections.Specialized.NameValueCollection&gt;" uniqueID="Func&lt;System.Collections.Specialized.NameValueCollection&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;.Func&lt;System.Collections.Specialized.NameValueCollection&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Collections.Specialized.NameValueCollection">
				<signature>System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;.Invoke():System.Collections.Specialized.NameValueCollection</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Attribute&gt;" uniqueID="System.Predicate&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Attribute&gt;.BeginInvoke(System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Attribute&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Attribute):System.Boolean">
				<signature>System.Predicate&lt;System.Attribute&gt;.Invoke(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Attribute&gt;" uniqueID="Predicate&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Attribute&gt;.Predicate&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Artist">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;.EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Artist">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Artist&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Artist</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Genre">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;.EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Genre">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Genre&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Genre</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Order">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;.EndInvoke(System.IAsyncResult):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Order">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.Order&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.Order</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):MvcMusicStore.Models.OrderDetail">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;.EndInvoke(System.IAsyncResult):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.OrderDetail">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,MvcMusicStore.Models.OrderDetail&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):MvcMusicStore.Models.OrderDetail</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Boolean">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Boolean&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Boolean</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;.EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
		</class>
		<class name="Predicate&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Predicate&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Genre;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Genre&gt;.BeginInvoke(MvcMusicStore.Models.Genre;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Genre&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Genre&gt;.Invoke(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Predicate&lt;MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Genre&gt;.Predicate&lt;MvcMusicStore.Models.Genre&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;.EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;.EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;.EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;.EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;.EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;.EndInvoke(System.IAsyncResult):System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.Common.DbDataRecord">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;.EndInvoke(System.IAsyncResult):System.Data.Common.DbDataRecord</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Data.Common.DbDataRecord">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.DbDataRecord&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Data.Common.DbDataRecord</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;.EndInvoke(System.IAsyncResult):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Common.Internal.Materialization.RecordState&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;.BeginInvoke(System.Data.Common.Internal.Materialization.Shaper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;.EndInvoke(System.IAsyncResult):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Func&lt;System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper&gt;.Invoke(System.Data.Common.Internal.Materialization.Shaper):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;" uniqueID="System.Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Objects.ObjectContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;.BeginInvoke(System.Data.Objects.ObjectContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;" uniqueID="Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;.Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Objects.ObjectContext):System.Boolean">
				<signature>System.Func&lt;System.Data.Objects.ObjectContext,System.Boolean&gt;.Invoke(System.Data.Objects.ObjectContext):System.Boolean</signature>
			</method>
		</class>
		<class name="Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;" uniqueID="System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Reflection.Assembly;System.String;System.Boolean;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;.BeginInvoke(System.Reflection.Assembly;System.String;System.Boolean;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Type">
				<signature>System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;.EndInvoke(System.IAsyncResult):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;" uniqueID="Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Reflection.Assembly;System.String;System.Boolean):System.Type">
				<signature>System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;.Invoke(System.Reflection.Assembly;System.String;System.Boolean):System.Type</signature>
			</method>
		</class>
		<class name="Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;" uniqueID="System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Reflection.AssemblyName;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;.BeginInvoke(System.Reflection.AssemblyName;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Reflection.Assembly">
				<signature>System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;.EndInvoke(System.IAsyncResult):System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;" uniqueID="Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Reflection.AssemblyName):System.Reflection.Assembly">
				<signature>System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;.Invoke(System.Reflection.AssemblyName):System.Reflection.Assembly</signature>
			</method>
		</class>
		<class name="Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;" uniqueID="System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;.BeginInvoke(System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Object">
				<signature>System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;" uniqueID="Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList):System.Object">
				<signature>System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;.Invoke(System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList):System.Object</signature>
			</method>
		</class>
		<class name="Func&lt;System.String&gt;" uniqueID="System.Func&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.String&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.String">
				<signature>System.Func&lt;System.String&gt;.EndInvoke(System.IAsyncResult):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.String&gt;" uniqueID="Func&lt;System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.String&gt;.Func&lt;System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.String">
				<signature>System.Func&lt;System.String&gt;.Invoke():System.String</signature>
			</method>
		</class>
		<class name="Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" uniqueID="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.WebSockets.AspNetWebSocketContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;.BeginInvoke(System.Web.WebSockets.AspNetWebSocketContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" uniqueID="Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.WebSockets.AspNetWebSocketContext):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;.Invoke(System.Web.WebSockets.AspNetWebSocketContext):System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.Guid&gt;" uniqueID="System.IComparable&lt;System.Guid&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Guid):System.Int32">
				<signature>System.IComparable&lt;System.Guid&gt;.CompareTo(System.Guid):System.Int32</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.Guid&gt;" uniqueID="System.IEquatable&lt;System.Guid&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Guid):System.Boolean">
				<signature>System.IEquatable&lt;System.Guid&gt;.Equals(System.Guid):System.Boolean</signature>
			</method>
		</class>
		<class name="Guid" uniqueID="System.Guid">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Guid.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="EatAllWhitespace" uniqueID="EatAllWhitespace(System.String):System.String">
				<signature>System.Guid.EatAllWhitespace(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="HexToChar" uniqueID="HexToChar(System.Int32):System.Char">
				<signature>System.Guid.HexToChar(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="HexsToChars" uniqueID="HexsToChars(System.Char[];System.Int32;System.Int32;System.Int32):System.Int32">
				<signature>System.Guid.HexsToChars(System.Char[];System.Int32;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="HexsToChars" uniqueID="HexsToChars(System.Char[];System.Int32;System.Int32;System.Int32;System.Boolean):System.Int32">
				<signature>System.Guid.HexsToChars(System.Char[];System.Int32;System.Int32;System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsHexPrefix" uniqueID="IsHexPrefix(System.String;System.Int32):System.Boolean">
				<signature>System.Guid.IsHexPrefix(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NewGuid" uniqueID="NewGuid():System.Guid">
				<signature>System.Guid.NewGuid():System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String):System.Guid">
				<signature>System.Guid.Parse(System.String):System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ParseExact" uniqueID="ParseExact(System.String;System.String):System.Guid">
				<signature>System.Guid.ParseExact(System.String;System.String):System.Guid</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="StringToInt" uniqueID="StringToInt(System.String;System.Int32;System.Int32;System.Int32;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.StringToInt(System.String;System.Int32;System.Int32;System.Int32;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="StringToInt" uniqueID="StringToInt(System.String;System.Int32;System.Int32;System.Int32;System.Int32;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.StringToInt(System.String;System.Int32;System.Int32;System.Int32;System.Int32;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="StringToLong" uniqueID="StringToLong(System.String;System.Int32;System.Int32;System.Int64;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.StringToLong(System.String;System.Int32;System.Int32;System.Int64;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="StringToLong" uniqueID="StringToLong(System.String;System.Int32;System.Int64;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.StringToLong(System.String;System.Int32;System.Int64;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="StringToShort" uniqueID="StringToShort(System.String;System.Int32;System.Int32;System.Int16;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.StringToShort(System.String;System.Int32;System.Int32;System.Int16;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="StringToShort" uniqueID="StringToShort(System.String;System.Int32;System.Int32;System.Int32;System.Int16;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.StringToShort(System.String;System.Int32;System.Int32;System.Int32;System.Int16;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Guid):System.Boolean">
				<signature>System.Guid.TryParse(System.String;System.Guid):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParseExact" uniqueID="TryParseExact(System.String;System.String;System.Guid):System.Boolean">
				<signature>System.Guid.TryParseExact(System.String;System.String;System.Guid):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryParseGuid" uniqueID="TryParseGuid(System.String;System.Guid+GuidStyles;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.TryParseGuid(System.String;System.Guid+GuidStyles;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryParseGuidWithDashes" uniqueID="TryParseGuidWithDashes(System.String;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.TryParseGuidWithDashes(System.String;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryParseGuidWithHexPrefix" uniqueID="TryParseGuidWithHexPrefix(System.String;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.TryParseGuidWithHexPrefix(System.String;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryParseGuidWithNoStyle" uniqueID="TryParseGuidWithNoStyle(System.String;System.Guid+GuidResult):System.Boolean">
				<signature>System.Guid.TryParseGuidWithNoStyle(System.String;System.Guid+GuidResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Guid;System.Guid):System.Boolean">
				<signature>System.Guid.op_Equality(System.Guid;System.Guid):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Guid;System.Guid):System.Boolean">
				<signature>System.Guid.op_Inequality(System.Guid;System.Guid):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Guid):System.Int32">
				<signature>System.Guid.CompareTo(System.Guid):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Guid.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Guid):System.Boolean">
				<signature>System.Guid.Equals(System.Guid):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Guid.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Guid.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResult" uniqueID="GetResult(System.UInt32;System.UInt32):System.Int32">
				<signature>System.Guid.GetResult(System.UInt32;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Guid" uniqueID="Guid(System.Byte[]):System.Void">
				<signature>System.Guid.Guid(System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Guid" uniqueID="Guid(System.Int32;System.Int16;System.Int16;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte):System.Void">
				<signature>System.Guid.Guid(System.Int32;System.Int16;System.Int16;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Guid" uniqueID="Guid(System.Int32;System.Int16;System.Int16;System.Byte[]):System.Void">
				<signature>System.Guid.Guid(System.Int32;System.Int16;System.Int16;System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Guid" uniqueID="Guid(System.String):System.Void">
				<signature>System.Guid.Guid(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Guid" uniqueID="Guid(System.UInt32;System.UInt16;System.UInt16;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte):System.Void">
				<signature>System.Guid.Guid(System.UInt32;System.UInt16;System.UInt16;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToByteArray" uniqueID="ToByteArray():System.Byte[]">
				<signature>System.Guid.ToByteArray():System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Guid.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Guid.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Guid.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Guid+GuidResult" uniqueID="System.Guid+GuidResult">
			<method accessibility="Protected" methodKind="Member" name="GetGuidParseException" uniqueID="GetGuidParseException():System.Exception">
				<signature>System.Guid+GuidResult.GetGuidParseException():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Init" uniqueID="Init(System.Guid+GuidParseThrowStyle):System.Void">
				<signature>System.Guid+GuidResult.Init(System.Guid+GuidParseThrowStyle):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Exception):System.Void">
				<signature>System.Guid+GuidResult.SetFailure(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Guid+ParseFailureKind;System.String):System.Void">
				<signature>System.Guid+GuidResult.SetFailure(System.Guid+ParseFailureKind;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Guid+ParseFailureKind;System.String;System.Object):System.Void">
				<signature>System.Guid+GuidResult.SetFailure(System.Guid+ParseFailureKind;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Guid+ParseFailureKind;System.String;System.Object;System.String;System.Exception):System.Void">
				<signature>System.Guid+GuidResult.SetFailure(System.Guid+ParseFailureKind;System.String;System.Object;System.String;System.Exception):System.Void</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.Int32&gt;" uniqueID="System.IComparable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Int32):System.Int32">
				<signature>System.IComparable&lt;System.Int32&gt;.CompareTo(System.Int32):System.Int32</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.String&gt;" uniqueID="System.IComparable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.String):System.Int32">
				<signature>System.IComparable&lt;System.String&gt;.CompareTo(System.String):System.Int32</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.Int32&gt;" uniqueID="System.IEquatable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Int32):System.Boolean">
				<signature>System.IEquatable&lt;System.Int32&gt;.Equals(System.Int32):System.Boolean</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.String&gt;" uniqueID="System.IEquatable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String):System.Boolean">
				<signature>System.IEquatable&lt;System.String&gt;.Equals(System.String):System.Boolean</signature>
			</method>
		</class>
		<class name="RuntimeMethodHandle" uniqueID="System.RuntimeMethodHandle">
			<method accessibility="Protected" methodKind="Static" name="CheckLinktimeDemands" uniqueID="CheckLinktimeDemands(System.IRuntimeMethodInfo;System.Reflection.RuntimeModule;System.Boolean):System.Void">
				<signature>System.RuntimeMethodHandle.CheckLinktimeDemands(System.IRuntimeMethodInfo;System.Reflection.RuntimeModule;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConstructInstantiation" uniqueID="ConstructInstantiation(System.IRuntimeMethodInfo;System.TypeNameFormatFlags):System.String">
				<signature>System.RuntimeMethodHandle.ConstructInstantiation(System.IRuntimeMethodInfo;System.TypeNameFormatFlags):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConstructInstantiation" uniqueID="ConstructInstantiation(System.IRuntimeMethodInfo;System.TypeNameFormatFlags;System.Runtime.CompilerServices.StringHandleOnStack):System.Void">
				<signature>System.RuntimeMethodHandle.ConstructInstantiation(System.IRuntimeMethodInfo;System.TypeNameFormatFlags;System.Runtime.CompilerServices.StringHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Destroy" uniqueID="Destroy(System.RuntimeMethodHandleInternal):System.Void">
				<signature>System.RuntimeMethodHandle.Destroy(System.RuntimeMethodHandleInternal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EnsureNonNullMethodInfo" uniqueID="EnsureNonNullMethodInfo(System.IRuntimeMethodInfo):System.IRuntimeMethodInfo">
				<signature>System.RuntimeMethodHandle.EnsureNonNullMethodInfo(System.IRuntimeMethodInfo):System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetAttributes" uniqueID="GetAttributes(System.IRuntimeMethodInfo):System.Reflection.MethodAttributes">
				<signature>System.RuntimeMethodHandle.GetAttributes(System.IRuntimeMethodInfo):System.Reflection.MethodAttributes</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetAttributes" uniqueID="GetAttributes(System.RuntimeMethodHandleInternal):System.Reflection.MethodAttributes">
				<signature>System.RuntimeMethodHandle.GetAttributes(System.RuntimeMethodHandleInternal):System.Reflection.MethodAttributes</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetCallerType" uniqueID="GetCallerType(System.Runtime.CompilerServices.StackCrawlMarkHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeMethodHandle.GetCallerType(System.Runtime.CompilerServices.StackCrawlMarkHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCallerType" uniqueID="GetCallerType(System.Threading.StackCrawlMark):System.RuntimeType">
				<signature>System.RuntimeMethodHandle.GetCallerType(System.Threading.StackCrawlMark):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentMethod" uniqueID="GetCurrentMethod(System.Threading.StackCrawlMark):System.IRuntimeMethodInfo">
				<signature>System.RuntimeMethodHandle.GetCurrentMethod(System.Threading.StackCrawlMark):System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDeclaringType" uniqueID="GetDeclaringType(System.IRuntimeMethodInfo):System.RuntimeType">
				<signature>System.RuntimeMethodHandle.GetDeclaringType(System.IRuntimeMethodInfo):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDeclaringType" uniqueID="GetDeclaringType(System.RuntimeMethodHandleInternal):System.RuntimeType">
				<signature>System.RuntimeMethodHandle.GetDeclaringType(System.RuntimeMethodHandleInternal):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFunctionPointer" uniqueID="GetFunctionPointer(System.RuntimeMethodHandleInternal):System.IntPtr">
				<signature>System.RuntimeMethodHandle.GetFunctionPointer(System.RuntimeMethodHandleInternal):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetImplAttributes" uniqueID="GetImplAttributes(System.IRuntimeMethodInfo):System.Reflection.MethodImplAttributes">
				<signature>System.RuntimeMethodHandle.GetImplAttributes(System.IRuntimeMethodInfo):System.Reflection.MethodImplAttributes</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLoaderAllocator" uniqueID="GetLoaderAllocator(System.RuntimeMethodHandleInternal):System.Reflection.LoaderAllocator">
				<signature>System.RuntimeMethodHandle.GetLoaderAllocator(System.RuntimeMethodHandleInternal):System.Reflection.LoaderAllocator</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMethodBody" uniqueID="GetMethodBody(System.IRuntimeMethodInfo;System.RuntimeType):System.Reflection.MethodBody">
				<signature>System.RuntimeMethodHandle.GetMethodBody(System.IRuntimeMethodInfo;System.RuntimeType):System.Reflection.MethodBody</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMethodDef" uniqueID="GetMethodDef(System.IRuntimeMethodInfo):System.Int32">
				<signature>System.RuntimeMethodHandle.GetMethodDef(System.IRuntimeMethodInfo):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMethodFromCanonical" uniqueID="GetMethodFromCanonical(System.RuntimeMethodHandleInternal;System.RuntimeType):System.RuntimeMethodHandleInternal">
				<signature>System.RuntimeMethodHandle.GetMethodFromCanonical(System.RuntimeMethodHandleInternal;System.RuntimeType):System.RuntimeMethodHandleInternal</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMethodInstantiation" uniqueID="GetMethodInstantiation(System.RuntimeMethodHandleInternal;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Boolean):System.Void">
				<signature>System.RuntimeMethodHandle.GetMethodInstantiation(System.RuntimeMethodHandleInternal;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMethodInstantiationInternal" uniqueID="GetMethodInstantiationInternal(System.IRuntimeMethodInfo):System.RuntimeType[]">
				<signature>System.RuntimeMethodHandle.GetMethodInstantiationInternal(System.IRuntimeMethodInfo):System.RuntimeType[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMethodInstantiationInternal" uniqueID="GetMethodInstantiationInternal(System.RuntimeMethodHandleInternal):System.RuntimeType[]">
				<signature>System.RuntimeMethodHandle.GetMethodInstantiationInternal(System.RuntimeMethodHandleInternal):System.RuntimeType[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMethodInstantiationPublic" uniqueID="GetMethodInstantiationPublic(System.IRuntimeMethodInfo):System.Type[]">
				<signature>System.RuntimeMethodHandle.GetMethodInstantiationPublic(System.IRuntimeMethodInfo):System.Type[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetName" uniqueID="GetName(System.IRuntimeMethodInfo):System.String">
				<signature>System.RuntimeMethodHandle.GetName(System.IRuntimeMethodInfo):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetName" uniqueID="GetName(System.RuntimeMethodHandleInternal):System.String">
				<signature>System.RuntimeMethodHandle.GetName(System.RuntimeMethodHandleInternal):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetResolver" uniqueID="GetResolver(System.RuntimeMethodHandleInternal):System.Resolver">
				<signature>System.RuntimeMethodHandle.GetResolver(System.RuntimeMethodHandleInternal):System.Resolver</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSecurityFlags" uniqueID="GetSecurityFlags(System.IRuntimeMethodInfo):System.Reflection.INVOCATION_FLAGS">
				<signature>System.RuntimeMethodHandle.GetSecurityFlags(System.IRuntimeMethodInfo):System.Reflection.INVOCATION_FLAGS</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSlot" uniqueID="GetSlot(System.IRuntimeMethodInfo):System.Int32">
				<signature>System.RuntimeMethodHandle.GetSlot(System.IRuntimeMethodInfo):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSlot" uniqueID="GetSlot(System.RuntimeMethodHandleInternal):System.Int32">
				<signature>System.RuntimeMethodHandle.GetSlot(System.RuntimeMethodHandleInternal):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSpecialSecurityFlags" uniqueID="GetSpecialSecurityFlags(System.IRuntimeMethodInfo):System.UInt32">
				<signature>System.RuntimeMethodHandle.GetSpecialSecurityFlags(System.IRuntimeMethodInfo):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetStubIfNeeded" uniqueID="GetStubIfNeeded(System.RuntimeMethodHandleInternal;System.RuntimeType;System.RuntimeType[]):System.RuntimeMethodHandleInternal">
				<signature>System.RuntimeMethodHandle.GetStubIfNeeded(System.RuntimeMethodHandleInternal;System.RuntimeType;System.RuntimeType[]):System.RuntimeMethodHandleInternal</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypicalMethodDefinition" uniqueID="GetTypicalMethodDefinition(System.IRuntimeMethodInfo):System.IRuntimeMethodInfo">
				<signature>System.RuntimeMethodHandle.GetTypicalMethodDefinition(System.IRuntimeMethodInfo):System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetTypicalMethodDefinition" uniqueID="GetTypicalMethodDefinition(System.IRuntimeMethodInfo;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeMethodHandle.GetTypicalMethodDefinition(System.IRuntimeMethodInfo;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUtf8Name" uniqueID="GetUtf8Name(System.RuntimeMethodHandleInternal):System.Utf8String">
				<signature>System.RuntimeMethodHandle.GetUtf8Name(System.RuntimeMethodHandleInternal):System.Utf8String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetValueInternal" uniqueID="GetValueInternal(System.RuntimeMethodHandle):System.IntPtr">
				<signature>System.RuntimeMethodHandle.GetValueInternal(System.RuntimeMethodHandle):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="HasMethodInstantiation" uniqueID="HasMethodInstantiation(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle.HasMethodInstantiation(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="HasMethodInstantiation" uniqueID="HasMethodInstantiation(System.RuntimeMethodHandleInternal):System.Boolean">
				<signature>System.RuntimeMethodHandle.HasMethodInstantiation(System.RuntimeMethodHandleInternal):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InvokeMethod" uniqueID="InvokeMethod(System.Object;System.Object[];System.Signature;System.Boolean):System.Object">
				<signature>System.RuntimeMethodHandle.InvokeMethod(System.Object;System.Object[];System.Signature;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsCAVisibleFromDecoratedType" uniqueID="IsCAVisibleFromDecoratedType(System.RuntimeTypeHandle;System.IRuntimeMethodInfo;System.RuntimeTypeHandle;System.Reflection.RuntimeModule):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsCAVisibleFromDecoratedType(System.RuntimeTypeHandle;System.IRuntimeMethodInfo;System.RuntimeTypeHandle;System.Reflection.RuntimeModule):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsConstructor" uniqueID="IsConstructor(System.RuntimeMethodHandleInternal):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsConstructor(System.RuntimeMethodHandleInternal):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsDynamicMethod" uniqueID="IsDynamicMethod(System.RuntimeMethodHandleInternal):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsDynamicMethod(System.RuntimeMethodHandleInternal):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsGenericMethodDefinition" uniqueID="IsGenericMethodDefinition(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsGenericMethodDefinition(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsGenericMethodDefinition" uniqueID="IsGenericMethodDefinition(System.RuntimeMethodHandleInternal):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsGenericMethodDefinition(System.RuntimeMethodHandleInternal):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsSecurityCritical" uniqueID="IsSecurityCritical(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsSecurityCritical(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsSecuritySafeCritical" uniqueID="IsSecuritySafeCritical(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsSecuritySafeCritical(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsSecurityTransparent" uniqueID="IsSecurityTransparent(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsSecurityTransparent(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsTokenSecurityTransparent" uniqueID="IsTokenSecurityTransparent(System.Reflection.Module;System.Int32):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsTokenSecurityTransparent(System.Reflection.Module;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsTypicalMethodDefinition" uniqueID="IsTypicalMethodDefinition(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle.IsTypicalMethodDefinition(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MatchesNameHash" uniqueID="MatchesNameHash(System.RuntimeMethodHandleInternal;System.UInt32):System.Boolean">
				<signature>System.RuntimeMethodHandle.MatchesNameHash(System.RuntimeMethodHandleInternal;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerformSecurityCheck" uniqueID="PerformSecurityCheck(System.Object;System.IRuntimeMethodInfo;System.RuntimeType;System.UInt32):System.Void">
				<signature>System.RuntimeMethodHandle.PerformSecurityCheck(System.Object;System.IRuntimeMethodInfo;System.RuntimeType;System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerformSecurityCheck" uniqueID="PerformSecurityCheck(System.Object;System.RuntimeMethodHandleInternal;System.RuntimeType;System.UInt32):System.Void">
				<signature>System.RuntimeMethodHandle.PerformSecurityCheck(System.Object;System.RuntimeMethodHandleInternal;System.RuntimeType;System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SerializationInvoke" uniqueID="SerializationInvoke(System.IRuntimeMethodInfo;System.Object;System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.RuntimeMethodHandle.SerializationInvoke(System.IRuntimeMethodInfo;System.Object;System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StripMethodInstantiation" uniqueID="StripMethodInstantiation(System.IRuntimeMethodInfo):System.IRuntimeMethodInfo">
				<signature>System.RuntimeMethodHandle.StripMethodInstantiation(System.IRuntimeMethodInfo):System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="StripMethodInstantiation" uniqueID="StripMethodInstantiation(System.IRuntimeMethodInfo;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeMethodHandle.StripMethodInstantiation(System.IRuntimeMethodInfo;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_GetCurrentMethod" uniqueID="_GetCurrentMethod(System.Threading.StackCrawlMark):System.IRuntimeMethodInfo">
				<signature>System.RuntimeMethodHandle._GetCurrentMethod(System.Threading.StackCrawlMark):System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_GetUtf8Name" uniqueID="_GetUtf8Name(System.RuntimeMethodHandleInternal):System.Void">
				<signature>System.RuntimeMethodHandle._GetUtf8Name(System.RuntimeMethodHandleInternal):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_IsSecurityCritical" uniqueID="_IsSecurityCritical(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle._IsSecurityCritical(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_IsSecuritySafeCritical" uniqueID="_IsSecuritySafeCritical(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle._IsSecuritySafeCritical(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_IsSecurityTransparent" uniqueID="_IsSecurityTransparent(System.IRuntimeMethodInfo):System.Boolean">
				<signature>System.RuntimeMethodHandle._IsSecurityTransparent(System.IRuntimeMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="_IsTokenSecurityTransparent" uniqueID="_IsTokenSecurityTransparent(System.Reflection.RuntimeModule;System.Int32):System.Boolean">
				<signature>System.RuntimeMethodHandle._IsTokenSecurityTransparent(System.Reflection.RuntimeModule;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_EmptyHandle" uniqueID="get_EmptyHandle():System.RuntimeMethodHandle">
				<signature>System.RuntimeMethodHandle.get_EmptyHandle():System.RuntimeMethodHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.RuntimeMethodHandle;System.RuntimeMethodHandle):System.Boolean">
				<signature>System.RuntimeMethodHandle.op_Equality(System.RuntimeMethodHandle;System.RuntimeMethodHandle):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.RuntimeMethodHandle;System.RuntimeMethodHandle):System.Boolean">
				<signature>System.RuntimeMethodHandle.op_Inequality(System.RuntimeMethodHandle;System.RuntimeMethodHandle):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.RuntimeMethodHandle.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.RuntimeMethodHandle):System.Boolean">
				<signature>System.RuntimeMethodHandle.Equals(System.RuntimeMethodHandle):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFunctionPointer" uniqueID="GetFunctionPointer():System.IntPtr">
				<signature>System.RuntimeMethodHandle.GetFunctionPointer():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.RuntimeMethodHandle.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodInfo" uniqueID="GetMethodInfo():System.IRuntimeMethodInfo">
				<signature>System.RuntimeMethodHandle.GetMethodInfo():System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.RuntimeMethodHandle.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsNullHandle" uniqueID="IsNullHandle():System.Boolean">
				<signature>System.RuntimeMethodHandle.IsNullHandle():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RuntimeMethodHandle" uniqueID="RuntimeMethodHandle(System.IRuntimeMethodInfo):System.Void">
				<signature>System.RuntimeMethodHandle.RuntimeMethodHandle(System.IRuntimeMethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RuntimeMethodHandle" uniqueID="RuntimeMethodHandle(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.RuntimeMethodHandle.RuntimeMethodHandle(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.IntPtr">
				<signature>System.RuntimeMethodHandle.get_Value():System.IntPtr</signature>
			</method>
		</class>
		<class name="Int32" uniqueID="System.Int32">
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String):System.Int32">
				<signature>System.Int32.Parse(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles):System.Int32">
				<signature>System.Int32.Parse(System.String;System.Globalization.NumberStyles):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Int32">
				<signature>System.Int32.Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.IFormatProvider):System.Int32">
				<signature>System.Int32.Parse(System.String;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Int32):System.Boolean">
				<signature>System.Int32.TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Int32):System.Boolean">
				<signature>System.Int32.TryParse(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Int32):System.Int32">
				<signature>System.Int32.CompareTo(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Int32.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Int32):System.Boolean">
				<signature>System.Int32.Equals(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Int32.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Int32.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Int32.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Int32.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Int32.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Int32.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Int32.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Int32.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Int32.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Int32.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Int32.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Int32.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Int32.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Int32.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Int32.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Int32.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Int32.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Int32.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Int32.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Int32.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Int32.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Int32.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Double&gt;" uniqueID="System.Nullable&lt;System.Double&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Double&gt;):System.Double">
				<signature>System.Nullable&lt;System.Double&gt;.op_Explicit(System.Nullable&lt;System.Double&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Double):System.Nullable&lt;System.Double&gt;">
				<signature>System.Nullable&lt;System.Double&gt;.op_Implicit(System.Double):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Double&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Double&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Double">
				<signature>System.Nullable&lt;System.Double&gt;.GetValueOrDefault():System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Double):System.Double">
				<signature>System.Nullable&lt;System.Double&gt;.GetValueOrDefault(System.Double):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Double&gt;" uniqueID="Nullable&lt;System.Double&gt;(System.Double):System.Void">
				<signature>System.Nullable&lt;System.Double&gt;.Nullable&lt;System.Double&gt;(System.Double):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Double&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Double&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Double">
				<signature>System.Nullable&lt;System.Double&gt;.get_Value():System.Double</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Data.Objects.MergeOption&gt;" uniqueID="System.Nullable&lt;System.Data.Objects.MergeOption&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.MergeOption">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.op_Explicit(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.MergeOption</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Objects.MergeOption):System.Nullable&lt;System.Data.Objects.MergeOption&gt;">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.op_Implicit(System.Data.Objects.MergeOption):System.Nullable&lt;System.Data.Objects.MergeOption&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Data.Objects.MergeOption">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.GetValueOrDefault():System.Data.Objects.MergeOption</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Data.Objects.MergeOption):System.Data.Objects.MergeOption">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.GetValueOrDefault(System.Data.Objects.MergeOption):System.Data.Objects.MergeOption</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Data.Objects.MergeOption&gt;" uniqueID="Nullable&lt;System.Data.Objects.MergeOption&gt;(System.Data.Objects.MergeOption):System.Void">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.Nullable&lt;System.Data.Objects.MergeOption&gt;(System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Data.Objects.MergeOption">
				<signature>System.Nullable&lt;System.Data.Objects.MergeOption&gt;.get_Value():System.Data.Objects.MergeOption</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Decimal&gt;" uniqueID="System.Nullable&lt;System.Decimal&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Decimal&gt;):System.Decimal">
				<signature>System.Nullable&lt;System.Decimal&gt;.op_Explicit(System.Nullable&lt;System.Decimal&gt;):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Decimal):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Nullable&lt;System.Decimal&gt;.op_Implicit(System.Decimal):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Decimal&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Decimal&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Decimal">
				<signature>System.Nullable&lt;System.Decimal&gt;.GetValueOrDefault():System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Decimal):System.Decimal">
				<signature>System.Nullable&lt;System.Decimal&gt;.GetValueOrDefault(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Decimal&gt;" uniqueID="Nullable&lt;System.Decimal&gt;(System.Decimal):System.Void">
				<signature>System.Nullable&lt;System.Decimal&gt;.Nullable&lt;System.Decimal&gt;(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Decimal&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Decimal&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Decimal">
				<signature>System.Nullable&lt;System.Decimal&gt;.get_Value():System.Decimal</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Int32&gt;" uniqueID="System.Nullable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Int32&gt;):System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.op_Explicit(System.Nullable&lt;System.Int32&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Int32):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Nullable&lt;System.Int32&gt;.op_Implicit(System.Int32):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Int32&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.GetValueOrDefault():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Int32):System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.GetValueOrDefault(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Int32&gt;" uniqueID="Nullable&lt;System.Int32&gt;(System.Int32):System.Void">
				<signature>System.Nullable&lt;System.Int32&gt;.Nullable&lt;System.Int32&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Int32&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Int32&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.get_Value():System.Int32</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Int64&gt;" uniqueID="System.Nullable&lt;System.Int64&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Int64&gt;):System.Int64">
				<signature>System.Nullable&lt;System.Int64&gt;.op_Explicit(System.Nullable&lt;System.Int64&gt;):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Int64):System.Nullable&lt;System.Int64&gt;">
				<signature>System.Nullable&lt;System.Int64&gt;.op_Implicit(System.Int64):System.Nullable&lt;System.Int64&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Int64&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Int64&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Int64">
				<signature>System.Nullable&lt;System.Int64&gt;.GetValueOrDefault():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Int64):System.Int64">
				<signature>System.Nullable&lt;System.Int64&gt;.GetValueOrDefault(System.Int64):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Int64&gt;" uniqueID="Nullable&lt;System.Int64&gt;(System.Int64):System.Void">
				<signature>System.Nullable&lt;System.Int64&gt;.Nullable&lt;System.Int64&gt;(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Int64&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Int64&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Int64">
				<signature>System.Nullable&lt;System.Int64&gt;.get_Value():System.Int64</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Single&gt;" uniqueID="System.Nullable&lt;System.Single&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Single&gt;):System.Single">
				<signature>System.Nullable&lt;System.Single&gt;.op_Explicit(System.Nullable&lt;System.Single&gt;):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Single):System.Nullable&lt;System.Single&gt;">
				<signature>System.Nullable&lt;System.Single&gt;.op_Implicit(System.Single):System.Nullable&lt;System.Single&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Single&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Single&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Single">
				<signature>System.Nullable&lt;System.Single&gt;.GetValueOrDefault():System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Single):System.Single">
				<signature>System.Nullable&lt;System.Single&gt;.GetValueOrDefault(System.Single):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Single&gt;" uniqueID="Nullable&lt;System.Single&gt;(System.Single):System.Void">
				<signature>System.Nullable&lt;System.Single&gt;.Nullable&lt;System.Single&gt;(System.Single):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Single&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Single&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Single">
				<signature>System.Nullable&lt;System.Single&gt;.get_Value():System.Single</signature>
			</method>
		</class>
		<class name="Predicate&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Predicate&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Album&gt;.BeginInvoke(MvcMusicStore.Models.Album;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Album&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Album&gt;.Invoke(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Predicate&lt;MvcMusicStore.Models.Album&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Album&gt;.Predicate&lt;MvcMusicStore.Models.Album&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Predicate&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Artist;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Artist&gt;.BeginInvoke(MvcMusicStore.Models.Artist;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Artist&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Artist&gt;.Invoke(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="Predicate&lt;MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Artist&gt;.Predicate&lt;MvcMusicStore.Models.Artist&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Predicate&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.Order;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Order&gt;.BeginInvoke(MvcMusicStore.Models.Order;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Order&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Order&gt;.Invoke(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;MvcMusicStore.Models.Order&gt;" uniqueID="Predicate&lt;MvcMusicStore.Models.Order&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;MvcMusicStore.Models.Order&gt;.Predicate&lt;MvcMusicStore.Models.Order&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(MvcMusicStore.Models.OrderDetail;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;.BeginInvoke(MvcMusicStore.Models.OrderDetail;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;.Invoke(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Objects.Internal.IEntityWrapper;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.BeginInvoke(System.Data.Objects.Internal.IEntityWrapper;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Objects.Internal.IEntityWrapper):System.Boolean">
				<signature>System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Invoke(System.Data.Objects.Internal.IEntityWrapper):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.ModuleConfigurationInfo;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;.BeginInvoke(System.Web.ModuleConfigurationInfo;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.ModuleConfigurationInfo):System.Boolean">
				<signature>System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;.Invoke(System.Web.ModuleConfigurationInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="Predicate&lt;System.Web.ModuleConfigurationInfo&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="RuntimeFieldHandle" uniqueID="System.RuntimeFieldHandle">
			<method accessibility="Protected" methodKind="Static" name="AcquiresContextFromThis" uniqueID="AcquiresContextFromThis(System.RuntimeFieldHandleInternal):System.Boolean">
				<signature>System.RuntimeFieldHandle.AcquiresContextFromThis(System.RuntimeFieldHandleInternal):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckAttributeAccess" uniqueID="CheckAttributeAccess(System.RuntimeFieldHandle;System.Reflection.RuntimeModule):System.Void">
				<signature>System.RuntimeFieldHandle.CheckAttributeAccess(System.RuntimeFieldHandle;System.Reflection.RuntimeModule):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetApproxDeclaringType" uniqueID="GetApproxDeclaringType(System.IRuntimeFieldInfo):System.RuntimeType">
				<signature>System.RuntimeFieldHandle.GetApproxDeclaringType(System.IRuntimeFieldInfo):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetApproxDeclaringType" uniqueID="GetApproxDeclaringType(System.RuntimeFieldHandleInternal):System.RuntimeType">
				<signature>System.RuntimeFieldHandle.GetApproxDeclaringType(System.RuntimeFieldHandleInternal):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetAttributes" uniqueID="GetAttributes(System.RuntimeFieldHandleInternal):System.Reflection.FieldAttributes">
				<signature>System.RuntimeFieldHandle.GetAttributes(System.RuntimeFieldHandleInternal):System.Reflection.FieldAttributes</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetName" uniqueID="GetName(System.Reflection.RtFieldInfo):System.String">
				<signature>System.RuntimeFieldHandle.GetName(System.Reflection.RtFieldInfo):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetStaticFieldForGenericType" uniqueID="GetStaticFieldForGenericType(System.RuntimeFieldHandleInternal;System.RuntimeType):System.RuntimeFieldHandleInternal">
				<signature>System.RuntimeFieldHandle.GetStaticFieldForGenericType(System.RuntimeFieldHandleInternal;System.RuntimeType):System.RuntimeFieldHandleInternal</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetToken" uniqueID="GetToken(System.Reflection.RtFieldInfo):System.Int32">
				<signature>System.RuntimeFieldHandle.GetToken(System.Reflection.RtFieldInfo):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUtf8Name" uniqueID="GetUtf8Name(System.RuntimeFieldHandleInternal):System.Utf8String">
				<signature>System.RuntimeFieldHandle.GetUtf8Name(System.RuntimeFieldHandleInternal):System.Utf8String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetValue" uniqueID="GetValue(System.Reflection.RtFieldInfo;System.Object;System.RuntimeType;System.RuntimeType;System.Boolean):System.Object">
				<signature>System.RuntimeFieldHandle.GetValue(System.Reflection.RtFieldInfo;System.Object;System.RuntimeType;System.RuntimeType;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetValueDirect" uniqueID="GetValueDirect(System.Reflection.RtFieldInfo;System.RuntimeType;System.Void;System.RuntimeType):System.Object">
				<signature>System.RuntimeFieldHandle.GetValueDirect(System.Reflection.RtFieldInfo;System.RuntimeType;System.Void;System.RuntimeType):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSecurityCritical" uniqueID="IsSecurityCritical(System.RuntimeFieldHandle):System.Boolean">
				<signature>System.RuntimeFieldHandle.IsSecurityCritical(System.RuntimeFieldHandle):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSecuritySafeCritical" uniqueID="IsSecuritySafeCritical(System.RuntimeFieldHandle):System.Boolean">
				<signature>System.RuntimeFieldHandle.IsSecuritySafeCritical(System.RuntimeFieldHandle):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSecurityTransparent" uniqueID="IsSecurityTransparent(System.RuntimeFieldHandle):System.Boolean">
				<signature>System.RuntimeFieldHandle.IsSecurityTransparent(System.RuntimeFieldHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MatchesNameHash" uniqueID="MatchesNameHash(System.RuntimeFieldHandleInternal;System.UInt32):System.Boolean">
				<signature>System.RuntimeFieldHandle.MatchesNameHash(System.RuntimeFieldHandleInternal;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetValue" uniqueID="SetValue(System.Reflection.RtFieldInfo;System.Object;System.Object;System.RuntimeType;System.Reflection.FieldAttributes;System.RuntimeType;System.Boolean):System.Void">
				<signature>System.RuntimeFieldHandle.SetValue(System.Reflection.RtFieldInfo;System.Object;System.Object;System.RuntimeType;System.Reflection.FieldAttributes;System.RuntimeType;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetValueDirect" uniqueID="SetValueDirect(System.Reflection.RtFieldInfo;System.RuntimeType;System.Void;System.Object;System.RuntimeType):System.Void">
				<signature>System.RuntimeFieldHandle.SetValueDirect(System.Reflection.RtFieldInfo;System.RuntimeType;System.Void;System.Object;System.RuntimeType):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_GetUtf8Name" uniqueID="_GetUtf8Name(System.RuntimeFieldHandleInternal):System.Void">
				<signature>System.RuntimeFieldHandle._GetUtf8Name(System.RuntimeFieldHandleInternal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.RuntimeFieldHandle;System.RuntimeFieldHandle):System.Boolean">
				<signature>System.RuntimeFieldHandle.op_Equality(System.RuntimeFieldHandle;System.RuntimeFieldHandle):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.RuntimeFieldHandle;System.RuntimeFieldHandle):System.Boolean">
				<signature>System.RuntimeFieldHandle.op_Inequality(System.RuntimeFieldHandle;System.RuntimeFieldHandle):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.RuntimeFieldHandle.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.RuntimeFieldHandle):System.Boolean">
				<signature>System.RuntimeFieldHandle.Equals(System.RuntimeFieldHandle):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.RuntimeFieldHandle.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetNativeHandle" uniqueID="GetNativeHandle():System.RuntimeFieldHandle">
				<signature>System.RuntimeFieldHandle.GetNativeHandle():System.RuntimeFieldHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.RuntimeFieldHandle.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRuntimeFieldInfo" uniqueID="GetRuntimeFieldInfo():System.IRuntimeFieldInfo">
				<signature>System.RuntimeFieldHandle.GetRuntimeFieldInfo():System.IRuntimeFieldInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsNullHandle" uniqueID="IsNullHandle():System.Boolean">
				<signature>System.RuntimeFieldHandle.IsNullHandle():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsSecurityCritical" uniqueID="IsSecurityCritical():System.Boolean">
				<signature>System.RuntimeFieldHandle.IsSecurityCritical():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsSecuritySafeCritical" uniqueID="IsSecuritySafeCritical():System.Boolean">
				<signature>System.RuntimeFieldHandle.IsSecuritySafeCritical():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsSecurityTransparent" uniqueID="IsSecurityTransparent():System.Boolean">
				<signature>System.RuntimeFieldHandle.IsSecurityTransparent():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RuntimeFieldHandle" uniqueID="RuntimeFieldHandle(System.IRuntimeFieldInfo):System.Void">
				<signature>System.RuntimeFieldHandle.RuntimeFieldHandle(System.IRuntimeFieldInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RuntimeFieldHandle" uniqueID="RuntimeFieldHandle(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.RuntimeFieldHandle.RuntimeFieldHandle(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.IntPtr">
				<signature>System.RuntimeFieldHandle.get_Value():System.IntPtr</signature>
			</method>
		</class>
		<class name="RuntimeTypeHandle" uniqueID="System.RuntimeTypeHandle">
			<method accessibility="Protected" methodKind="Static" name="Allocate" uniqueID="Allocate(System.RuntimeType):System.Object">
				<signature>System.RuntimeTypeHandle.Allocate(System.RuntimeType):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CanCastTo" uniqueID="CanCastTo(System.RuntimeType;System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.CanCastTo(System.RuntimeType;System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CompareCanonicalHandles" uniqueID="CompareCanonicalHandles(System.RuntimeType;System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.CompareCanonicalHandles(System.RuntimeType;System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConstructName" uniqueID="ConstructName(System.RuntimeTypeHandle;System.TypeNameFormatFlags;System.Runtime.CompilerServices.StringHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.ConstructName(System.RuntimeTypeHandle;System.TypeNameFormatFlags;System.Runtime.CompilerServices.StringHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContainsGenericVariables" uniqueID="ContainsGenericVariables(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.ContainsGenericVariables(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyRuntimeTypeHandles" uniqueID="CopyRuntimeTypeHandles(System.RuntimeTypeHandle[];System.Int32):System.IntPtr[]">
				<signature>System.RuntimeTypeHandle.CopyRuntimeTypeHandles(System.RuntimeTypeHandle[];System.Int32):System.IntPtr[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyRuntimeTypeHandles" uniqueID="CopyRuntimeTypeHandles(System.Type[];System.Int32):System.IntPtr[]">
				<signature>System.RuntimeTypeHandle.CopyRuntimeTypeHandles(System.Type[];System.Int32):System.IntPtr[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateCaInstance" uniqueID="CreateCaInstance(System.RuntimeType;System.IRuntimeMethodInfo):System.Object">
				<signature>System.RuntimeTypeHandle.CreateCaInstance(System.RuntimeType;System.IRuntimeMethodInfo):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.RuntimeType;System.Boolean;System.Boolean;System.Boolean;System.RuntimeMethodHandleInternal;System.Boolean):System.Object">
				<signature>System.RuntimeTypeHandle.CreateInstance(System.RuntimeType;System.Boolean;System.Boolean;System.Boolean;System.RuntimeMethodHandleInternal;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateInstanceForAnotherGenericParameter" uniqueID="CreateInstanceForAnotherGenericParameter(System.RuntimeType;System.RuntimeType):System.Object">
				<signature>System.RuntimeTypeHandle.CreateInstanceForAnotherGenericParameter(System.RuntimeType;System.RuntimeType):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetArrayRank" uniqueID="GetArrayRank(System.RuntimeType):System.Int32">
				<signature>System.RuntimeTypeHandle.GetArrayRank(System.RuntimeType):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetAssembly" uniqueID="GetAssembly(System.RuntimeType):System.Reflection.RuntimeAssembly">
				<signature>System.RuntimeTypeHandle.GetAssembly(System.RuntimeType):System.Reflection.RuntimeAssembly</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetAttributes" uniqueID="GetAttributes(System.RuntimeType):System.Reflection.TypeAttributes">
				<signature>System.RuntimeTypeHandle.GetAttributes(System.RuntimeType):System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetBaseType" uniqueID="GetBaseType(System.RuntimeType):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetBaseType(System.RuntimeType):System.RuntimeType</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetConstraints" uniqueID="GetConstraints(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.GetConstraints(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCorElementType" uniqueID="GetCorElementType(System.RuntimeType):System.Reflection.CorElementType">
				<signature>System.RuntimeTypeHandle.GetCorElementType(System.RuntimeType):System.Reflection.CorElementType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDeclaringMethod" uniqueID="GetDeclaringMethod(System.RuntimeType):System.IRuntimeMethodInfo">
				<signature>System.RuntimeTypeHandle.GetDeclaringMethod(System.RuntimeType):System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDeclaringType" uniqueID="GetDeclaringType(System.RuntimeType):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetDeclaringType(System.RuntimeType):System.RuntimeType</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetDefaultConstructor" uniqueID="GetDefaultConstructor(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.GetDefaultConstructor(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetElementType" uniqueID="GetElementType(System.RuntimeType):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetElementType(System.RuntimeType):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFields" uniqueID="GetFields(System.RuntimeType;System.IntPtr;System.Int32):System.Boolean">
				<signature>System.RuntimeTypeHandle.GetFields(System.RuntimeType;System.IntPtr;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetFirstIntroducedMethod" uniqueID="GetFirstIntroducedMethod(System.RuntimeType):System.RuntimeMethodHandleInternal">
				<signature>System.RuntimeTypeHandle.GetFirstIntroducedMethod(System.RuntimeType):System.RuntimeMethodHandleInternal</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetGCHandle" uniqueID="GetGCHandle(System.RuntimeTypeHandle;System.Runtime.InteropServices.GCHandleType):System.IntPtr">
				<signature>System.RuntimeTypeHandle.GetGCHandle(System.RuntimeTypeHandle;System.Runtime.InteropServices.GCHandleType):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetGenericTypeDefinition" uniqueID="GetGenericTypeDefinition(System.RuntimeType):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetGenericTypeDefinition(System.RuntimeType):System.RuntimeType</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetGenericTypeDefinition" uniqueID="GetGenericTypeDefinition(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.GetGenericTypeDefinition(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetGenericVariableIndex" uniqueID="GetGenericVariableIndex(System.RuntimeType):System.Int32">
				<signature>System.RuntimeTypeHandle.GetGenericVariableIndex(System.RuntimeType):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetInstantiation" uniqueID="GetInstantiation(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Boolean):System.Void">
				<signature>System.RuntimeTypeHandle.GetInstantiation(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetInterfaceMethodImplementationSlot" uniqueID="GetInterfaceMethodImplementationSlot(System.RuntimeTypeHandle;System.RuntimeTypeHandle;System.RuntimeMethodHandleInternal):System.Int32">
				<signature>System.RuntimeTypeHandle.GetInterfaceMethodImplementationSlot(System.RuntimeTypeHandle;System.RuntimeTypeHandle;System.RuntimeMethodHandleInternal):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetInterfaces" uniqueID="GetInterfaces(System.RuntimeType):System.Type[]">
				<signature>System.RuntimeTypeHandle.GetInterfaces(System.RuntimeType):System.Type[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetIntroducedMethods" uniqueID="GetIntroducedMethods(System.RuntimeType):System.RuntimeTypeHandle+IntroducedMethodEnumerator">
				<signature>System.RuntimeTypeHandle.GetIntroducedMethods(System.RuntimeType):System.RuntimeTypeHandle+IntroducedMethodEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMetadataImport" uniqueID="GetMetadataImport(System.RuntimeType):System.Reflection.MetadataImport">
				<signature>System.RuntimeTypeHandle.GetMetadataImport(System.RuntimeType):System.Reflection.MetadataImport</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMethodAt" uniqueID="GetMethodAt(System.RuntimeType;System.Int32):System.RuntimeMethodHandleInternal">
				<signature>System.RuntimeTypeHandle.GetMethodAt(System.RuntimeType;System.Int32):System.RuntimeMethodHandleInternal</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetModule" uniqueID="GetModule(System.RuntimeType):System.Reflection.RuntimeModule">
				<signature>System.RuntimeTypeHandle.GetModule(System.RuntimeType):System.Reflection.RuntimeModule</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetNextIntroducedMethod" uniqueID="GetNextIntroducedMethod(System.RuntimeMethodHandleInternal):System.Void">
				<signature>System.RuntimeTypeHandle.GetNextIntroducedMethod(System.RuntimeMethodHandleInternal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetNumVirtuals" uniqueID="GetNumVirtuals(System.RuntimeType):System.Int32">
				<signature>System.RuntimeTypeHandle.GetNumVirtuals(System.RuntimeType):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetToken" uniqueID="GetToken(System.RuntimeType):System.Int32">
				<signature>System.RuntimeTypeHandle.GetToken(System.RuntimeType):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetTypeByName" uniqueID="GetTypeByName(System.String;System.Boolean;System.Boolean;System.Boolean;System.Runtime.CompilerServices.StackCrawlMarkHandle;System.IntPtr;System.Boolean;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.GetTypeByName(System.String;System.Boolean;System.Boolean;System.Boolean;System.Runtime.CompilerServices.StackCrawlMarkHandle;System.IntPtr;System.Boolean;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypeByName" uniqueID="GetTypeByName(System.String;System.Boolean;System.Boolean;System.Boolean;System.Threading.StackCrawlMark;System.Boolean):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetTypeByName(System.String;System.Boolean;System.Boolean;System.Boolean;System.Threading.StackCrawlMark;System.Boolean):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypeByName" uniqueID="GetTypeByName(System.String;System.Boolean;System.Boolean;System.Boolean;System.Threading.StackCrawlMark;System.IntPtr;System.Boolean):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetTypeByName(System.String;System.Boolean;System.Boolean;System.Boolean;System.Threading.StackCrawlMark;System.IntPtr;System.Boolean):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypeByName" uniqueID="GetTypeByName(System.String;System.Threading.StackCrawlMark):System.Type">
				<signature>System.RuntimeTypeHandle.GetTypeByName(System.String;System.Threading.StackCrawlMark):System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypeByNameUsingCARules" uniqueID="GetTypeByNameUsingCARules(System.String;System.Reflection.RuntimeModule):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetTypeByNameUsingCARules(System.String;System.Reflection.RuntimeModule):System.RuntimeType</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetTypeByNameUsingCARules" uniqueID="GetTypeByNameUsingCARules(System.String;System.Reflection.RuntimeModule;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.GetTypeByNameUsingCARules(System.String;System.Reflection.RuntimeModule;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypeHelper" uniqueID="GetTypeHelper(System.Type;System.Type[];System.IntPtr;System.Int32):System.Type">
				<signature>System.RuntimeTypeHandle.GetTypeHelper(System.Type;System.Type[];System.IntPtr;System.Int32):System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUtf8Name" uniqueID="GetUtf8Name(System.RuntimeType):System.Utf8String">
				<signature>System.RuntimeTypeHandle.GetUtf8Name(System.RuntimeType):System.Utf8String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetValueInternal" uniqueID="GetValueInternal(System.RuntimeTypeHandle):System.IntPtr">
				<signature>System.RuntimeTypeHandle.GetValueInternal(System.RuntimeTypeHandle):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="HasElementType" uniqueID="HasElementType(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.HasElementType(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="HasInstantiation" uniqueID="HasInstantiation(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.HasInstantiation(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="HasProxyAttribute" uniqueID="HasProxyAttribute(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.HasProxyAttribute(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="Instantiate" uniqueID="Instantiate(System.RuntimeTypeHandle;System.IntPtr;System.Int32;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.Instantiate(System.RuntimeTypeHandle;System.IntPtr;System.Int32;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsArray" uniqueID="IsArray(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsArray(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsByRef" uniqueID="IsByRef(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsByRef(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsCollectible" uniqueID="IsCollectible(System.RuntimeTypeHandle):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsCollectible(System.RuntimeTypeHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsComObject" uniqueID="IsComObject(System.RuntimeType;System.Boolean):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsComObject(System.RuntimeType;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsContextful" uniqueID="IsContextful(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsContextful(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsEquivalentTo" uniqueID="IsEquivalentTo(System.RuntimeType;System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsEquivalentTo(System.RuntimeType;System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsEquivalentType" uniqueID="IsEquivalentType(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsEquivalentType(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsGenericTypeDefinition" uniqueID="IsGenericTypeDefinition(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsGenericTypeDefinition(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsGenericVariable" uniqueID="IsGenericVariable(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsGenericVariable(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.RuntimeType;System.Object):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsInstanceOfType(System.RuntimeType;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsInterface" uniqueID="IsInterface(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsInterface(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsPointer" uniqueID="IsPointer(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsPointer(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsPrimitive" uniqueID="IsPrimitive(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsPrimitive(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSecurityCritical" uniqueID="IsSecurityCritical(System.RuntimeTypeHandle):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsSecurityCritical(System.RuntimeTypeHandle):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSecuritySafeCritical" uniqueID="IsSecuritySafeCritical(System.RuntimeTypeHandle):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsSecuritySafeCritical(System.RuntimeTypeHandle):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSecurityTransparent" uniqueID="IsSecurityTransparent(System.RuntimeTypeHandle):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsSecurityTransparent(System.RuntimeTypeHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsSzArray" uniqueID="IsSzArray(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsSzArray(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsValueType" uniqueID="IsValueType(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsValueType(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsVisible" uniqueID="IsVisible(System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.IsVisible(System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MakeArray" uniqueID="MakeArray(System.RuntimeTypeHandle;System.Int32;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.MakeArray(System.RuntimeTypeHandle;System.Int32;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MakeByRef" uniqueID="MakeByRef(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.MakeByRef(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MakePointer" uniqueID="MakePointer(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.MakePointer(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MakeSZArray" uniqueID="MakeSZArray(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void">
				<signature>System.RuntimeTypeHandle.MakeSZArray(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="SatisfiesConstraints" uniqueID="SatisfiesConstraints(System.RuntimeType;System.IntPtr;System.Int32;System.IntPtr;System.Int32;System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.SatisfiesConstraints(System.RuntimeType;System.IntPtr;System.Int32;System.IntPtr;System.Int32;System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SatisfiesConstraints" uniqueID="SatisfiesConstraints(System.RuntimeType;System.RuntimeType[];System.RuntimeType[];System.RuntimeType):System.Boolean">
				<signature>System.RuntimeTypeHandle.SatisfiesConstraints(System.RuntimeType;System.RuntimeType[];System.RuntimeType[];System.RuntimeType):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="VerifyInterfaceIsImplemented" uniqueID="VerifyInterfaceIsImplemented(System.RuntimeTypeHandle;System.RuntimeTypeHandle):System.Void">
				<signature>System.RuntimeTypeHandle.VerifyInterfaceIsImplemented(System.RuntimeTypeHandle;System.RuntimeTypeHandle):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_GetMetadataImport" uniqueID="_GetMetadataImport(System.RuntimeType):System.IntPtr">
				<signature>System.RuntimeTypeHandle._GetMetadataImport(System.RuntimeType):System.IntPtr</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_GetUtf8Name" uniqueID="_GetUtf8Name(System.RuntimeType):System.Void">
				<signature>System.RuntimeTypeHandle._GetUtf8Name(System.RuntimeType):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_IsVisible" uniqueID="_IsVisible(System.RuntimeTypeHandle):System.Boolean">
				<signature>System.RuntimeTypeHandle._IsVisible(System.RuntimeTypeHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_EmptyHandle" uniqueID="get_EmptyHandle():System.RuntimeTypeHandle">
				<signature>System.RuntimeTypeHandle.get_EmptyHandle():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Object;System.RuntimeTypeHandle):System.Boolean">
				<signature>System.RuntimeTypeHandle.op_Equality(System.Object;System.RuntimeTypeHandle):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.RuntimeTypeHandle;System.Object):System.Boolean">
				<signature>System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Object;System.RuntimeTypeHandle):System.Boolean">
				<signature>System.RuntimeTypeHandle.op_Inequality(System.Object;System.RuntimeTypeHandle):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.RuntimeTypeHandle;System.Object):System.Boolean">
				<signature>System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConstructName" uniqueID="ConstructName(System.TypeNameFormatFlags):System.String">
				<signature>System.RuntimeTypeHandle.ConstructName(System.TypeNameFormatFlags):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContainsGenericVariables" uniqueID="ContainsGenericVariables():System.Boolean">
				<signature>System.RuntimeTypeHandle.ContainsGenericVariables():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.RuntimeTypeHandle.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.RuntimeTypeHandle):System.Boolean">
				<signature>System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetConstraints" uniqueID="GetConstraints():System.Type[]">
				<signature>System.RuntimeTypeHandle.GetConstraints():System.Type[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultConstructor" uniqueID="GetDefaultConstructor():System.IRuntimeMethodInfo">
				<signature>System.RuntimeTypeHandle.GetDefaultConstructor():System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetGCHandle" uniqueID="GetGCHandle(System.Runtime.InteropServices.GCHandleType):System.IntPtr">
				<signature>System.RuntimeTypeHandle.GetGCHandle(System.Runtime.InteropServices.GCHandleType):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetGenericVariableIndex" uniqueID="GetGenericVariableIndex():System.Int32">
				<signature>System.RuntimeTypeHandle.GetGenericVariableIndex():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.RuntimeTypeHandle.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetInstantiationInternal" uniqueID="GetInstantiationInternal():System.RuntimeType[]">
				<signature>System.RuntimeTypeHandle.GetInstantiationInternal():System.RuntimeType[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetInstantiationPublic" uniqueID="GetInstantiationPublic():System.Type[]">
				<signature>System.RuntimeTypeHandle.GetInstantiationPublic():System.Type[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetInterfaceMethodImplementationSlot" uniqueID="GetInterfaceMethodImplementationSlot(System.RuntimeTypeHandle;System.RuntimeMethodHandleInternal):System.Int32">
				<signature>System.RuntimeTypeHandle.GetInterfaceMethodImplementationSlot(System.RuntimeTypeHandle;System.RuntimeMethodHandleInternal):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetModuleHandle" uniqueID="GetModuleHandle():System.ModuleHandle">
				<signature>System.RuntimeTypeHandle.GetModuleHandle():System.ModuleHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetNativeHandle" uniqueID="GetNativeHandle():System.RuntimeTypeHandle">
				<signature>System.RuntimeTypeHandle.GetNativeHandle():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.RuntimeTypeHandle.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRuntimeType" uniqueID="GetRuntimeType():System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetRuntimeType():System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTypeChecked" uniqueID="GetTypeChecked():System.RuntimeType">
				<signature>System.RuntimeTypeHandle.GetTypeChecked():System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasInstantiation" uniqueID="HasInstantiation():System.Boolean">
				<signature>System.RuntimeTypeHandle.HasInstantiation():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Instantiate" uniqueID="Instantiate(System.Type[]):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.Instantiate(System.Type[]):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsGenericVariable" uniqueID="IsGenericVariable():System.Boolean">
				<signature>System.RuntimeTypeHandle.IsGenericVariable():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsNullHandle" uniqueID="IsNullHandle():System.Boolean">
				<signature>System.RuntimeTypeHandle.IsNullHandle():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsSecurityCritical" uniqueID="IsSecurityCritical():System.Boolean">
				<signature>System.RuntimeTypeHandle.IsSecurityCritical():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsSecuritySafeCritical" uniqueID="IsSecuritySafeCritical():System.Boolean">
				<signature>System.RuntimeTypeHandle.IsSecuritySafeCritical():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsSecurityTransparent" uniqueID="IsSecurityTransparent():System.Boolean">
				<signature>System.RuntimeTypeHandle.IsSecurityTransparent():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MakeArray" uniqueID="MakeArray(System.Int32):System.RuntimeType">
				<signature>System.RuntimeTypeHandle.MakeArray(System.Int32):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MakeByRef" uniqueID="MakeByRef():System.RuntimeType">
				<signature>System.RuntimeTypeHandle.MakeByRef():System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MakePointer" uniqueID="MakePointer():System.RuntimeType">
				<signature>System.RuntimeTypeHandle.MakePointer():System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MakeSZArray" uniqueID="MakeSZArray():System.RuntimeType">
				<signature>System.RuntimeTypeHandle.MakeSZArray():System.RuntimeType</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RuntimeTypeHandle" uniqueID="RuntimeTypeHandle(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.RuntimeTypeHandle.RuntimeTypeHandle(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RuntimeTypeHandle" uniqueID="RuntimeTypeHandle(System.RuntimeType):System.Void">
				<signature>System.RuntimeTypeHandle.RuntimeTypeHandle(System.RuntimeType):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="VerifyInterfaceIsImplemented" uniqueID="VerifyInterfaceIsImplemented(System.RuntimeTypeHandle):System.Void">
				<signature>System.RuntimeTypeHandle.VerifyInterfaceIsImplemented(System.RuntimeTypeHandle):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.IntPtr">
				<signature>System.RuntimeTypeHandle.get_Value():System.IntPtr</signature>
			</method>
		</class>
		<class name="RuntimeTypeHandle+IntroducedMethodEnumerator" uniqueID="System.RuntimeTypeHandle+IntroducedMethodEnumerator">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.RuntimeTypeHandle+IntroducedMethodEnumerator">
				<signature>System.RuntimeTypeHandle+IntroducedMethodEnumerator.GetEnumerator():System.RuntimeTypeHandle+IntroducedMethodEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.RuntimeTypeHandle+IntroducedMethodEnumerator.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RuntimeTypeHandle+IntroducedMethodEnumerator" uniqueID="RuntimeTypeHandle+IntroducedMethodEnumerator(System.RuntimeType):System.Void">
				<signature>System.RuntimeTypeHandle+IntroducedMethodEnumerator.RuntimeTypeHandle+IntroducedMethodEnumerator(System.RuntimeType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.RuntimeMethodHandleInternal">
				<signature>System.RuntimeTypeHandle+IntroducedMethodEnumerator.get_Current():System.RuntimeMethodHandleInternal</signature>
			</method>
		</class>
		<class name="String" uniqueID="System.String">
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean;System.Globalization.CultureInfo):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean;System.Globalization.CultureInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String):System.Int32">
				<signature>System.String.Compare(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Boolean):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Boolean;System.Globalization.CultureInfo):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Boolean;System.Globalization.CultureInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.StringComparison):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CompareOrdinal" uniqueID="CompareOrdinal(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.CompareOrdinal(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CompareOrdinal" uniqueID="CompareOrdinal(System.String;System.String):System.Int32">
				<signature>System.String.CompareOrdinal(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompareOrdinalHelper" uniqueID="CompareOrdinalHelper(System.String;System.String):System.Int32">
				<signature>System.String.CompareOrdinalHelper(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompareOrdinalIgnoreCaseHelper" uniqueID="CompareOrdinalIgnoreCaseHelper(System.String;System.String):System.Int32">
				<signature>System.String.CompareOrdinalIgnoreCaseHelper(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.String">
				<signature>System.String.Concat(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object):System.String">
				<signature>System.String.Concat(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object;System.Object):System.String">
				<signature>System.String.Concat(System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object;System.Object;System.Object):System.String">
				<signature>System.String.Concat(System.Object;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object[]):System.String">
				<signature>System.String.Concat(System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String;System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String[]):System.String">
				<signature>System.String.Concat(System.String[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConcatArray" uniqueID="ConcatArray(System.String[];System.Int32):System.String">
				<signature>System.String.ConcatArray(System.String[];System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.String):System.String">
				<signature>System.String.Copy(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateString" uniqueID="CreateString(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.String">
				<signature>System.String.CreateString(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateStringFromEncoding" uniqueID="CreateStringFromEncoding(System.Byte;System.Int32;System.Text.Encoding):System.String">
				<signature>System.String.CreateStringFromEncoding(System.Byte;System.Int32;System.Text.Encoding):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.String;System.String):System.Boolean">
				<signature>System.String.Equals(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.String;System.String;System.StringComparison):System.Boolean">
				<signature>System.String.Equals(System.String;System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="EqualsHelper" uniqueID="EqualsHelper(System.String;System.String):System.Boolean">
				<signature>System.String.EqualsHelper(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FastAllocateString" uniqueID="FastAllocateString(System.Int32):System.String">
				<signature>System.String.FastAllocateString(System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FillStringChecked" uniqueID="FillStringChecked(System.String;System.Int32;System.String):System.Void">
				<signature>System.String.FillStringChecked(System.String;System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.IFormatProvider;System.String;System.Object[]):System.String">
				<signature>System.String.Format(System.IFormatProvider;System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object;System.Object;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object[]):System.String">
				<signature>System.String.Format(System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Intern" uniqueID="Intern(System.String):System.String">
				<signature>System.String.Intern(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalCopy" uniqueID="InternalCopy(System.String;System.IntPtr;System.Int32):System.Void">
				<signature>System.String.InternalCopy(System.String;System.IntPtr;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalMarvin32HashString" uniqueID="InternalMarvin32HashString(System.String;System.Int32;System.Int64):System.Int32">
				<signature>System.String.InternalMarvin32HashString(System.String;System.Int32;System.Int64):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalUseRandomizedHashing" uniqueID="InternalUseRandomizedHashing():System.Boolean">
				<signature>System.String.InternalUseRandomizedHashing():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsInterned" uniqueID="IsInterned(System.String):System.String">
				<signature>System.String.IsInterned(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsNullOrEmpty" uniqueID="IsNullOrEmpty(System.String):System.Boolean">
				<signature>System.String.IsNullOrEmpty(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsNullOrWhiteSpace" uniqueID="IsNullOrWhiteSpace(System.String):System.Boolean">
				<signature>System.String.IsNullOrWhiteSpace(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.String">
				<signature>System.String.Join(System.String;System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.Object[]):System.String">
				<signature>System.String.Join(System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.String[]):System.String">
				<signature>System.String.Join(System.String;System.String[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.String[];System.Int32;System.Int32):System.String">
				<signature>System.String.Join(System.String;System.String[];System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SmallCharToUpper" uniqueID="SmallCharToUpper(System.String):System.String">
				<signature>System.String.SmallCharToUpper(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UseRandomizedHashing" uniqueID="UseRandomizedHashing():System.Boolean">
				<signature>System.String.UseRandomizedHashing():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_LegacyMode" uniqueID="get_LegacyMode():System.Boolean">
				<signature>System.String.get_LegacyMode():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeCompareOrdinalEx" uniqueID="nativeCompareOrdinalEx(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.nativeCompareOrdinalEx(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeCompareOrdinalIgnoreCaseWC" uniqueID="nativeCompareOrdinalIgnoreCaseWC(System.String;System.SByte):System.Int32">
				<signature>System.String.nativeCompareOrdinalIgnoreCaseWC(System.String;System.SByte):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.String;System.String):System.Boolean">
				<signature>System.String.op_Equality(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.String;System.String):System.Boolean">
				<signature>System.String.op_Inequality(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="wcslen" uniqueID="wcslen(System.Char):System.Int32">
				<signature>System.String.wcslen(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="wstrcpy" uniqueID="wstrcpy(System.Char;System.Char;System.Int32):System.Void">
				<signature>System.String.wstrcpy(System.Char;System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="wstrcpyPtrAligned" uniqueID="wstrcpyPtrAligned(System.Char;System.Char;System.Int32):System.Void">
				<signature>System.String.wstrcpyPtrAligned(System.Char;System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.String.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.String.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.String):System.Int32">
				<signature>System.String.CompareTo(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.String.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertToAnsi" uniqueID="ConvertToAnsi(System.Byte;System.Int32;System.Boolean;System.Boolean):System.Int32">
				<signature>System.String.ConvertToAnsi(System.Byte;System.Int32;System.Boolean;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.String.CopyTo(System.Int32;System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateTrimmedString" uniqueID="CreateTrimmedString(System.Int32;System.Int32):System.String">
				<signature>System.String.CreateTrimmedString(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharArray" uniqueID="CtorCharArray(System.Char[]):System.String">
				<signature>System.String.CtorCharArray(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharArrayStartLength" uniqueID="CtorCharArrayStartLength(System.Char[];System.Int32;System.Int32):System.String">
				<signature>System.String.CtorCharArrayStartLength(System.Char[];System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharCount" uniqueID="CtorCharCount(System.Char;System.Int32):System.String">
				<signature>System.String.CtorCharCount(System.Char;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharPtr" uniqueID="CtorCharPtr(System.Char):System.String">
				<signature>System.String.CtorCharPtr(System.Char):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharPtrStartLength" uniqueID="CtorCharPtrStartLength(System.Char;System.Int32;System.Int32):System.String">
				<signature>System.String.CtorCharPtrStartLength(System.Char;System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.Char):System.Boolean">
				<signature>System.String.EndsWith(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String):System.Boolean">
				<signature>System.String.EndsWith(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean">
				<signature>System.String.EndsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.EndsWith(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.String.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String):System.Boolean">
				<signature>System.String.Equals(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.Equals(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.CharEnumerator">
				<signature>System.String.GetEnumerator():System.CharEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.String.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetLegacyNonRandomizedHashCode" uniqueID="GetLegacyNonRandomizedHashCode():System.Int32">
				<signature>System.String.GetLegacyNonRandomizedHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.String.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char):System.Int32">
				<signature>System.String.IndexOf(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char;System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.Char;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.String.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[]):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[];System.Int32):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.String):System.String">
				<signature>System.String.Insert(System.Int32;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InsertInternal" uniqueID="InsertInternal(System.Int32;System.String):System.String">
				<signature>System.String.InsertInternal(System.Int32;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSplitKeepEmptyEntries" uniqueID="InternalSplitKeepEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]">
				<signature>System.String.InternalSplitKeepEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSplitOmitEmptyEntries" uniqueID="InternalSplitOmitEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]">
				<signature>System.String.InternalSplitOmitEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSubString" uniqueID="InternalSubString(System.Int32;System.Int32;System.Boolean):System.String">
				<signature>System.String.InternalSubString(System.Int32;System.Int32;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalSubStringWithChecks" uniqueID="InternalSubStringWithChecks(System.Int32;System.Int32;System.Boolean):System.String">
				<signature>System.String.InternalSubStringWithChecks(System.Int32;System.Int32;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsAscii" uniqueID="IsAscii():System.Boolean">
				<signature>System.String.IsAscii():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsFastSort" uniqueID="IsFastSort():System.Boolean">
				<signature>System.String.IsFastSort():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNormalized" uniqueID="IsNormalized():System.Boolean">
				<signature>System.String.IsNormalized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNormalized" uniqueID="IsNormalized(System.Text.NormalizationForm):System.Boolean">
				<signature>System.String.IsNormalized(System.Text.NormalizationForm):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char):System.Int32">
				<signature>System.String.LastIndexOf(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char;System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.Char;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String):System.Int32">
				<signature>System.String.LastIndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[]):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[];System.Int32):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MakeSeparatorList" uniqueID="MakeSeparatorList(System.Char[];System.Int32[]):System.Int32">
				<signature>System.String.MakeSeparatorList(System.Char[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MakeSeparatorList" uniqueID="MakeSeparatorList(System.String[];System.Int32[];System.Int32[]):System.Int32">
				<signature>System.String.MakeSeparatorList(System.String[];System.Int32[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Normalize" uniqueID="Normalize():System.String">
				<signature>System.String.Normalize():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Normalize" uniqueID="Normalize(System.Text.NormalizationForm):System.String">
				<signature>System.String.Normalize(System.Text.NormalizationForm):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PadHelper" uniqueID="PadHelper(System.Int32;System.Char;System.Boolean):System.String">
				<signature>System.String.PadHelper(System.Int32;System.Char;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadLeft" uniqueID="PadLeft(System.Int32):System.String">
				<signature>System.String.PadLeft(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadLeft" uniqueID="PadLeft(System.Int32;System.Char):System.String">
				<signature>System.String.PadLeft(System.Int32;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadRight" uniqueID="PadRight(System.Int32):System.String">
				<signature>System.String.PadRight(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadRight" uniqueID="PadRight(System.Int32;System.Char):System.String">
				<signature>System.String.PadRight(System.Int32;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Int32):System.String">
				<signature>System.String.Remove(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Int32;System.Int32):System.String">
				<signature>System.String.Remove(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RemoveInternal" uniqueID="RemoveInternal(System.Int32;System.Int32):System.String">
				<signature>System.String.RemoveInternal(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Replace" uniqueID="Replace(System.Char;System.Char):System.String">
				<signature>System.String.Replace(System.Char;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Replace" uniqueID="Replace(System.String;System.String):System.String">
				<signature>System.String.Replace(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReplaceInternal" uniqueID="ReplaceInternal(System.Char;System.Char):System.String">
				<signature>System.String.ReplaceInternal(System.Char;System.Char):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReplaceInternal" uniqueID="ReplaceInternal(System.String;System.String):System.String">
				<signature>System.String.ReplaceInternal(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetTrailByte" uniqueID="SetTrailByte(System.Byte):System.Void">
				<signature>System.String.SetTrailByte(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[]):System.String[]">
				<signature>System.String.Split(System.Char[]):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.Int32):System.String[]">
				<signature>System.String.Split(System.Char[];System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.Int32;System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.Char[];System.Int32;System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.Char[];System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.String[];System.Int32;System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.String[];System.Int32;System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.String[];System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.String[];System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SplitInternal" uniqueID="SplitInternal(System.Char[];System.Int32;System.StringSplitOptions):System.String[]">
				<signature>System.String.SplitInternal(System.Char[];System.Int32;System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String):System.Boolean">
				<signature>System.String.StartsWith(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean">
				<signature>System.String.StartsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.StartsWith(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char):System.Void">
				<signature>System.String.String(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char;System.Int32):System.Void">
				<signature>System.String.String(System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char;System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.Char;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char[]):System.Void">
				<signature>System.String.String(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte):System.Void">
				<signature>System.String.String(System.SByte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte;System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.SByte;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.Void">
				<signature>System.String.String(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Substring" uniqueID="Substring(System.Int32):System.String">
				<signature>System.String.Substring(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Substring" uniqueID="Substring(System.Int32;System.Int32):System.String">
				<signature>System.String.Substring(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
				<signature>System.String.System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.String.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.String.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.String.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.String.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.String.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.String.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.String.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.String.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.String.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.String.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.String.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.String.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.String.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.String.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.String.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.String.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToCharArray" uniqueID="ToCharArray():System.Char[]">
				<signature>System.String.ToCharArray():System.Char[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToCharArray" uniqueID="ToCharArray(System.Int32;System.Int32):System.Char[]">
				<signature>System.String.ToCharArray(System.Int32;System.Int32):System.Char[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLower" uniqueID="ToLower():System.String">
				<signature>System.String.ToLower():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLower" uniqueID="ToLower(System.Globalization.CultureInfo):System.String">
				<signature>System.String.ToLower(System.Globalization.CultureInfo):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLowerInvariant" uniqueID="ToLowerInvariant():System.String">
				<signature>System.String.ToLowerInvariant():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.String.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.String.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpper" uniqueID="ToUpper():System.String">
				<signature>System.String.ToUpper():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpper" uniqueID="ToUpper(System.Globalization.CultureInfo):System.String">
				<signature>System.String.ToUpper(System.Globalization.CultureInfo):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpperInvariant" uniqueID="ToUpperInvariant():System.String">
				<signature>System.String.ToUpperInvariant():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Trim" uniqueID="Trim():System.String">
				<signature>System.String.Trim():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Trim" uniqueID="Trim(System.Char[]):System.String">
				<signature>System.String.Trim(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimEnd" uniqueID="TrimEnd(System.Char[]):System.String">
				<signature>System.String.TrimEnd(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TrimHelper" uniqueID="TrimHelper(System.Char[];System.Int32):System.String">
				<signature>System.String.TrimHelper(System.Char[];System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TrimHelper" uniqueID="TrimHelper(System.Int32):System.String">
				<signature>System.String.TrimHelper(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimStart" uniqueID="TrimStart(System.Char[]):System.String">
				<signature>System.String.TrimStart(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TryGetTrailByte" uniqueID="TryGetTrailByte(System.Byte):System.Boolean">
				<signature>System.String.TryGetTrailByte(System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Chars" uniqueID="get_Chars(System.Int32):System.Char">
				<signature>System.String.get_Chars(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FirstChar" uniqueID="get_FirstChar():System.Char">
				<signature>System.String.get_FirstChar():System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Length" uniqueID="get_Length():System.Int32">
				<signature>System.String.get_Length():System.Int32</signature>
			</method>
		</class>
		<class name="Type" uniqueID="System.Type">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Type.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Object):System.Int32">
				<signature>System.Type.BinarySearch(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateBinder" uniqueID="CreateBinder():System.Void">
				<signature>System.Type.CreateBinder():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String):System.Type">
				<signature>System.Type.GetType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Boolean;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Boolean;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;):System.Type">
				<signature>System.Type.GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;;System.Boolean;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;;System.Boolean;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeArray" uniqueID="GetTypeArray(System.Object[]):System.Type[]">
				<signature>System.Type.GetTypeArray(System.Object[]):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeCode" uniqueID="GetTypeCode(System.Type):System.TypeCode">
				<signature>System.Type.GetTypeCode(System.Type):System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.String):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromHandle" uniqueID="GetTypeFromHandle(System.RuntimeTypeHandle):System.Type">
				<signature>System.Type.GetTypeFromHandle(System.RuntimeTypeHandle):System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypeFromHandleUnsafe" uniqueID="GetTypeFromHandleUnsafe(System.IntPtr):System.RuntimeType">
				<signature>System.Type.GetTypeFromHandleUnsafe(System.IntPtr):System.RuntimeType</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.String):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeHandle" uniqueID="GetTypeHandle(System.Object):System.RuntimeTypeHandle">
				<signature>System.Type.GetTypeHandle(System.Object):System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsIntegerType" uniqueID="IsIntegerType(System.Type):System.Boolean">
				<signature>System.Type.IsIntegerType(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReflectionOnlyGetType" uniqueID="ReflectionOnlyGetType(System.String;System.Boolean;System.Boolean):System.Type">
				<signature>System.Type.ReflectionOnlyGetType(System.String;System.Boolean;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_DefaultBinder" uniqueID="get_DefaultBinder():System.Reflection.Binder">
				<signature>System.Type.get_DefaultBinder():System.Reflection.Binder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Type;System.Type):System.Boolean">
				<signature>System.Type.op_Equality(System.Type;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Type;System.Type):System.Boolean">
				<signature>System.Type.op_Inequality(System.Type;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Type.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Type):System.Boolean">
				<signature>System.Type.Equals(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindInterfaces" uniqueID="FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]">
				<signature>System.Type.FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindMembers" uniqueID="FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]">
				<signature>System.Type.FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FormatTypeName" uniqueID="FormatTypeName():System.String">
				<signature>System.Type.FormatTypeName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FormatTypeName" uniqueID="FormatTypeName(System.Boolean):System.String">
				<signature>System.Type.FormatTypeName(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetArrayRank" uniqueID="GetArrayRank():System.Int32">
				<signature>System.Type.GetArrayRank():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetAttributeFlagsImpl" uniqueID="GetAttributeFlagsImpl():System.Reflection.TypeAttributes">
				<signature>System.Type.GetAttributeFlagsImpl():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Type[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Type[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetConstructorImpl" uniqueID="GetConstructorImpl(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructorImpl(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors():System.Reflection.ConstructorInfo[]">
				<signature>System.Type.GetConstructors():System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]">
				<signature>System.Type.GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDefaultMembers" uniqueID="GetDefaultMembers():System.Reflection.MemberInfo[]">
				<signature>System.Type.GetDefaultMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetElementType" uniqueID="GetElementType():System.Type">
				<signature>System.Type.GetElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEnumData" uniqueID="GetEnumData(System.String[];System.Array):System.Void">
				<signature>System.Type.GetEnumData(System.String[];System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumName" uniqueID="GetEnumName(System.Object):System.String">
				<signature>System.Type.GetEnumName(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumNames" uniqueID="GetEnumNames():System.String[]">
				<signature>System.Type.GetEnumNames():System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEnumRawConstantValues" uniqueID="GetEnumRawConstantValues():System.Array">
				<signature>System.Type.GetEnumRawConstantValues():System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumUnderlyingType" uniqueID="GetEnumUnderlyingType():System.Type">
				<signature>System.Type.GetEnumUnderlyingType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumValues" uniqueID="GetEnumValues():System.Array">
				<signature>System.Type.GetEnumValues():System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String):System.Reflection.EventInfo">
				<signature>System.Type.GetEvent(System.String):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo">
				<signature>System.Type.GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents():System.Reflection.EventInfo[]">
				<signature>System.Type.GetEvents():System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]">
				<signature>System.Type.GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String):System.Reflection.FieldInfo">
				<signature>System.Type.GetField(System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Type.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields():System.Reflection.FieldInfo[]">
				<signature>System.Type.GetFields():System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Type.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericArguments" uniqueID="GetGenericArguments():System.Type[]">
				<signature>System.Type.GetGenericArguments():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericParameterConstraints" uniqueID="GetGenericParameterConstraints():System.Type[]">
				<signature>System.Type.GetGenericParameterConstraints():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericTypeDefinition" uniqueID="GetGenericTypeDefinition():System.Type">
				<signature>System.Type.GetGenericTypeDefinition():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Type.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String):System.Type">
				<signature>System.Type.GetInterface(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetInterface(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaceMap" uniqueID="GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping">
				<signature>System.Type.GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaces" uniqueID="GetInterfaces():System.Type[]">
				<signature>System.Type.GetInterfaces():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers():System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethodImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods():System.Reflection.MethodInfo[]">
				<signature>System.Type.GetMethods():System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Type.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String):System.Type">
				<signature>System.Type.GetNestedType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String;System.Reflection.BindingFlags):System.Type">
				<signature>System.Type.GetNestedType(System.String;System.Reflection.BindingFlags):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes():System.Type[]">
				<signature>System.Type.GetNestedTypes():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes(System.Reflection.BindingFlags):System.Type[]">
				<signature>System.Type.GetNestedTypes(System.Reflection.BindingFlags):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties():System.Reflection.PropertyInfo[]">
				<signature>System.Type.GetProperties():System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Type.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Type):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Reflection.BindingFlags;System.Type):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetPropertyImpl" uniqueID="GetPropertyImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetPropertyImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRootElementType" uniqueID="GetRootElementType():System.Type">
				<signature>System.Type.GetRootElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Type.GetType():System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTypeCodeImpl" uniqueID="GetTypeCodeImpl():System.TypeCode">
				<signature>System.Type.GetTypeCodeImpl():System.TypeCode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTypeHandleInternal" uniqueID="GetTypeHandleInternal():System.RuntimeTypeHandle">
				<signature>System.Type.GetTypeHandleInternal():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasElementTypeImpl" uniqueID="HasElementTypeImpl():System.Boolean">
				<signature>System.Type.HasElementTypeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasProxyAttributeImpl" uniqueID="HasProxyAttributeImpl():System.Boolean">
				<signature>System.Type.HasProxyAttributeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ImplementInterface" uniqueID="ImplementInterface(System.Type):System.Boolean">
				<signature>System.Type.ImplementInterface(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsArrayImpl" uniqueID="IsArrayImpl():System.Boolean">
				<signature>System.Type.IsArrayImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsAssignableFrom" uniqueID="IsAssignableFrom(System.Type):System.Boolean">
				<signature>System.Type.IsAssignableFrom(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsByRefImpl" uniqueID="IsByRefImpl():System.Boolean">
				<signature>System.Type.IsByRefImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsCOMObjectImpl" uniqueID="IsCOMObjectImpl():System.Boolean">
				<signature>System.Type.IsCOMObjectImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsContextfulImpl" uniqueID="IsContextfulImpl():System.Boolean">
				<signature>System.Type.IsContextfulImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsEnumDefined" uniqueID="IsEnumDefined(System.Object):System.Boolean">
				<signature>System.Type.IsEnumDefined(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsEquivalentTo" uniqueID="IsEquivalentTo(System.Type):System.Boolean">
				<signature>System.Type.IsEquivalentTo(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsExportedToWindowsRuntimeImpl" uniqueID="IsExportedToWindowsRuntimeImpl():System.Boolean">
				<signature>System.Type.IsExportedToWindowsRuntimeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.Object):System.Boolean">
				<signature>System.Type.IsInstanceOfType(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsMarshalByRefImpl" uniqueID="IsMarshalByRefImpl():System.Boolean">
				<signature>System.Type.IsMarshalByRefImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsPointerImpl" uniqueID="IsPointerImpl():System.Boolean">
				<signature>System.Type.IsPointerImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsPrimitiveImpl" uniqueID="IsPrimitiveImpl():System.Boolean">
				<signature>System.Type.IsPrimitiveImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubclassOf" uniqueID="IsSubclassOf(System.Type):System.Boolean">
				<signature>System.Type.IsSubclassOf(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsValueTypeImpl" uniqueID="IsValueTypeImpl():System.Boolean">
				<signature>System.Type.IsValueTypeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsWindowsRuntimeObjectImpl" uniqueID="IsWindowsRuntimeObjectImpl():System.Boolean">
				<signature>System.Type.IsWindowsRuntimeObjectImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeArrayType" uniqueID="MakeArrayType():System.Type">
				<signature>System.Type.MakeArrayType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeArrayType" uniqueID="MakeArrayType(System.Int32):System.Type">
				<signature>System.Type.MakeArrayType(System.Int32):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeByRefType" uniqueID="MakeByRefType():System.Type">
				<signature>System.Type.MakeByRefType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeGenericType" uniqueID="MakeGenericType(System.Type[]):System.Type">
				<signature>System.Type.MakeGenericType(System.Type[]):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakePointerType" uniqueID="MakePointerType():System.Type">
				<signature>System.Type.MakePointerType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetTypeInfo" uniqueID="System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.Invoke" uniqueID="System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Type.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Type" uniqueID="Type():System.Void">
				<signature>System.Type.Type():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Assembly" uniqueID="get_Assembly():System.Reflection.Assembly">
				<signature>System.Type.get_Assembly():System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AssemblyQualifiedName" uniqueID="get_AssemblyQualifiedName():System.String">
				<signature>System.Type.get_AssemblyQualifiedName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.TypeAttributes">
				<signature>System.Type.get_Attributes():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseType" uniqueID="get_BaseType():System.Type">
				<signature>System.Type.get_BaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContainsGenericParameters" uniqueID="get_ContainsGenericParameters():System.Boolean">
				<signature>System.Type.get_ContainsGenericParameters():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringMethod" uniqueID="get_DeclaringMethod():System.Reflection.MethodBase">
				<signature>System.Type.get_DeclaringMethod():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Type.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FullName" uniqueID="get_FullName():System.String">
				<signature>System.Type.get_FullName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GUID" uniqueID="get_GUID():System.Guid">
				<signature>System.Type.get_GUID():System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenericParameterAttributes" uniqueID="get_GenericParameterAttributes():System.Reflection.GenericParameterAttributes">
				<signature>System.Type.get_GenericParameterAttributes():System.Reflection.GenericParameterAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenericParameterPosition" uniqueID="get_GenericParameterPosition():System.Int32">
				<signature>System.Type.get_GenericParameterPosition():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenericTypeArguments" uniqueID="get_GenericTypeArguments():System.Type[]">
				<signature>System.Type.get_GenericTypeArguments():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasElementType" uniqueID="get_HasElementType():System.Boolean">
				<signature>System.Type.get_HasElementType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasProxyAttribute" uniqueID="get_HasProxyAttribute():System.Boolean">
				<signature>System.Type.get_HasProxyAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Type.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAnsiClass" uniqueID="get_IsAnsiClass():System.Boolean">
				<signature>System.Type.get_IsAnsiClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsArray" uniqueID="get_IsArray():System.Boolean">
				<signature>System.Type.get_IsArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoClass" uniqueID="get_IsAutoClass():System.Boolean">
				<signature>System.Type.get_IsAutoClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoLayout" uniqueID="get_IsAutoLayout():System.Boolean">
				<signature>System.Type.get_IsAutoLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsByRef" uniqueID="get_IsByRef():System.Boolean">
				<signature>System.Type.get_IsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCOMObject" uniqueID="get_IsCOMObject():System.Boolean">
				<signature>System.Type.get_IsCOMObject():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClass" uniqueID="get_IsClass():System.Boolean">
				<signature>System.Type.get_IsClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsConstructedGenericType" uniqueID="get_IsConstructedGenericType():System.Boolean">
				<signature>System.Type.get_IsConstructedGenericType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsContextful" uniqueID="get_IsContextful():System.Boolean">
				<signature>System.Type.get_IsContextful():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEnum" uniqueID="get_IsEnum():System.Boolean">
				<signature>System.Type.get_IsEnum():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsExplicitLayout" uniqueID="get_IsExplicitLayout():System.Boolean">
				<signature>System.Type.get_IsExplicitLayout():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsExportedToWindowsRuntime" uniqueID="get_IsExportedToWindowsRuntime():System.Boolean">
				<signature>System.Type.get_IsExportedToWindowsRuntime():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericParameter" uniqueID="get_IsGenericParameter():System.Boolean">
				<signature>System.Type.get_IsGenericParameter():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericType" uniqueID="get_IsGenericType():System.Boolean">
				<signature>System.Type.get_IsGenericType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericTypeDefinition" uniqueID="get_IsGenericTypeDefinition():System.Boolean">
				<signature>System.Type.get_IsGenericTypeDefinition():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsImport" uniqueID="get_IsImport():System.Boolean">
				<signature>System.Type.get_IsImport():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInterface" uniqueID="get_IsInterface():System.Boolean">
				<signature>System.Type.get_IsInterface():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLayoutSequential" uniqueID="get_IsLayoutSequential():System.Boolean">
				<signature>System.Type.get_IsLayoutSequential():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsMarshalByRef" uniqueID="get_IsMarshalByRef():System.Boolean">
				<signature>System.Type.get_IsMarshalByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNested" uniqueID="get_IsNested():System.Boolean">
				<signature>System.Type.get_IsNested():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedAssembly" uniqueID="get_IsNestedAssembly():System.Boolean">
				<signature>System.Type.get_IsNestedAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamANDAssem" uniqueID="get_IsNestedFamANDAssem():System.Boolean">
				<signature>System.Type.get_IsNestedFamANDAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamORAssem" uniqueID="get_IsNestedFamORAssem():System.Boolean">
				<signature>System.Type.get_IsNestedFamORAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamily" uniqueID="get_IsNestedFamily():System.Boolean">
				<signature>System.Type.get_IsNestedFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPrivate" uniqueID="get_IsNestedPrivate():System.Boolean">
				<signature>System.Type.get_IsNestedPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPublic" uniqueID="get_IsNestedPublic():System.Boolean">
				<signature>System.Type.get_IsNestedPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNotPublic" uniqueID="get_IsNotPublic():System.Boolean">
				<signature>System.Type.get_IsNotPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPointer" uniqueID="get_IsPointer():System.Boolean">
				<signature>System.Type.get_IsPointer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrimitive" uniqueID="get_IsPrimitive():System.Boolean">
				<signature>System.Type.get_IsPrimitive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Type.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSealed" uniqueID="get_IsSealed():System.Boolean">
				<signature>System.Type.get_IsSealed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecurityCritical" uniqueID="get_IsSecurityCritical():System.Boolean">
				<signature>System.Type.get_IsSecurityCritical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecuritySafeCritical" uniqueID="get_IsSecuritySafeCritical():System.Boolean">
				<signature>System.Type.get_IsSecuritySafeCritical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecurityTransparent" uniqueID="get_IsSecurityTransparent():System.Boolean">
				<signature>System.Type.get_IsSecurityTransparent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSerializable" uniqueID="get_IsSerializable():System.Boolean">
				<signature>System.Type.get_IsSerializable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Type.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsSzArray" uniqueID="get_IsSzArray():System.Boolean">
				<signature>System.Type.get_IsSzArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsUnicodeClass" uniqueID="get_IsUnicodeClass():System.Boolean">
				<signature>System.Type.get_IsUnicodeClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsValueType" uniqueID="get_IsValueType():System.Boolean">
				<signature>System.Type.get_IsValueType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsVisible" uniqueID="get_IsVisible():System.Boolean">
				<signature>System.Type.get_IsVisible():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsWindowsRuntimeObject" uniqueID="get_IsWindowsRuntimeObject():System.Boolean">
				<signature>System.Type.get_IsWindowsRuntimeObject():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Type.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Type.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Type.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NeedsReflectionSecurityCheck" uniqueID="get_NeedsReflectionSecurityCheck():System.Boolean">
				<signature>System.Type.get_NeedsReflectionSecurityCheck():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Type.get_ReflectedType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StructLayoutAttribute" uniqueID="get_StructLayoutAttribute():System.Runtime.InteropServices.StructLayoutAttribute">
				<signature>System.Type.get_StructLayoutAttribute():System.Runtime.InteropServices.StructLayoutAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeHandle" uniqueID="get_TypeHandle():System.RuntimeTypeHandle">
				<signature>System.Type.get_TypeHandle():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeInitializer" uniqueID="get_TypeInitializer():System.Reflection.ConstructorInfo">
				<signature>System.Type.get_TypeInitializer():System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Type.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
		<class name="TypedReference" uniqueID="System.TypedReference">
			<method accessibility="Public" methodKind="Static" name="GetTargetType" uniqueID="GetTargetType(System.TypedReference):System.Type">
				<signature>System.TypedReference.GetTargetType(System.TypedReference):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalMakeTypedReference" uniqueID="InternalMakeTypedReference(System.Void;System.Object;System.IntPtr[];System.RuntimeType):System.Void">
				<signature>System.TypedReference.InternalMakeTypedReference(System.Void;System.Object;System.IntPtr[];System.RuntimeType):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalSetTypedReference" uniqueID="InternalSetTypedReference(System.Void;System.Object):System.Void">
				<signature>System.TypedReference.InternalSetTypedReference(System.Void;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalToObject" uniqueID="InternalToObject(System.Void):System.Object">
				<signature>System.TypedReference.InternalToObject(System.Void):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeTypedReference" uniqueID="MakeTypedReference(System.Object;System.Reflection.FieldInfo[]):System.TypedReference">
				<signature>System.TypedReference.MakeTypedReference(System.Object;System.Reflection.FieldInfo[]):System.TypedReference</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetTypedReference" uniqueID="SetTypedReference(System.TypedReference;System.Object):System.Void">
				<signature>System.TypedReference.SetTypedReference(System.TypedReference;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TargetTypeToken" uniqueID="TargetTypeToken(System.TypedReference):System.RuntimeTypeHandle">
				<signature>System.TypedReference.TargetTypeToken(System.TypedReference):System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.TypedReference):System.Object">
				<signature>System.TypedReference.ToObject(System.TypedReference):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.TypedReference.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.TypedReference.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsNull" uniqueID="get_IsNull():System.Boolean">
				<signature>System.TypedReference.get_IsNull():System.Boolean</signature>
			</method>
		</class>
	</package>
	<package name="System.Data.Common.Internal.Materialization">
		<class name="Coordinator" uniqueID="System.Data.Common.Internal.Materialization.Coordinator">
			<method accessibility="Protected" methodKind="Member" name="Coordinator" uniqueID="Coordinator(System.Data.Common.Internal.Materialization.CoordinatorFactory;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.Coordinator(System.Data.Common.Internal.Materialization.CoordinatorFactory;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasNextElement" uniqueID="HasNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.HasNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.Initialize(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MaxDistanceToLeaf" uniqueID="MaxDistanceToLeaf():System.Int32">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.MaxDistanceToLeaf():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Child" uniqueID="get_Child():System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.get_Child():System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEntered" uniqueID="get_IsEntered():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.get_IsEntered():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsRoot" uniqueID="get_IsRoot():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.get_IsRoot():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Child" uniqueID="set_Child(System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.set_Child(System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsEntered" uniqueID="set_IsEntered(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator.set_IsEntered(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Coordinator&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Protected" methodKind="Member" name="Coordinator&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Coordinator&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Album&gt;.Coordinator&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetElements" uniqueID="GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Album&gt;.GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Album&gt;.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterCloseHandler" uniqueID="RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Album&gt;.RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Album&gt;.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentToDefault" uniqueID="SetCurrentToDefault():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Album&gt;.SetCurrentToDefault():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Album">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Album&gt;.get_Current():MvcMusicStore.Models.Album</signature>
			</method>
		</class>
		<class name="Coordinator&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Protected" methodKind="Member" name="Coordinator&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="Coordinator&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Artist&gt;.Coordinator&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetElements" uniqueID="GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Artist&gt;.GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Artist&gt;.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterCloseHandler" uniqueID="RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Artist&gt;.RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Artist&gt;.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentToDefault" uniqueID="SetCurrentToDefault():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Artist&gt;.SetCurrentToDefault():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Artist">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Artist&gt;.get_Current():MvcMusicStore.Models.Artist</signature>
			</method>
		</class>
		<class name="CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.ctor&gt;b__0" uniqueID="&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;.&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompilePredicate" uniqueID="CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;.CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DescribeExpression" uniqueID="DescribeExpression(System.Linq.Expressions.Expression):System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;.DescribeExpression(System.Linq.Expressions.Expression):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;" uniqueID="CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecordState" uniqueID="GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;.ToString():System.String</signature>
			</method>
		</class>
		<class name="Coordinator&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Protected" methodKind="Member" name="Coordinator&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Coordinator&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Cart&gt;.Coordinator&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetElements" uniqueID="GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Cart&gt;.GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Cart&gt;.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterCloseHandler" uniqueID="RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Cart&gt;.RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Cart&gt;.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentToDefault" uniqueID="SetCurrentToDefault():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Cart&gt;.SetCurrentToDefault():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Cart">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Cart&gt;.get_Current():MvcMusicStore.Models.Cart</signature>
			</method>
		</class>
		<class name="Coordinator&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Protected" methodKind="Member" name="Coordinator&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Coordinator&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Genre&gt;.Coordinator&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetElements" uniqueID="GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Genre&gt;.GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Genre&gt;.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterCloseHandler" uniqueID="RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Genre&gt;.RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Genre&gt;.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentToDefault" uniqueID="SetCurrentToDefault():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Genre&gt;.SetCurrentToDefault():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Genre">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Genre&gt;.get_Current():MvcMusicStore.Models.Genre</signature>
			</method>
		</class>
		<class name="Coordinator&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Protected" methodKind="Member" name="Coordinator&lt;MvcMusicStore.Models.Order&gt;" uniqueID="Coordinator&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Order&gt;.Coordinator&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetElements" uniqueID="GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Order&gt;.GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Order&gt;.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterCloseHandler" uniqueID="RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Order&gt;.RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Order&gt;.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentToDefault" uniqueID="SetCurrentToDefault():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Order&gt;.SetCurrentToDefault():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Order">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.Order&gt;.get_Current():MvcMusicStore.Models.Order</signature>
			</method>
		</class>
		<class name="Shaper&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Private" methodKind="Member" name="Finally" uniqueID="Finally():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.Finally():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeRecordStates" uniqueID="InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper&lt;MvcMusicStore.Models.Order&gt;" uniqueID="Shaper&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;;System.Action;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.Shaper&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Order&gt;;System.Action;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartMaterializingElement" uniqueID="StartMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.StartMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopMaterializingElement" uniqueID="StopMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.StopMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StoreRead" uniqueID="StoreRead():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.StoreRead():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_OnDone" uniqueID="add_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.add_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataWaiting" uniqueID="get_DataWaiting():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.get_DataWaiting():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootEnumerator" uniqueID="get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_OnDone" uniqueID="remove_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.remove_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataWaiting" uniqueID="set_DataWaiting(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;.set_DataWaiting(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
			<method accessibility="Protected" methodKind="Member" name="Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetElements" uniqueID="GetElements():System.Collections.Generic.IEnumerable&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.GetElements():System.Collections.Generic.IEnumerable&lt;System.Data.Common.Internal.Materialization.RecordState&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterCloseHandler" uniqueID="RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentToDefault" uniqueID="SetCurrentToDefault():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.SetCurrentToDefault():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.get_Current():System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
		</class>
		<class name="CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.ctor&gt;b__0" uniqueID="&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;.&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompilePredicate" uniqueID="CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;.CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DescribeExpression" uniqueID="DescribeExpression(System.Linq.Expressions.Expression):System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;.DescribeExpression(System.Linq.Expressions.Expression):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;" uniqueID="CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecordState" uniqueID="GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;.ToString():System.String</signature>
			</method>
		</class>
		<class name="Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Protected" methodKind="Member" name="Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetElements" uniqueID="GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;.GetElements():System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterCloseHandler" uniqueID="RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;.RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentToDefault" uniqueID="SetCurrentToDefault():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;.SetCurrentToDefault():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Current():MvcMusicStore.Models.OrderDetail</signature>
			</method>
		</class>
		<class name="Coordinator&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Protected" methodKind="Member" name="Coordinator&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="Coordinator&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.DbDataRecord&gt;.Coordinator&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;;System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetElements" uniqueID="GetElements():System.Collections.Generic.IEnumerable&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.DbDataRecord&gt;.GetElements():System.Collections.Generic.IEnumerable&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadNextElement" uniqueID="ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.DbDataRecord&gt;.ReadNextElement(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterCloseHandler" uniqueID="RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.DbDataRecord&gt;.RegisterCloseHandler(System.Action&lt;System.Data.Common.Internal.Materialization.Shaper;System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCollection" uniqueID="ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.DbDataRecord&gt;.ResetCollection(System.Data.Common.Internal.Materialization.Shaper):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentToDefault" uniqueID="SetCurrentToDefault():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.DbDataRecord&gt;.SetCurrentToDefault():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Common.DbDataRecord">
				<signature>System.Data.Common.Internal.Materialization.Coordinator&lt;System.Data.Common.DbDataRecord&gt;.get_Current():System.Data.Common.DbDataRecord</signature>
			</method>
		</class>
		<class name="CoordinatorFactory" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__0" uniqueID="&lt;.cctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory.&lt;.cctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__1" uniqueID="&lt;.cctor&gt;b__1(System.Data.Common.Internal.Materialization.Shaper):System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory.&lt;.cctor&gt;b__1(System.Data.Common.Internal.Materialization.Shaper):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CoordinatorFactory" uniqueID="CoordinatorFactory(System.Int32;System.Int32;System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;;System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;;System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory.CoordinatorFactory(System.Int32;System.Int32;System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;;System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;;System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
		</class>
		<class name="CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.ctor&gt;b__0" uniqueID="&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;.&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompilePredicate" uniqueID="CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;.CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DescribeExpression" uniqueID="DescribeExpression(System.Linq.Expressions.Expression):System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;.DescribeExpression(System.Linq.Expressions.Expression):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecordState" uniqueID="GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;.ToString():System.String</signature>
			</method>
		</class>
		<class name="Shaper&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Private" methodKind="Member" name="Finally" uniqueID="Finally():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.Finally():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeRecordStates" uniqueID="InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Shaper&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;;System.Action;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.Shaper&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;;System.Action;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartMaterializingElement" uniqueID="StartMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.StartMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopMaterializingElement" uniqueID="StopMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.StopMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StoreRead" uniqueID="StoreRead():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.StoreRead():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_OnDone" uniqueID="add_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.add_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataWaiting" uniqueID="get_DataWaiting():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.get_DataWaiting():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootEnumerator" uniqueID="get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_OnDone" uniqueID="remove_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.remove_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataWaiting" uniqueID="set_DataWaiting(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;.set_DataWaiting(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.ctor&gt;b__0" uniqueID="&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;.&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompilePredicate" uniqueID="CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;.CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DescribeExpression" uniqueID="DescribeExpression(System.Linq.Expressions.Expression):System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;.DescribeExpression(System.Linq.Expressions.Expression):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecordState" uniqueID="GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;.ToString():System.String</signature>
			</method>
		</class>
		<class name="CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.ctor&gt;b__0" uniqueID="&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;.&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompilePredicate" uniqueID="CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;.CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DescribeExpression" uniqueID="DescribeExpression(System.Linq.Expressions.Expression):System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;.DescribeExpression(System.Linq.Expressions.Expression):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecordState" uniqueID="GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Genre&gt;.ToString():System.String</signature>
			</method>
		</class>
		<class name="CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.ctor&gt;b__0" uniqueID="&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;.&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompilePredicate" uniqueID="CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;.CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DescribeExpression" uniqueID="DescribeExpression(System.Linq.Expressions.Expression):System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;.DescribeExpression(System.Linq.Expressions.Expression):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecordState" uniqueID="GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;.ToString():System.String</signature>
			</method>
		</class>
		<class name="Shaper&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Private" methodKind="Member" name="Finally" uniqueID="Finally():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.Finally():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeRecordStates" uniqueID="InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Shaper&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;;System.Action;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.Shaper&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Cart&gt;;System.Action;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartMaterializingElement" uniqueID="StartMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.StartMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopMaterializingElement" uniqueID="StopMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.StopMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StoreRead" uniqueID="StoreRead():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.StoreRead():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_OnDone" uniqueID="add_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.add_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataWaiting" uniqueID="get_DataWaiting():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.get_DataWaiting():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootEnumerator" uniqueID="get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_OnDone" uniqueID="remove_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.remove_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataWaiting" uniqueID="set_DataWaiting(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;.set_DataWaiting(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.ctor&gt;b__0" uniqueID="&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;.&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompilePredicate" uniqueID="CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;.CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DescribeExpression" uniqueID="DescribeExpression(System.Linq.Expressions.Expression):System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;.DescribeExpression(System.Linq.Expressions.Expression):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecordState" uniqueID="GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;.ToString():System.String</signature>
			</method>
		</class>
		<class name="CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.ctor&gt;b__0" uniqueID="&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.&lt;.ctor&gt;b__0(System.Data.Common.Internal.Materialization.Shaper):System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompilePredicate" uniqueID="CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.CompilePredicate(System.Linq.Expressions.Expression):System.Func&lt;System.Data.Common.Internal.Materialization.Shaper;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DescribeExpression" uniqueID="DescribeExpression(System.Linq.Expressions.Expression):System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.DescribeExpression(System.Linq.Expressions.Expression):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;(System.Int32;System.Int32;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Data.Common.Internal.Materialization.RecordStateFactory[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCoordinator" uniqueID="CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator;System.Data.Common.Internal.Materialization.Coordinator):System.Data.Common.Internal.Materialization.Coordinator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecordState" uniqueID="GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;):System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.ToString():System.String</signature>
			</method>
		</class>
		<class name="Shaper&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Private" methodKind="Member" name="Finally" uniqueID="Finally():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.Finally():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeRecordStates" uniqueID="InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="Shaper&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;;System.Action;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.Shaper&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.DbDataRecord&gt;;System.Action;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartMaterializingElement" uniqueID="StartMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.StartMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopMaterializingElement" uniqueID="StopMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.StopMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StoreRead" uniqueID="StoreRead():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.StoreRead():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_OnDone" uniqueID="add_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.add_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataWaiting" uniqueID="get_DataWaiting():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.get_DataWaiting():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootEnumerator" uniqueID="get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_OnDone" uniqueID="remove_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.remove_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataWaiting" uniqueID="set_DataWaiting(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;.set_DataWaiting(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Shaper" uniqueID="System.Data.Common.Internal.Materialization.Shaper">
			<method accessibility="Private" methodKind="Member" name="CheckClearedEntryOnSpan" uniqueID="CheckClearedEntryOnSpan(System.Data.EntityKey;System.Data.Objects.Internal.IEntityWrapper;System.Data.Metadata.Edm.AssociationEndMember):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper.CheckClearedEntryOnSpan(System.Data.EntityKey;System.Data.Objects.Internal.IEntityWrapper;System.Data.Metadata.Edm.AssociationEndMember):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckClearedEntryOnSpan" uniqueID="CheckClearedEntryOnSpan(System.Object;System.Data.Objects.Internal.IEntityWrapper;System.Data.EntityKey;System.Data.Metadata.Edm.AssociationEndMember):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper.CheckClearedEntryOnSpan(System.Object;System.Data.Objects.Internal.IEntityWrapper;System.Data.EntityKey;System.Data.Metadata.Edm.AssociationEndMember):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateSpatialDataReader" uniqueID="CreateSpatialDataReader():System.Data.Spatial.DbSpatialDataReader">
				<signature>System.Data.Common.Internal.Materialization.Shaper.CreateSpatialDataReader():System.Data.Spatial.DbSpatialDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGeographyColumnValue" uniqueID="GetGeographyColumnValue(System.Int32):System.Data.Spatial.DbGeography">
				<signature>System.Data.Common.Internal.Materialization.Shaper.GetGeographyColumnValue(System.Int32):System.Data.Spatial.DbGeography</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGeometryColumnValue" uniqueID="GetGeometryColumnValue(System.Int32):System.Data.Spatial.DbGeometry">
				<signature>System.Data.Common.Internal.Materialization.Shaper.GetGeometryColumnValue(System.Int32):System.Data.Spatial.DbGeometry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InitializeForOnMaterialize" uniqueID="InitializeForOnMaterialize():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper.InitializeForOnMaterialize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RaiseMaterializedEvents" uniqueID="RaiseMaterializedEvents():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper.RaiseMaterializedEvents():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterMaterializedEntityForEvent" uniqueID="RegisterMaterializedEntityForEvent(System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper.RegisterMaterializedEntityForEvent(System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetColumnValue" uniqueID="SetColumnValue(System.Int32;System.Int32;System.Object):System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper.SetColumnValue(System.Int32;System.Int32;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetEntityRecordInfo" uniqueID="SetEntityRecordInfo(System.Int32;System.Data.EntityKey;System.Data.Metadata.Edm.EntitySet):System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper.SetEntityRecordInfo(System.Int32;System.Data.EntityKey;System.Data.Metadata.Edm.EntitySet):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetIsLoadedForSpan" uniqueID="SetIsLoadedForSpan(System.Data.Objects.DataClasses.RelatedEnd;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper.SetIsLoadedForSpan(System.Data.Objects.DataClasses.RelatedEnd;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper" uniqueID="Shaper(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper.Shaper(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryGetRelatedEnd" uniqueID="TryGetRelatedEnd(System.Data.Objects.Internal.IEntityWrapper;System.Data.Metadata.Edm.AssociationType;System.String;System.String;System.Data.Objects.DataClasses.RelatedEnd):System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper.TryGetRelatedEnd(System.Data.Objects.Internal.IEntityWrapper;System.Data.Metadata.Edm.AssociationType;System.String;System.String;System.Data.Objects.DataClasses.RelatedEnd):System.Boolean</signature>
			</method>
		</class>
		<class name="Shaper&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Private" methodKind="Member" name="Finally" uniqueID="Finally():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.Finally():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeRecordStates" uniqueID="InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Shaper&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;;System.Action;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.Shaper&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Album&gt;;System.Action;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartMaterializingElement" uniqueID="StartMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.StartMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopMaterializingElement" uniqueID="StopMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.StopMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StoreRead" uniqueID="StoreRead():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.StoreRead():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_OnDone" uniqueID="add_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.add_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataWaiting" uniqueID="get_DataWaiting():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.get_DataWaiting():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootEnumerator" uniqueID="get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_OnDone" uniqueID="remove_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.remove_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataWaiting" uniqueID="set_DataWaiting(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;.set_DataWaiting(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Shaper&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Private" methodKind="Member" name="Finally" uniqueID="Finally():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.Finally():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeRecordStates" uniqueID="InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="Shaper&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;;System.Action;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.Shaper&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.Artist&gt;;System.Action;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartMaterializingElement" uniqueID="StartMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.StartMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopMaterializingElement" uniqueID="StopMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.StopMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StoreRead" uniqueID="StoreRead():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.StoreRead():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_OnDone" uniqueID="add_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.add_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataWaiting" uniqueID="get_DataWaiting():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.get_DataWaiting():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootEnumerator" uniqueID="get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_OnDone" uniqueID="remove_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.remove_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataWaiting" uniqueID="set_DataWaiting(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;.set_DataWaiting(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Private" methodKind="Member" name="Finally" uniqueID="Finally():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.Finally():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeRecordStates" uniqueID="InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Action;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Action;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartMaterializingElement" uniqueID="StartMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.StartMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopMaterializingElement" uniqueID="StopMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.StopMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StoreRead" uniqueID="StoreRead():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.StoreRead():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_OnDone" uniqueID="add_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.add_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataWaiting" uniqueID="get_DataWaiting():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.get_DataWaiting():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootEnumerator" uniqueID="get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_OnDone" uniqueID="remove_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.remove_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataWaiting" uniqueID="set_DataWaiting(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;.set_DataWaiting(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
			<method accessibility="Private" methodKind="Member" name="Finally" uniqueID="Finally():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.Finally():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeRecordStates" uniqueID="InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;;System.Action;System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;(System.Data.Common.DbDataReader;System.Data.Objects.ObjectContext;System.Data.Metadata.Edm.MetadataWorkspace;System.Data.Objects.MergeOption;System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory&lt;System.Data.Common.Internal.Materialization.RecordState&gt;;System.Action;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartMaterializingElement" uniqueID="StartMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.StartMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopMaterializingElement" uniqueID="StopMaterializingElement():System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.StopMaterializingElement():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StoreRead" uniqueID="StoreRead():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.StoreRead():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_OnDone" uniqueID="add_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.add_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataWaiting" uniqueID="get_DataWaiting():System.Boolean">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.get_DataWaiting():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootEnumerator" uniqueID="get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.get_RootEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_OnDone" uniqueID="remove_OnDone(System.EventHandler):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.remove_OnDone(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataWaiting" uniqueID="set_DataWaiting(System.Boolean):System.Void">
				<signature>System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.set_DataWaiting(System.Boolean):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections">
		<class name="IEnumerable" uniqueID="System.Collections.IEnumerable">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
		</class>
		<class name="ICollection" uniqueID="System.Collections.ICollection">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ICollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
		</class>
		<class name="IDictionaryEnumerator" uniqueID="System.Collections.IDictionaryEnumerator">
			<method accessibility="Public" methodKind="Member" name="get_Entry" uniqueID="get_Entry():System.Collections.DictionaryEntry">
				<signature>System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.Object">
				<signature>System.Collections.IDictionaryEnumerator.get_Key():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Collections.IDictionaryEnumerator.get_Value():System.Object</signature>
			</method>
		</class>
		<class name="IList" uniqueID="System.Collections.IList">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Int32">
				<signature>System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object):System.Int32">
				<signature>System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator" uniqueID="System.Collections.IEnumerator">
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.IEnumerator.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Object">
				<signature>System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
		</class>
		<class name="IStructuralComparable" uniqueID="System.Collections.IStructuralComparable">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Collections.IStructuralComparable.CompareTo(System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
		</class>
		<class name="IDictionary" uniqueID="System.Collections.IDictionary">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.IDictionary.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Object):System.Object">
				<signature>System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.ICollection">
				<signature>System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.ICollection">
				<signature>System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IStructuralEquatable" uniqueID="System.Collections.IStructuralEquatable">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object;System.Collections.IEqualityComparer):System.Boolean">
				<signature>System.Collections.IStructuralEquatable.Equals(System.Object;System.Collections.IEqualityComparer):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode(System.Collections.IEqualityComparer):System.Int32">
				<signature>System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer):System.Int32</signature>
			</method>
		</class>
	</package>
	<package name="System.Reflection">
		<class name="ICustomAttributeProvider" uniqueID="System.Reflection.ICustomAttributeProvider">
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Reflection.ICustomAttributeProvider.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
		</class>
		<class name="MemberInfo" uniqueID="System.Reflection.MemberInfo">
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Reflection.MemberInfo;System.Reflection.MemberInfo):System.Boolean">
				<signature>System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo;System.Reflection.MemberInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Reflection.MemberInfo;System.Reflection.MemberInfo):System.Boolean">
				<signature>System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo;System.Reflection.MemberInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CacheEquals" uniqueID="CacheEquals(System.Object):System.Boolean">
				<signature>System.Reflection.MemberInfo.CacheEquals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Reflection.MemberInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Reflection.MemberInfo.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributesData" uniqueID="GetCustomAttributesData():System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;">
				<signature>System.Reflection.MemberInfo.GetCustomAttributesData():System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Reflection.MemberInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Reflection.MemberInfo.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberInfo" uniqueID="MemberInfo():System.Void">
				<signature>System.Reflection.MemberInfo.MemberInfo():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetType" uniqueID="System.Runtime.InteropServices._MemberInfo.GetType():System.Type">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetTypeInfo" uniqueID="System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.Invoke" uniqueID="System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CustomAttributes" uniqueID="get_CustomAttributes():System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;">
				<signature>System.Reflection.MemberInfo.get_CustomAttributes():System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Reflection.MemberInfo.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Reflection.MemberInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MetadataToken" uniqueID="get_MetadataToken():System.Int32">
				<signature>System.Reflection.MemberInfo.get_MetadataToken():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Reflection.MemberInfo.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Reflection.MemberInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Reflection.MemberInfo.get_ReflectedType():System.Type</signature>
			</method>
		</class>
		<class name="FieldInfo" uniqueID="System.Reflection.FieldInfo">
			<method accessibility="Public" methodKind="Static" name="GetFieldFromHandle" uniqueID="GetFieldFromHandle(System.RuntimeFieldHandle):System.Reflection.FieldInfo">
				<signature>System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetFieldFromHandle" uniqueID="GetFieldFromHandle(System.RuntimeFieldHandle;System.RuntimeTypeHandle):System.Reflection.FieldInfo">
				<signature>System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle;System.RuntimeTypeHandle):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Reflection.FieldInfo;System.Reflection.FieldInfo):System.Boolean">
				<signature>System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo;System.Reflection.FieldInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Reflection.FieldInfo;System.Reflection.FieldInfo):System.Boolean">
				<signature>System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo;System.Reflection.FieldInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Reflection.FieldInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FieldInfo" uniqueID="FieldInfo():System.Void">
				<signature>System.Reflection.FieldInfo.FieldInfo():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Reflection.FieldInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetOptionalCustomModifiers" uniqueID="GetOptionalCustomModifiers():System.Type[]">
				<signature>System.Reflection.FieldInfo.GetOptionalCustomModifiers():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRawConstantValue" uniqueID="GetRawConstantValue():System.Object">
				<signature>System.Reflection.FieldInfo.GetRawConstantValue():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRequiredCustomModifiers" uniqueID="GetRequiredCustomModifiers():System.Type[]">
				<signature>System.Reflection.FieldInfo.GetRequiredCustomModifiers():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Object):System.Object">
				<signature>System.Reflection.FieldInfo.GetValue(System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueDirect" uniqueID="GetValueDirect(System.TypedReference):System.Object">
				<signature>System.Reflection.FieldInfo.GetValueDirect(System.TypedReference):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Object):System.Void">
				<signature>System.Reflection.FieldInfo.SetValue(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Globalization.CultureInfo):System.Void">
				<signature>System.Reflection.FieldInfo.SetValue(System.Object;System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValueDirect" uniqueID="SetValueDirect(System.TypedReference;System.Object):System.Void">
				<signature>System.Reflection.FieldInfo.SetValueDirect(System.TypedReference;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._FieldInfo.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._FieldInfo.GetType" uniqueID="System.Runtime.InteropServices._FieldInfo.GetType():System.Type">
				<signature>System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._FieldInfo.GetTypeInfo" uniqueID="System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._FieldInfo.Invoke" uniqueID="System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.FieldAttributes">
				<signature>System.Reflection.FieldInfo.get_Attributes():System.Reflection.FieldAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FieldHandle" uniqueID="get_FieldHandle():System.RuntimeFieldHandle">
				<signature>System.Reflection.FieldInfo.get_FieldHandle():System.RuntimeFieldHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FieldType" uniqueID="get_FieldType():System.Type">
				<signature>System.Reflection.FieldInfo.get_FieldType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAssembly" uniqueID="get_IsAssembly():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamily" uniqueID="get_IsFamily():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyAndAssembly" uniqueID="get_IsFamilyAndAssembly():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsFamilyAndAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyOrAssembly" uniqueID="get_IsFamilyOrAssembly():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsFamilyOrAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInitOnly" uniqueID="get_IsInitOnly():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsInitOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLiteral" uniqueID="get_IsLiteral():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsLiteral():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNotSerialized" uniqueID="get_IsNotSerialized():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsNotSerialized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPinvokeImpl" uniqueID="get_IsPinvokeImpl():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsPinvokeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrivate" uniqueID="get_IsPrivate():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecurityCritical" uniqueID="get_IsSecurityCritical():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsSecurityCritical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecuritySafeCritical" uniqueID="get_IsSecuritySafeCritical():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsSecuritySafeCritical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecurityTransparent" uniqueID="get_IsSecurityTransparent():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsSecurityTransparent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsStatic" uniqueID="get_IsStatic():System.Boolean">
				<signature>System.Reflection.FieldInfo.get_IsStatic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Reflection.FieldInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
		</class>
		<class name="MethodBase" uniqueID="System.Reflection.MethodBase">
			<method accessibility="Protected" methodKind="Static" name="ConstructParameters" uniqueID="ConstructParameters(System.Type[];System.Reflection.CallingConventions;System.Boolean):System.String">
				<signature>System.Reflection.MethodBase.ConstructParameters(System.Type[];System.Reflection.CallingConventions;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCurrentMethod" uniqueID="GetCurrentMethod():System.Reflection.MethodBase">
				<signature>System.Reflection.MethodBase.GetCurrentMethod():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetMethodFromHandle" uniqueID="GetMethodFromHandle(System.RuntimeMethodHandle):System.Reflection.MethodBase">
				<signature>System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle):System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetMethodFromHandle" uniqueID="GetMethodFromHandle(System.RuntimeMethodHandle;System.RuntimeTypeHandle):System.Reflection.MethodBase">
				<signature>System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle;System.RuntimeTypeHandle):System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Reflection.MethodBase;System.Reflection.MethodBase):System.Boolean">
				<signature>System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase;System.Reflection.MethodBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Reflection.MethodBase;System.Reflection.MethodBase):System.Boolean">
				<signature>System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase;System.Reflection.MethodBase):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckArguments" uniqueID="CheckArguments(System.Object[];System.Reflection.Binder;System.Reflection.BindingFlags;System.Globalization.CultureInfo;System.Signature):System.Object[]">
				<signature>System.Reflection.MethodBase.CheckArguments(System.Object[];System.Reflection.Binder;System.Reflection.BindingFlags;System.Globalization.CultureInfo;System.Signature):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Reflection.MethodBase.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FormatNameAndSig" uniqueID="FormatNameAndSig():System.String">
				<signature>System.Reflection.MethodBase.FormatNameAndSig():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FormatNameAndSig" uniqueID="FormatNameAndSig(System.Boolean):System.String">
				<signature>System.Reflection.MethodBase.FormatNameAndSig(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericArguments" uniqueID="GetGenericArguments():System.Type[]">
				<signature>System.Reflection.MethodBase.GetGenericArguments():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Reflection.MethodBase.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethodBody" uniqueID="GetMethodBody():System.Reflection.MethodBody">
				<signature>System.Reflection.MethodBase.GetMethodBody():System.Reflection.MethodBody</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetMethodDesc" uniqueID="GetMethodDesc():System.IntPtr">
				<signature>System.Reflection.MethodBase.GetMethodDesc():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethodImplementationFlags" uniqueID="GetMethodImplementationFlags():System.Reflection.MethodImplAttributes">
				<signature>System.Reflection.MethodBase.GetMethodImplementationFlags():System.Reflection.MethodImplAttributes</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetParameterTypes" uniqueID="GetParameterTypes():System.Type[]">
				<signature>System.Reflection.MethodBase.GetParameterTypes():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParameters" uniqueID="GetParameters():System.Reflection.ParameterInfo[]">
				<signature>System.Reflection.MethodBase.GetParameters():System.Reflection.ParameterInfo[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetParametersNoCopy" uniqueID="GetParametersNoCopy():System.Reflection.ParameterInfo[]">
				<signature>System.Reflection.MethodBase.GetParametersNoCopy():System.Reflection.ParameterInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Object[]):System.Object">
				<signature>System.Reflection.MethodBase.Invoke(System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Reflection.MethodBase.Invoke(System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MethodBase" uniqueID="MethodBase():System.Void">
				<signature>System.Reflection.MethodBase.MethodBase():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.GetType" uniqueID="System.Runtime.InteropServices._MethodBase.GetType():System.Type">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.GetTypeInfo" uniqueID="System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.Invoke" uniqueID="System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsAbstract" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsAbstract():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsAssembly" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsAssembly():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsConstructor" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsConstructor():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsConstructor():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsFamily" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsFamily():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsFamily():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsFamilyAndAssembly" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsFamilyAndAssembly():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsFamilyAndAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsFamilyOrAssembly" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsFamilyOrAssembly():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsFamilyOrAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsFinal" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsFinal():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsFinal():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsHideBySig" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsHideBySig():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsHideBySig():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsPrivate" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsPrivate():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsPublic" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsPublic():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsSpecialName" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsSpecialName():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsStatic" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsStatic():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsStatic():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodBase.get_IsVirtual" uniqueID="System.Runtime.InteropServices._MethodBase.get_IsVirtual():System.Boolean">
				<signature>System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.get_IsVirtual():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.MethodAttributes">
				<signature>System.Reflection.MethodBase.get_Attributes():System.Reflection.MethodAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CallingConvention" uniqueID="get_CallingConvention():System.Reflection.CallingConventions">
				<signature>System.Reflection.MethodBase.get_CallingConvention():System.Reflection.CallingConventions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContainsGenericParameters" uniqueID="get_ContainsGenericParameters():System.Boolean">
				<signature>System.Reflection.MethodBase.get_ContainsGenericParameters():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FullName" uniqueID="get_FullName():System.String">
				<signature>System.Reflection.MethodBase.get_FullName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAssembly" uniqueID="get_IsAssembly():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsConstructor" uniqueID="get_IsConstructor():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsConstructor():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsDynamicallyInvokable" uniqueID="get_IsDynamicallyInvokable():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsDynamicallyInvokable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamily" uniqueID="get_IsFamily():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyAndAssembly" uniqueID="get_IsFamilyAndAssembly():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsFamilyAndAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyOrAssembly" uniqueID="get_IsFamilyOrAssembly():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsFamilyOrAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFinal" uniqueID="get_IsFinal():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsFinal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericMethod" uniqueID="get_IsGenericMethod():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsGenericMethod():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericMethodDefinition" uniqueID="get_IsGenericMethodDefinition():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsGenericMethodDefinition():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsHideBySig" uniqueID="get_IsHideBySig():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsHideBySig():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrivate" uniqueID="get_IsPrivate():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecurityCritical" uniqueID="get_IsSecurityCritical():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsSecurityCritical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecuritySafeCritical" uniqueID="get_IsSecuritySafeCritical():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsSecuritySafeCritical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecurityTransparent" uniqueID="get_IsSecurityTransparent():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsSecurityTransparent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsStatic" uniqueID="get_IsStatic():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsStatic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsVirtual" uniqueID="get_IsVirtual():System.Boolean">
				<signature>System.Reflection.MethodBase.get_IsVirtual():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MethodHandle" uniqueID="get_MethodHandle():System.RuntimeMethodHandle">
				<signature>System.Reflection.MethodBase.get_MethodHandle():System.RuntimeMethodHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MethodImplementationFlags" uniqueID="get_MethodImplementationFlags():System.Reflection.MethodImplAttributes">
				<signature>System.Reflection.MethodBase.get_MethodImplementationFlags():System.Reflection.MethodImplAttributes</signature>
			</method>
		</class>
		<class name="IReflect" uniqueID="System.Reflection.IReflect">
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Reflection.IReflect.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Reflection.IReflect.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Reflection.IReflect.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Reflection.IReflect.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Reflection.IReflect.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Reflection.IReflect.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Reflection.IReflect.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Reflection.IReflect.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
		<class name="MethodInfo" uniqueID="System.Reflection.MethodInfo">
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Reflection.MethodInfo;System.Reflection.MethodInfo):System.Boolean">
				<signature>System.Reflection.MethodInfo.op_Equality(System.Reflection.MethodInfo;System.Reflection.MethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Reflection.MethodInfo;System.Reflection.MethodInfo):System.Boolean">
				<signature>System.Reflection.MethodInfo.op_Inequality(System.Reflection.MethodInfo;System.Reflection.MethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateDelegate" uniqueID="CreateDelegate(System.Type):System.Delegate">
				<signature>System.Reflection.MethodInfo.CreateDelegate(System.Type):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object):System.Delegate">
				<signature>System.Reflection.MethodInfo.CreateDelegate(System.Type;System.Object):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Reflection.MethodInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBaseDefinition" uniqueID="GetBaseDefinition():System.Reflection.MethodInfo">
				<signature>System.Reflection.MethodInfo.GetBaseDefinition():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericArguments" uniqueID="GetGenericArguments():System.Type[]">
				<signature>System.Reflection.MethodInfo.GetGenericArguments():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericMethodDefinition" uniqueID="GetGenericMethodDefinition():System.Reflection.MethodInfo">
				<signature>System.Reflection.MethodInfo.GetGenericMethodDefinition():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Reflection.MethodInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeGenericMethod" uniqueID="MakeGenericMethod(System.Type[]):System.Reflection.MethodInfo">
				<signature>System.Reflection.MethodInfo.MakeGenericMethod(System.Type[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MethodInfo" uniqueID="MethodInfo():System.Void">
				<signature>System.Reflection.MethodInfo.MethodInfo():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodInfo.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodInfo.GetType" uniqueID="System.Runtime.InteropServices._MethodInfo.GetType():System.Type">
				<signature>System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodInfo.GetTypeInfo" uniqueID="System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MethodInfo.Invoke" uniqueID="System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Reflection.MethodInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReturnParameter" uniqueID="get_ReturnParameter():System.Reflection.ParameterInfo">
				<signature>System.Reflection.MethodInfo.get_ReturnParameter():System.Reflection.ParameterInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReturnType" uniqueID="get_ReturnType():System.Type">
				<signature>System.Reflection.MethodInfo.get_ReturnType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReturnTypeCustomAttributes" uniqueID="get_ReturnTypeCustomAttributes():System.Reflection.ICustomAttributeProvider">
				<signature>System.Reflection.MethodInfo.get_ReturnTypeCustomAttributes():System.Reflection.ICustomAttributeProvider</signature>
			</method>
		</class>
	</package>
	<package name="System.Runtime.Serialization">
		<class name="ISerializable" uniqueID="System.Runtime.Serialization.ISerializable">
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
		</class>
		<class name="IDeserializationCallback" uniqueID="System.Runtime.Serialization.IDeserializationCallback">
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections.Generic">
		<class name="Dictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleKey" uniqueID="IsCompatibleKey(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.IsCompatibleKey(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Add(System.String;System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsValue" uniqueID="ContainsValue(System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.ContainsValue(System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary&lt;System.String,System.Web.RequestNotification&gt;():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Dictionary&lt;System.String,System.Web.RequestNotification&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.IDictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.IDictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.IDictionary&lt;System.String;System.Web.RequestNotification&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.IDictionary&lt;System.String;System.Web.RequestNotification&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Dictionary&lt;System.String,System.Web.RequestNotification&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.String):System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.FindEntry(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.String):System.Web.RequestNotification">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.GetValueOrDefault(System.String):System.Web.RequestNotification</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Insert" uniqueID="Insert(System.String;System.Web.RequestNotification;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Insert(System.String;System.Web.RequestNotification;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Resize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.Resize(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Add" uniqueID="System.Collections.IDictionary.Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Contains" uniqueID="System.Collections.IDictionary.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.GetEnumerator" uniqueID="System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Remove" uniqueID="System.Collections.IDictionary.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsFixedSize" uniqueID="System.Collections.IDictionary.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsReadOnly" uniqueID="System.Collections.IDictionary.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Item" uniqueID="System.Collections.IDictionary.get_Item(System.Object):System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Keys" uniqueID="System.Collections.IDictionary.get_Keys():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Values" uniqueID="System.Collections.IDictionary.get_Values():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.set_Item" uniqueID="System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.TryGetValue(System.String;System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.RequestNotification">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Item(System.String):System.Web.RequestNotification</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.Web.RequestNotification&gt;.set_Item(System.String;System.Web.RequestNotification):System.Void</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;.Add(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;.Contains(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Album[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;.CopyTo(MvcMusicStore.Models.Album[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;.Remove(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Album&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;.Add(System.String;System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;.TryGetValue(System.String;System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.RequestNotification">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Item(System.String):System.Web.RequestNotification</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.RequestNotification&gt;.set_Item(System.String;System.Web.RequestNotification):System.Void</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Linq.Expressions.ParameterExpression):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;.Add(System.Linq.Expressions.ParameterExpression):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.ParameterExpression):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;.Contains(System.Linq.Expressions.ParameterExpression):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.ParameterExpression[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;.CopyTo(System.Linq.Expressions.ParameterExpression[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Linq.Expressions.ParameterExpression):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;.Remove(System.Linq.Expressions.ParameterExpression):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ParameterExpression&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;.get_Current():System.AttributeUsageAttribute</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Linq.Expressions.Expression&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.Expression&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.Expression">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.Expression&gt;.get_Item(System.Int32):System.Linq.Expressions.Expression</signature>
			</method>
		</class>
		<class name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleKey" uniqueID="IsCompatibleKey(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.IsCompatibleKey(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Add(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsValue" uniqueID="ContainsValue(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.ContainsValue(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.AttributeUsageAttribute&gt;;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.AttributeUsageAttribute&gt;;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.Type):System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.FindEntry(System.Type):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Type):System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.GetValueOrDefault(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Insert" uniqueID="Insert(System.Type;System.AttributeUsageAttribute;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Insert(System.Type;System.AttributeUsageAttribute;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Resize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Resize(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Add" uniqueID="System.Collections.IDictionary.Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Contains" uniqueID="System.Collections.IDictionary.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.GetEnumerator" uniqueID="System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Remove" uniqueID="System.Collections.IDictionary.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsFixedSize" uniqueID="System.Collections.IDictionary.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsReadOnly" uniqueID="System.Collections.IDictionary.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Item" uniqueID="System.Collections.IDictionary.get_Item(System.Object):System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Keys" uniqueID="System.Collections.IDictionary.get_Keys():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Values" uniqueID="System.Collections.IDictionary.get_Values():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.set_Item" uniqueID="System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Item(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.set_Item(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="List&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Add(MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.BinarySearch(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Cart;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.BinarySearch(MvcMusicStore.Models.Cart;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Cart;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Cart;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Contains(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Cart[]):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.CopyTo(MvcMusicStore.Models.Cart[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;MvcMusicStore.Models.Cart[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.CopyTo(System.Int32;MvcMusicStore.Models.Cart[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Exists(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Find(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.FindAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.FindIndex(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.FindLast(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.ForEach(System.Action&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.IndexOf(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.IndexOf(MvcMusicStore.Models.Cart;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.IndexOf(MvcMusicStore.Models.Cart;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.LastIndexOf(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Cart;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.LastIndexOf(MvcMusicStore.Models.Cart;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Cart;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.LastIndexOf(MvcMusicStore.Models.Cart;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="List&lt;MvcMusicStore.Models.Cart&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.List&lt;MvcMusicStore.Models.Cart&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="List&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.List&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="List&lt;MvcMusicStore.Models.Cart&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.List&lt;MvcMusicStore.Models.Cart&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Remove(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Sort(System.Comparison&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():MvcMusicStore.Models.Cart[]">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.ToArray():MvcMusicStore.Models.Cart[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.get_Item(System.Int32):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;.set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;&gt;</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyDictionary&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Web.RequestNotification&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Web.RequestNotification&gt;.TryGetValue(System.String;System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.RequestNotification">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Item(System.String):System.Web.RequestNotification</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.IEnumerable&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Web.RequestNotification&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.Web.RequestNotification&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;.Add(MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;.Contains(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Genre[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;.CopyTo(MvcMusicStore.Models.Genre[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;.Remove(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Genre&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Add(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Item(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.set_Item(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Item(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Type;System.Object):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;.Add(System.Type;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.Object):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;.TryGetValue(System.Type;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.Object">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;.get_Item(System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Type;System.Object):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.Object&gt;.set_Item(System.Type;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyDictionary&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.Object&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.Object):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.Object&gt;.TryGetValue(System.Type;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.Object">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.Object&gt;.get_Item(System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.Object&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.IEnumerable&lt;System.Object&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.Object&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.Object&gt;</signature>
			</method>
		</class>
		<class name="Dictionary&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleKey" uniqueID="IsCompatibleKey(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.IsCompatibleKey(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Type;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Add(System.Type;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsValue" uniqueID="ContainsValue(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.ContainsValue(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.Object&gt;" uniqueID="Dictionary&lt;System.Type,System.Object&gt;():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Dictionary&lt;System.Type,System.Object&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.Object&gt;" uniqueID="Dictionary&lt;System.Type,System.Object&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Dictionary&lt;System.Type,System.Object&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.Object&gt;" uniqueID="Dictionary&lt;System.Type,System.Object&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.Object&gt;;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Dictionary&lt;System.Type,System.Object&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.Object&gt;;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.Object&gt;" uniqueID="Dictionary&lt;System.Type,System.Object&gt;(System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Dictionary&lt;System.Type,System.Object&gt;(System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.Object&gt;" uniqueID="Dictionary&lt;System.Type,System.Object&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Dictionary&lt;System.Type,System.Object&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.Object&gt;" uniqueID="Dictionary&lt;System.Type,System.Object&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Dictionary&lt;System.Type,System.Object&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dictionary&lt;System.Type,System.Object&gt;" uniqueID="Dictionary&lt;System.Type,System.Object&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Dictionary&lt;System.Type,System.Object&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.Type):System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.FindEntry(System.Type):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Type):System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.GetValueOrDefault(System.Type):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Insert" uniqueID="Insert(System.Type;System.Object;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Insert(System.Type;System.Object;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Resize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.Resize(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Add" uniqueID="System.Collections.IDictionary.Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Contains" uniqueID="System.Collections.IDictionary.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.GetEnumerator" uniqueID="System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Remove" uniqueID="System.Collections.IDictionary.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsFixedSize" uniqueID="System.Collections.IDictionary.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsReadOnly" uniqueID="System.Collections.IDictionary.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Item" uniqueID="System.Collections.IDictionary.get_Item(System.Object):System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Keys" uniqueID="System.Collections.IDictionary.get_Keys():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Values" uniqueID="System.Collections.IDictionary.get_Values():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.set_Item" uniqueID="System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.TryGetValue(System.Type;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.get_Item(System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Type;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.Object&gt;.set_Item(System.Type;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;.Add(System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;.Contains(System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.RequestNotification[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;.CopyTo(System.Web.RequestNotification[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;.Remove(System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="Dictionary`2" uniqueID="System.Collections.Generic.Dictionary`2">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleKey" uniqueID="IsCompatibleKey(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.IsCompatibleKey(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Add(System.String;System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsValue" uniqueID="ContainsValue(System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.ContainsValue(System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2():System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Collections.Generic.IDictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Collections.Generic.IDictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Collections.Generic.IDictionary&lt;System.String;System.Web.RequestNotification&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Collections.Generic.IDictionary&lt;System.String;System.Web.RequestNotification&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.String):System.Int32">
				<signature>System.Collections.Generic.Dictionary`2.FindEntry(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2.GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.String):System.Web.RequestNotification">
				<signature>System.Collections.Generic.Dictionary`2.GetValueOrDefault(System.String):System.Web.RequestNotification</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Insert" uniqueID="Insert(System.String;System.Web.RequestNotification;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Insert(System.String;System.Web.RequestNotification;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize():System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Resize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Resize(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Add" uniqueID="System.Collections.IDictionary.Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Contains" uniqueID="System.Collections.IDictionary.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.GetEnumerator" uniqueID="System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Remove" uniqueID="System.Collections.IDictionary.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsFixedSize" uniqueID="System.Collections.IDictionary.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsReadOnly" uniqueID="System.Collections.IDictionary.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Item" uniqueID="System.Collections.IDictionary.get_Item(System.Object):System.Object">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Keys" uniqueID="System.Collections.IDictionary.get_Keys():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Values" uniqueID="System.Collections.IDictionary.get_Values():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.set_Item" uniqueID="System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.TryGetValue(System.String;System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.RequestNotification">
				<signature>System.Collections.Generic.Dictionary`2.get_Item(System.String):System.Web.RequestNotification</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2.get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2.get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.set_Item(System.String;System.Web.RequestNotification):System.Void</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+KeyCollection" uniqueID="Dictionary`2+KeyCollection(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.Dictionary`2+KeyCollection(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.Add(System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.Contains(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.AttributeUsageAttribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.CopyTo(System.AttributeUsageAttribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.Remove(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Entry" uniqueID="System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Key" uniqueID="System.Collections.IDictionaryEnumerator.get_Key():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionaryEnumerator.get_Key():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Value" uniqueID="System.Collections.IDictionaryEnumerator.get_Value():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IDictionaryEnumerator.get_Value():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Entry" uniqueID="System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Key" uniqueID="System.Collections.IDictionaryEnumerator.get_Key():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionaryEnumerator.get_Key():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Value" uniqueID="System.Collections.IDictionaryEnumerator.get_Value():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionaryEnumerator.get_Value():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.RequestNotification&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.RequestNotification">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.RequestNotification&gt;.get_Current():System.Web.RequestNotification</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;" uniqueID="Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Entry" uniqueID="System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Key" uniqueID="System.Collections.IDictionaryEnumerator.get_Key():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IDictionaryEnumerator.get_Key():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Value" uniqueID="System.Collections.IDictionaryEnumerator.get_Value():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IDictionaryEnumerator.get_Value():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.Object&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.Object&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Genre">
				<signature>System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;.get_Current():MvcMusicStore.Models.Genre</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Object&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Object">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current():System.Object</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.String">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.get_Current():System.String</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.Mvc.ModelState&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.ModelState&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.ModelState&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.ModelState&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.ModelState&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.String&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Object[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.CopyTo(System.Object[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;" uniqueID="Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.Object&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ICollection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;.Add(MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;.Contains(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Artist[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;.CopyTo(MvcMusicStore.Models.Artist[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;.Remove(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Artist&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.String&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Linq.Expressions.ParameterExpression&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.ParameterExpression&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.ParameterExpression">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.ParameterExpression&gt;.get_Item(System.Int32):System.Linq.Expressions.ParameterExpression</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.String&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.String">
				<signature>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current():System.String</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Type&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Type">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Type&gt;.get_Current():System.Type</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Type">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Current():System.Type</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;" uniqueID="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.Object&gt;.get_Current():System.Object</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Current():MvcMusicStore.Models.OrderDetail</signature>
			</method>
		</class>
		<class name="ICollection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;.Add(MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;.Contains(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Order[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;.CopyTo(MvcMusicStore.Models.Order[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;.Remove(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Order&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.RequestNotification&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.RequestNotification&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.RequestNotification&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;" uniqueID="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Type">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.Object&gt;.get_Current():System.Type</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Int32&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Int32&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Int32&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.Web.RequestNotification&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Type&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Type&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Linq.Expressions.MemberBinding&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.MemberBinding&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.MemberBinding">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.MemberBinding&gt;.get_Item(System.Int32):System.Linq.Expressions.MemberBinding</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Type&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Type):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.Add(System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Type):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.Contains(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Type[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.CopyTo(System.Type[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Char&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Char">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Char&gt;.get_Current():System.Char</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Object&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Current():System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Type[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.CopyTo(System.Type[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.Type):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.Type):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Common.Internal.Materialization.RecordStateFactory">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.RecordStateFactory</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.RequestNotification">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.Web.RequestNotification&gt;.get_Current():System.Web.RequestNotification</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Type[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.CopyTo(System.Type[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;" uniqueID="Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type;System.Object&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.Type):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.Type):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.Object&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.RequestNotification[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.CopyTo(System.Web.RequestNotification[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+ValueCollection" uniqueID="Dictionary`2+ValueCollection(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.Dictionary`2+ValueCollection(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Current():System.AttributeUsageAttribute</signature>
			</method>
		</class>
		<class name="IComparer&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(MvcMusicStore.Models.Album;MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;.Compare(MvcMusicStore.Models.Album;MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.RequestNotification[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.CopyTo(System.Web.RequestNotification[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.Web.RequestNotification):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.Web.RequestNotification):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.RequestNotification&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.RequestNotification&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.Web.RequestNotification&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.Common.DbDataRecord):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;.Add(System.Data.Common.DbDataRecord):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Common.DbDataRecord):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;.Contains(System.Data.Common.DbDataRecord):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Common.DbDataRecord[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;.CopyTo(System.Data.Common.DbDataRecord[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.Common.DbDataRecord):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;.Remove(System.Data.Common.DbDataRecord):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.DbDataRecord&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IComparer&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(MvcMusicStore.Models.Order;MvcMusicStore.Models.Order):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;.Compare(MvcMusicStore.Models.Order;MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.AttributeUsageAttribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.CopyTo(System.AttributeUsageAttribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Object&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Object&gt;.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Object&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Object&gt;.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Object[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Object&gt;.CopyTo(System.Object[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Object&gt;.Remove(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Object&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Object&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;.Add(MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;.Contains(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;.CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;.Remove(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.Cart&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Decimal&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Decimal&gt;&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;.Add(MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;.Contains(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.OrderDetail[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;.CopyTo(MvcMusicStore.Models.OrderDetail[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;.Remove(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Attribute):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.Add(System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Attribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.Contains(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Attribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.CopyTo(System.Attribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Attribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.Remove(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.Routing.RouteBase&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.Routing.RouteBase&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.Routing.RouteBase">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.Routing.RouteBase&gt;.get_Current():System.Web.Routing.RouteBase</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Linq.Expressions.CatchBlock&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Linq.Expressions.CatchBlock&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Linq.Expressions.CatchBlock):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.CatchBlock&gt;.Add(System.Linq.Expressions.CatchBlock):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.CatchBlock&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.CatchBlock):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.CatchBlock&gt;.Contains(System.Linq.Expressions.CatchBlock):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.CatchBlock[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.CatchBlock&gt;.CopyTo(System.Linq.Expressions.CatchBlock[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Linq.Expressions.CatchBlock):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.CatchBlock&gt;.Remove(System.Linq.Expressions.CatchBlock):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.CatchBlock&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.CatchBlock&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Common.Internal.Materialization.CoordinatorFactory">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.CoordinatorFactory</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.Common.DbDataRecord&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;" uniqueID="List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Order">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;.get_Current():MvcMusicStore.Models.Order</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.Add(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.Contains(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.CopyTo(System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.Remove(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.Common.Internal.Materialization.RecordState):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.Add(System.Data.Common.Internal.Materialization.RecordState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Common.Internal.Materialization.RecordState):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.Contains(System.Data.Common.Internal.Materialization.RecordState):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Common.Internal.Materialization.RecordState[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.CopyTo(System.Data.Common.Internal.Materialization.RecordState[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.Common.Internal.Materialization.RecordState):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.Remove(System.Data.Common.Internal.Materialization.RecordState):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.Add(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.Contains(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Common.Internal.Materialization.RecordStateFactory[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.CopyTo(System.Data.Common.Internal.Materialization.RecordStateFactory[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.Remove(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Add(System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Objects.Internal.IEntityWrapper):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Contains(System.Data.Objects.Internal.IEntityWrapper):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Objects.Internal.IEntityWrapper[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.CopyTo(System.Data.Objects.Internal.IEntityWrapper[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.Objects.Internal.IEntityWrapper):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Remove(System.Data.Objects.Internal.IEntityWrapper):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.CatchBlock&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.CatchBlock&gt;</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Reflection.MemberInfo&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Reflection.MemberInfo">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;.get_Item(System.Int32):System.Reflection.MemberInfo</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ElementInit&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ElementInit&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Linq.Expressions.ElementInit&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ElementInit&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Linq.Expressions.ElementInit):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ElementInit&gt;.Add(System.Linq.Expressions.ElementInit):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ElementInit&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.ElementInit):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ElementInit&gt;.Contains(System.Linq.Expressions.ElementInit):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.ElementInit[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ElementInit&gt;.CopyTo(System.Linq.Expressions.ElementInit[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Linq.Expressions.ElementInit):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ElementInit&gt;.Remove(System.Linq.Expressions.ElementInit):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ElementInit&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.ElementInit&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Linq.Expressions.Expression&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.Expression&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.Expression&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Linq.Expressions.Expression&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Linq.Expressions.Expression&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Linq.Expressions.Expression):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.Expression&gt;.Add(System.Linq.Expressions.Expression):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.Expression&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.Expression):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.Expression&gt;.Contains(System.Linq.Expressions.Expression):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.Expression[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.Expression&gt;.CopyTo(System.Linq.Expressions.Expression[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Linq.Expressions.Expression):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.Expression&gt;.Remove(System.Linq.Expressions.Expression):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.Expression&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.Expression&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.Object,System.Object&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Object):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.ContainsKey(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.Remove(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Object;System.Object):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.TryGetValue(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Object):System.Object">
				<signature>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.Object&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.MemberBinding&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.MemberBinding&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Linq.Expressions.MemberBinding&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Linq.Expressions.MemberBinding&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Linq.Expressions.MemberBinding):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.MemberBinding&gt;.Add(System.Linq.Expressions.MemberBinding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.MemberBinding&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.MemberBinding):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.MemberBinding&gt;.Contains(System.Linq.Expressions.MemberBinding):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.MemberBinding[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.MemberBinding&gt;.CopyTo(System.Linq.Expressions.MemberBinding[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Linq.Expressions.MemberBinding):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.MemberBinding&gt;.Remove(System.Linq.Expressions.MemberBinding):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.MemberBinding&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Linq.Expressions.MemberBinding&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ParameterExpression&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ParameterExpression&gt;</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Objects.Internal.IEntityWrapper):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.IndexOf(System.Data.Objects.Internal.IEntityWrapper):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Insert(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.set_Item(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Reflection.CustomAttributeData&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.CustomAttributeData&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.CustomAttributeData&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Reflection.CustomAttributeData&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Reflection.CustomAttributeData):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.Add(System.Reflection.CustomAttributeData):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Reflection.CustomAttributeData):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.Contains(System.Reflection.CustomAttributeData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Reflection.CustomAttributeData[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.CopyTo(System.Reflection.CustomAttributeData[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Reflection.CustomAttributeData):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.Remove(System.Reflection.CustomAttributeData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Reflection.MemberInfo&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.MemberInfo&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.MemberInfo&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Reflection.MemberInfo&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Reflection.MemberInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Reflection.MemberInfo):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.MemberInfo&gt;.Add(System.Reflection.MemberInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.MemberInfo&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Reflection.MemberInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.MemberInfo&gt;.Contains(System.Reflection.MemberInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Reflection.MemberInfo[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.MemberInfo&gt;.CopyTo(System.Reflection.MemberInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Reflection.MemberInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.MemberInfo&gt;.Remove(System.Reflection.MemberInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.MemberInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.MemberInfo&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.ModuleConfigurationInfo&gt;.Add(System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.ModuleConfigurationInfo&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.ModuleConfigurationInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.ModuleConfigurationInfo&gt;.Contains(System.Web.ModuleConfigurationInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.ModuleConfigurationInfo[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.ModuleConfigurationInfo&gt;.CopyTo(System.Web.ModuleConfigurationInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.ModuleConfigurationInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.ModuleConfigurationInfo&gt;.Remove(System.Web.ModuleConfigurationInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.ModuleConfigurationInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.ModuleConfigurationInfo&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.Mvc.ModelState&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.Mvc.ModelState):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;.Add(System.Web.Mvc.ModelState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.Mvc.ModelState):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;.Contains(System.Web.Mvc.ModelState):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.Mvc.ModelState[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;.CopyTo(System.Web.Mvc.ModelState[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.Mvc.ModelState):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;.Remove(System.Web.Mvc.ModelState):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.SelectListItem&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.SelectListItem&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.Mvc.SelectListItem&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.Mvc.SelectListItem&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.Mvc.SelectListItem):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.SelectListItem&gt;.Add(System.Web.Mvc.SelectListItem):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.SelectListItem&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.Mvc.SelectListItem):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.SelectListItem&gt;.Contains(System.Web.Mvc.SelectListItem):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.Mvc.SelectListItem[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.SelectListItem&gt;.CopyTo(System.Web.Mvc.SelectListItem[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.Mvc.SelectListItem):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.SelectListItem&gt;.Remove(System.Web.Mvc.SelectListItem):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.SelectListItem&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Mvc.SelectListItem&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.Mvc.Filter&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.Filter&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.Filter&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.Filter&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.Filter&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.Routing.RouteBase&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.Routing.RouteBase&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Routing.RouteBase&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.Routing.RouteBase&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Routing.RouteBase&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.Routing.RouteBase&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.Routing.RouteBase&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.Routing.RouteBase):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Routing.RouteBase&gt;.Add(System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Routing.RouteBase&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.Routing.RouteBase):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Routing.RouteBase&gt;.Contains(System.Web.Routing.RouteBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.Routing.RouteBase[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Routing.RouteBase&gt;.CopyTo(System.Web.Routing.RouteBase[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.Routing.RouteBase):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Routing.RouteBase&gt;.Remove(System.Web.Routing.RouteBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Routing.RouteBase&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.Routing.RouteBase&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.ModuleConfigurationInfo&gt;.get_Item(System.Int32):System.Web.ModuleConfigurationInfo</signature>
			</method>
		</class>
		<class name="IComparer&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(MvcMusicStore.Models.Artist;MvcMusicStore.Models.Artist):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;.Compare(MvcMusicStore.Models.Artist;MvcMusicStore.Models.Artist):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(MvcMusicStore.Models.Cart;MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;.Compare(MvcMusicStore.Models.Cart;MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(MvcMusicStore.Models.Genre;MvcMusicStore.Models.Genre):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;.Compare(MvcMusicStore.Models.Genre;MvcMusicStore.Models.Genre):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(MvcMusicStore.Models.OrderDetail;MvcMusicStore.Models.OrderDetail):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;.Compare(MvcMusicStore.Models.OrderDetail;MvcMusicStore.Models.OrderDetail):System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.Object;System.Object&gt;</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Attribute;System.Attribute):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Attribute&gt;.Compare(System.Attribute;System.Attribute):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.Objects.Internal.IEntityWrapper;System.Data.Objects.Internal.IEntityWrapper):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Compare(System.Data.Objects.Internal.IEntityWrapper;System.Data.Objects.Internal.IEntityWrapper):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Web.ModuleConfigurationInfo;System.Web.ModuleConfigurationInfo):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;.Compare(System.Web.ModuleConfigurationInfo;System.Web.ModuleConfigurationInfo):System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.String,System.Object&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Object):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Add(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Object):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.TryGetValue(System.String;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Object):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.set_Item(System.String;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Web.Mvc.ModelState):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;.Add(System.String;System.Web.Mvc.ModelState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Web.Mvc.ModelState):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;.TryGetValue(System.String;System.Web.Mvc.ModelState):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.Mvc.ModelState">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;.get_Item(System.String):System.Web.Mvc.ModelState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Web.Mvc.ModelState):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ModelState&gt;.set_Item(System.String;System.Web.Mvc.ModelState):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Char&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Char&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Decimal&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Decimal&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Decimal&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Double&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Double&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Double&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Double&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Double&gt;</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;" uniqueID="KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;(System.String;System.Web.Mvc.ModelState):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;(System.String;System.Web.Mvc.ModelState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;.get_Key():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Web.Mvc.ModelState">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ModelState&gt;.get_Value():System.Web.Mvc.ModelState</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Int64&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Int64&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Int64&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Int64&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Int64&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Entity.Validation.DbEntityValidationResult">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;.get_Current():System.Data.Entity.Validation.DbEntityValidationResult</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.SwitchCase&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.SwitchCase&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Double&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Double&gt;&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Int32&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Int32&gt;&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Int64&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Int64&gt;&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Single&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Single&gt;&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Reflection.MethodInfo&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.MethodInfo&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.MethodInfo&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Single&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Single&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Single&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Single&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Single&gt;</signature>
			</method>
		</class>
		<class name="List&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Add(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.BinarySearch(MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Album;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.BinarySearch(MvcMusicStore.Models.Album;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Album;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Album;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Contains(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Album[]):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.CopyTo(MvcMusicStore.Models.Album[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Album[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.CopyTo(MvcMusicStore.Models.Album[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;MvcMusicStore.Models.Album[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.CopyTo(System.Int32;MvcMusicStore.Models.Album[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Exists(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):MvcMusicStore.Models.Album">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Find(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.FindAll(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.FindIndex(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):MvcMusicStore.Models.Album">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.FindLast(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.ForEach(System.Action&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.IndexOf(MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Album;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.IndexOf(MvcMusicStore.Models.Album;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Album;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.IndexOf(MvcMusicStore.Models.Album;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Insert(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.LastIndexOf(MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Album;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.LastIndexOf(MvcMusicStore.Models.Album;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Album;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.LastIndexOf(MvcMusicStore.Models.Album;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Album&gt;" uniqueID="List&lt;MvcMusicStore.Models.Album&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.List&lt;MvcMusicStore.Models.Album&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Album&gt;" uniqueID="List&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.List&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Album&gt;" uniqueID="List&lt;MvcMusicStore.Models.Album&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.List&lt;MvcMusicStore.Models.Album&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Remove(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Sort(System.Comparison&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():MvcMusicStore.Models.Album[]">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.ToArray():MvcMusicStore.Models.Album[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Album&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Album">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.get_Item(System.Int32):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;.set_Item(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Reflection.PropertyInfo&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.PropertyInfo&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.PropertyInfo&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo">
				<signature>System.Collections.Generic.IEnumerator&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;.get_Current():Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo</signature>
			</method>
		</class>
		<class name="IEqualityComparer&lt;System.String&gt;" uniqueID="System.Collections.Generic.IEqualityComparer&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String;System.String):System.Boolean">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;.Equals(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode(System.String):System.Int32">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;.GetHashCode(System.String):System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Album">
				<signature>System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;.get_Current():MvcMusicStore.Models.Album</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Artist">
				<signature>System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;.get_Current():MvcMusicStore.Models.Artist</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Decimal&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Decimal&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Decimal">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Decimal&gt;.get_Current():System.Decimal</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;.get_Current():MvcMusicStore.Models.Cart</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Order">
				<signature>System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;.get_Current():MvcMusicStore.Models.Order</signature>
			</method>
		</class>
		<class name="IList&lt;System.Reflection.MemberInfo&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Reflection.MemberInfo):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;.IndexOf(System.Reflection.MemberInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Reflection.MemberInfo):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;.Insert(System.Int32;System.Reflection.MemberInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Reflection.MemberInfo">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;.get_Item(System.Int32):System.Reflection.MemberInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Reflection.MemberInfo):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;.set_Item(System.Int32;System.Reflection.MemberInfo):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Attribute">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;.get_Current():System.Attribute</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Common.DbDataRecord">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;.get_Current():System.Data.Common.DbDataRecord</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Common.Internal.Materialization.RecordStateFactory">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_Current():System.Data.Common.Internal.Materialization.RecordStateFactory</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Common.Internal.Materialization.CoordinatorFactory">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_Current():System.Data.Common.Internal.Materialization.CoordinatorFactory</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Common.Internal.Materialization.RecordState">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordState&gt;.get_Current():System.Data.Common.Internal.Materialization.RecordState</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Double&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Double&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Double">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Double&gt;.get_Current():System.Double</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Int32&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Int32">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current():System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Int64&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Int64&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Int64">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Int64&gt;.get_Current():System.Int64</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Linq.Expressions.CatchBlock&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.CatchBlock&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Linq.Expressions.CatchBlock">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.CatchBlock&gt;.get_Current():System.Linq.Expressions.CatchBlock</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Linq.Expressions.ElementInit&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ElementInit&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Linq.Expressions.ElementInit">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ElementInit&gt;.get_Current():System.Linq.Expressions.ElementInit</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Linq.Expressions.Expression&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.Expression&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Linq.Expressions.Expression">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.Expression&gt;.get_Current():System.Linq.Expressions.Expression</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Linq.Expressions.MemberBinding&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.MemberBinding&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Linq.Expressions.MemberBinding">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.MemberBinding&gt;.get_Current():System.Linq.Expressions.MemberBinding</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Linq.Expressions.ParameterExpression&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ParameterExpression&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Linq.Expressions.ParameterExpression">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ParameterExpression&gt;.get_Current():System.Linq.Expressions.ParameterExpression</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Artist">
				<signature>System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Artist&gt;.get_Item(System.Int32):MvcMusicStore.Models.Artist</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Linq.Expressions.SwitchCase&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.SwitchCase&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Linq.Expressions.SwitchCase">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.SwitchCase&gt;.get_Current():System.Linq.Expressions.SwitchCase</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Nullable&lt;System.Decimal&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Decimal&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Decimal&gt;&gt;.get_Current():System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Nullable&lt;System.Double&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Double&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Nullable&lt;System.Double&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Double&gt;&gt;.get_Current():System.Nullable&lt;System.Double&gt;</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Linq.Expressions.CatchBlock&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.CatchBlock&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.CatchBlock">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.CatchBlock&gt;.get_Item(System.Int32):System.Linq.Expressions.CatchBlock</signature>
			</method>
		</class>
		<class name="List`1" uniqueID="System.Collections.Generic.List`1">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List`1.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List`1.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List`1.Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.List`1.Add(MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List`1.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Cart;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(MvcMusicStore.Models.Cart;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Cart;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Cart;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List`1.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.Generic.List`1.Contains(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Cart[]):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(MvcMusicStore.Models.Cart[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;MvcMusicStore.Models.Cart[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(System.Int32;MvcMusicStore.Models.Cart[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Boolean">
				<signature>System.Collections.Generic.List`1.Exists(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.List`1.Find(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List`1.FindAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.List`1.FindLast(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.ForEach(System.Action&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List`1.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List`1.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(MvcMusicStore.Models.Cart;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(MvcMusicStore.Models.Cart;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.List`1.Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Cart;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(MvcMusicStore.Models.Cart;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Cart;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(MvcMusicStore.Models.Cart;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1():System.Void">
				<signature>System.Collections.Generic.List`1.List`1():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.List`1(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.List`1(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.Generic.List`1.Remove(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List`1.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List`1.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Comparison&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.Generic.List`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List`1.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():MvcMusicStore.Models.Cart[]">
				<signature>System.Collections.Generic.List`1.ToArray():MvcMusicStore.Models.Cart[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List`1.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Boolean">
				<signature>System.Collections.Generic.List`1.TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Cart&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List`1.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List`1.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.List`1.get_Item(System.Int32):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.List`1.set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Nullable&lt;System.Int32&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Int32&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Nullable&lt;System.Int32&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Int32&gt;&gt;.get_Current():System.Nullable&lt;System.Int32&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Nullable&lt;System.Int64&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Int64&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Nullable&lt;System.Int64&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Int64&gt;&gt;.get_Current():System.Nullable&lt;System.Int64&gt;</signature>
			</method>
		</class>
		<class name="IList&lt;System.Linq.Expressions.MemberBinding&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.MemberBinding):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;.IndexOf(System.Linq.Expressions.MemberBinding):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Linq.Expressions.MemberBinding):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;.Insert(System.Int32;System.Linq.Expressions.MemberBinding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.MemberBinding">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;.get_Item(System.Int32):System.Linq.Expressions.MemberBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Linq.Expressions.MemberBinding):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;.set_Item(System.Int32;System.Linq.Expressions.MemberBinding):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Nullable&lt;System.Single&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Single&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Nullable&lt;System.Single&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Nullable&lt;System.Single&gt;&gt;.get_Current():System.Nullable&lt;System.Single&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Reflection.CustomAttributeData&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Reflection.CustomAttributeData&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Reflection.CustomAttributeData">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Reflection.CustomAttributeData&gt;.get_Current():System.Reflection.CustomAttributeData</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.Mvc.Filter&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.Filter&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.Mvc.Filter">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.Filter&gt;.get_Current():System.Web.Mvc.Filter</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Reflection.MemberInfo&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Reflection.MemberInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Reflection.MemberInfo">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Reflection.MemberInfo&gt;.get_Current():System.Reflection.MemberInfo</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Reflection.MethodInfo&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Reflection.MethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Reflection.MethodInfo">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Reflection.MethodInfo&gt;.get_Current():System.Reflection.MethodInfo</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Reflection.PropertyInfo&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Reflection.PropertyInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Reflection.PropertyInfo">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Reflection.PropertyInfo&gt;.get_Current():System.Reflection.PropertyInfo</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Single&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Single&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Single">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Single&gt;.get_Current():System.Single</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;.get_Current():System.Web.ModuleConfigurationInfo</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.Mvc.ModelState&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.ModelState&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.Mvc.ModelState">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.ModelState&gt;.get_Current():System.Web.Mvc.ModelState</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.Mvc.SelectListItem&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.SelectListItem&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.Mvc.SelectListItem">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.SelectListItem&gt;.get_Current():System.Web.Mvc.SelectListItem</signature>
			</method>
		</class>
		<class name="IEqualityComparer&lt;System.Type&gt;" uniqueID="System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Type;System.Type):System.Boolean">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;.Equals(System.Type;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode(System.Type):System.Int32">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;.GetHashCode(System.Type):System.Int32</signature>
			</method>
		</class>
		<class name="IList&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;.IndexOf(MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;.Insert(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Album">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;.get_Item(System.Int32):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;.set_Item(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Artist):System.Int32">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;.IndexOf(MvcMusicStore.Models.Artist):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;.Insert(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Artist">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;.get_Item(System.Int32):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;.set_Item(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;.IndexOf(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;.Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;.get_Item(System.Int32):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;.set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Genre):System.Int32">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;.IndexOf(MvcMusicStore.Models.Genre):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;.Insert(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Genre">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;.get_Item(System.Int32):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;.set_Item(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Order):System.Int32">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;.IndexOf(MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;.Insert(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Order">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;.get_Item(System.Int32):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;.set_Item(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.OrderDetail):System.Int32">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;.IndexOf(MvcMusicStore.Models.OrderDetail):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;.Insert(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Item(System.Int32):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;.set_Item(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IList&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.IndexOf(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.Insert(System.Int32;System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.set_Item(System.Int32;System.Attribute):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.IndexOf(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.Insert(System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Common.Internal.Materialization.CoordinatorFactory">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.CoordinatorFactory</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.set_Item(System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.IndexOf(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.Insert(System.Int32;System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Common.Internal.Materialization.RecordStateFactory">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.RecordStateFactory</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.set_Item(System.Int32;System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Attribute&gt;" uniqueID="List`1+Enumerator&lt;System.Attribute&gt;(System.Collections.Generic.List&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.List`1+Enumerator&lt;System.Attribute&gt;(System.Collections.Generic.List&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Attribute">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.get_Current():System.Attribute</signature>
			</method>
		</class>
		<class name="IList&lt;System.Linq.Expressions.CatchBlock&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.CatchBlock):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;.IndexOf(System.Linq.Expressions.CatchBlock):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Linq.Expressions.CatchBlock):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;.Insert(System.Int32;System.Linq.Expressions.CatchBlock):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.CatchBlock">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;.get_Item(System.Int32):System.Linq.Expressions.CatchBlock</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Linq.Expressions.CatchBlock):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;.set_Item(System.Int32;System.Linq.Expressions.CatchBlock):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Linq.Expressions.ElementInit&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.ElementInit):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;.IndexOf(System.Linq.Expressions.ElementInit):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Linq.Expressions.ElementInit):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;.Insert(System.Int32;System.Linq.Expressions.ElementInit):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.ElementInit">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;.get_Item(System.Int32):System.Linq.Expressions.ElementInit</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Linq.Expressions.ElementInit):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;.set_Item(System.Int32;System.Linq.Expressions.ElementInit):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Linq.Expressions.Expression&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.Expression):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;.IndexOf(System.Linq.Expressions.Expression):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Linq.Expressions.Expression):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;.Insert(System.Int32;System.Linq.Expressions.Expression):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.Expression">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;.get_Item(System.Int32):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Linq.Expressions.Expression):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;.set_Item(System.Int32;System.Linq.Expressions.Expression):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Linq.Expressions.ParameterExpression&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.ParameterExpression):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;.IndexOf(System.Linq.Expressions.ParameterExpression):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Linq.Expressions.ParameterExpression):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;.Insert(System.Int32;System.Linq.Expressions.ParameterExpression):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.ParameterExpression">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;.get_Item(System.Int32):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Linq.Expressions.ParameterExpression):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;.set_Item(System.Int32;System.Linq.Expressions.ParameterExpression):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Reflection.CustomAttributeData&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Reflection.CustomAttributeData):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.IndexOf(System.Reflection.CustomAttributeData):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Reflection.CustomAttributeData):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.Insert(System.Int32;System.Reflection.CustomAttributeData):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Reflection.CustomAttributeData">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.get_Item(System.Int32):System.Reflection.CustomAttributeData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Reflection.CustomAttributeData):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.set_Item(System.Int32;System.Reflection.CustomAttributeData):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.String&gt;" uniqueID="System.Collections.Generic.IList&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.String):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.Insert(System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.get_Item(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.String):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.set_Item(System.Int32;System.String):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.ModuleConfigurationInfo):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;.IndexOf(System.Web.ModuleConfigurationInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;.Insert(System.Int32;System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;.get_Item(System.Int32):System.Web.ModuleConfigurationInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;.set_Item(System.Int32;System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.Mvc.SelectListItem&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.Mvc.SelectListItem):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;.IndexOf(System.Web.Mvc.SelectListItem):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.Mvc.SelectListItem):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;.Insert(System.Int32;System.Web.Mvc.SelectListItem):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.Mvc.SelectListItem">
				<signature>System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;.get_Item(System.Int32):System.Web.Mvc.SelectListItem</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.Mvc.SelectListItem):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;.set_Item(System.Int32;System.Web.Mvc.SelectListItem):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.Routing.RouteBase&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.Routing.RouteBase):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;.IndexOf(System.Web.Routing.RouteBase):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;.Insert(System.Int32;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.Routing.RouteBase">
				<signature>System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;.get_Item(System.Int32):System.Web.Routing.RouteBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;.set_Item(System.Int32;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Attribute&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.Routing.RouteBase&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.Routing.RouteBase&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.Routing.RouteBase&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Album">
				<signature>System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Album&gt;.get_Item(System.Int32):MvcMusicStore.Models.Album</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Cart&gt;.get_Item(System.Int32):MvcMusicStore.Models.Cart</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Genre">
				<signature>System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Genre&gt;.get_Item(System.Int32):MvcMusicStore.Models.Genre</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Order">
				<signature>System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.Order&gt;.get_Item(System.Int32):MvcMusicStore.Models.Order</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.Routing.RouteBase&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.Routing.RouteBase&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.Routing.RouteBase">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.Routing.RouteBase&gt;.get_Item(System.Int32):System.Web.Routing.RouteBase</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.Generic.IReadOnlyList&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Item(System.Int32):MvcMusicStore.Models.OrderDetail</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Attribute&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Linq.Expressions.ElementInit&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.ElementInit&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.ElementInit">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Linq.Expressions.ElementInit&gt;.get_Item(System.Int32):System.Linq.Expressions.ElementInit</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.Object,System.Object&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.Object,System.Object&gt;" uniqueID="KeyValuePair&lt;System.Object,System.Object&gt;(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;.KeyValuePair&lt;System.Object,System.Object&gt;(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.Object">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;.get_Key():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;.get_Value():System.Object</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.String,System.Object&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.String,System.Object&gt;" uniqueID="KeyValuePair&lt;System.String,System.Object&gt;(System.String;System.Object):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;.KeyValuePair&lt;System.String,System.Object&gt;(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;.get_Key():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;.get_Value():System.Object</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;" uniqueID="KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;(System.String;System.Web.RequestNotification):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;(System.String;System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;.get_Key():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Web.RequestNotification">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.RequestNotification&gt;.get_Value():System.Web.RequestNotification</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.Type">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Key():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Value():System.AttributeUsageAttribute</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.Type,System.Object&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.Type,System.Object&gt;" uniqueID="KeyValuePair&lt;System.Type,System.Object&gt;(System.Type;System.Object):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;.KeyValuePair&lt;System.Type,System.Object&gt;(System.Type;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.Type">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;.get_Key():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.Object&gt;.get_Value():System.Object</signature>
			</method>
		</class>
		<class name="List&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Add(MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Artist):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.BinarySearch(MvcMusicStore.Models.Artist):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Artist;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.BinarySearch(MvcMusicStore.Models.Artist;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Artist;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Artist;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Contains(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Artist[]):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.CopyTo(MvcMusicStore.Models.Artist[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Artist[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.CopyTo(MvcMusicStore.Models.Artist[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;MvcMusicStore.Models.Artist[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.CopyTo(System.Int32;MvcMusicStore.Models.Artist[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Exists(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):MvcMusicStore.Models.Artist">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Find(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.FindAll(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.FindIndex(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):MvcMusicStore.Models.Artist">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.FindLast(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.ForEach(System.Action&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Artist):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.IndexOf(MvcMusicStore.Models.Artist):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Artist;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.IndexOf(MvcMusicStore.Models.Artist;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Artist;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.IndexOf(MvcMusicStore.Models.Artist;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Insert(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Artist):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.LastIndexOf(MvcMusicStore.Models.Artist):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Artist;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.LastIndexOf(MvcMusicStore.Models.Artist;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Artist;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.LastIndexOf(MvcMusicStore.Models.Artist;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="List&lt;MvcMusicStore.Models.Artist&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.List&lt;MvcMusicStore.Models.Artist&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="List&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.List&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="List&lt;MvcMusicStore.Models.Artist&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.List&lt;MvcMusicStore.Models.Artist&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Remove(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Sort(System.Comparison&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():MvcMusicStore.Models.Artist[]">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.ToArray():MvcMusicStore.Models.Artist[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Artist&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Artist">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.get_Item(System.Int32):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;.set_Item(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Add(MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Genre):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.BinarySearch(MvcMusicStore.Models.Genre):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Genre;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.BinarySearch(MvcMusicStore.Models.Genre;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Genre;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Genre;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Contains(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Genre[]):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.CopyTo(MvcMusicStore.Models.Genre[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Genre[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.CopyTo(MvcMusicStore.Models.Genre[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;MvcMusicStore.Models.Genre[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.CopyTo(System.Int32;MvcMusicStore.Models.Genre[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Exists(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):MvcMusicStore.Models.Genre">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Find(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.FindAll(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.FindIndex(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):MvcMusicStore.Models.Genre">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.FindLast(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.ForEach(System.Action&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Genre):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.IndexOf(MvcMusicStore.Models.Genre):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Genre;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.IndexOf(MvcMusicStore.Models.Genre;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Genre;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.IndexOf(MvcMusicStore.Models.Genre;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Insert(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Genre):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.LastIndexOf(MvcMusicStore.Models.Genre):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Genre;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.LastIndexOf(MvcMusicStore.Models.Genre;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Genre;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.LastIndexOf(MvcMusicStore.Models.Genre;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="List&lt;MvcMusicStore.Models.Genre&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.List&lt;MvcMusicStore.Models.Genre&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="List&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.List&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="List&lt;MvcMusicStore.Models.Genre&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.List&lt;MvcMusicStore.Models.Genre&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Remove(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Sort(System.Comparison&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():MvcMusicStore.Models.Genre[]">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.ToArray():MvcMusicStore.Models.Genre[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Genre&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Genre">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.get_Item(System.Int32):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;.set_Item(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Add(MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Order):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.BinarySearch(MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.Order;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.BinarySearch(MvcMusicStore.Models.Order;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Order;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.Order;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Contains(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Order[]):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.CopyTo(MvcMusicStore.Models.Order[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Order[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.CopyTo(MvcMusicStore.Models.Order[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;MvcMusicStore.Models.Order[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.CopyTo(System.Int32;MvcMusicStore.Models.Order[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Exists(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):MvcMusicStore.Models.Order">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Find(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.FindAll(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.FindIndex(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):MvcMusicStore.Models.Order">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.FindLast(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.ForEach(System.Action&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Order):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.IndexOf(MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Order;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.IndexOf(MvcMusicStore.Models.Order;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Order;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.IndexOf(MvcMusicStore.Models.Order;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Insert(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Order):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.LastIndexOf(MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Order;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.LastIndexOf(MvcMusicStore.Models.Order;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.Order;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.LastIndexOf(MvcMusicStore.Models.Order;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Order&gt;" uniqueID="List&lt;MvcMusicStore.Models.Order&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.List&lt;MvcMusicStore.Models.Order&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Order&gt;" uniqueID="List&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.List&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.Order&gt;" uniqueID="List&lt;MvcMusicStore.Models.Order&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.List&lt;MvcMusicStore.Models.Order&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Remove(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.RemoveAll(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Sort(System.Comparison&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():MvcMusicStore.Models.Order[]">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.ToArray():MvcMusicStore.Models.Order[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.TrueForAll(System.Predicate&lt;MvcMusicStore.Models.Order&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Order">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.get_Item(System.Int32):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;.set_Item(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Synchronized(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Add(MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.OrderDetail):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.BinarySearch(MvcMusicStore.Models.OrderDetail):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(MvcMusicStore.Models.OrderDetail;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.BinarySearch(MvcMusicStore.Models.OrderDetail;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.OrderDetail;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.BinarySearch(System.Int32;System.Int32;MvcMusicStore.Models.OrderDetail;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Contains(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.OrderDetail[]):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.CopyTo(MvcMusicStore.Models.OrderDetail[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.OrderDetail[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.CopyTo(MvcMusicStore.Models.OrderDetail[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;MvcMusicStore.Models.OrderDetail[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.CopyTo(System.Int32;MvcMusicStore.Models.OrderDetail[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Exists(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Find(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.FindAll(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.FindIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.FindIndex(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.FindLast(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.FindLastIndex(System.Int32;System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.FindLastIndex(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.ForEach(System.Action&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.OrderDetail):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.IndexOf(MvcMusicStore.Models.OrderDetail):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.OrderDetail;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.IndexOf(MvcMusicStore.Models.OrderDetail;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.OrderDetail;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.IndexOf(MvcMusicStore.Models.OrderDetail;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Insert(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.OrderDetail):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.LastIndexOf(MvcMusicStore.Models.OrderDetail):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.OrderDetail;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.LastIndexOf(MvcMusicStore.Models.OrderDetail;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(MvcMusicStore.Models.OrderDetail;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.LastIndexOf(MvcMusicStore.Models.OrderDetail;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="List&lt;MvcMusicStore.Models.OrderDetail&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.List&lt;MvcMusicStore.Models.OrderDetail&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="List&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.List&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="List&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.List&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Remove(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.RemoveAll(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Sort(System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Sort(System.Comparison&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():MvcMusicStore.Models.OrderDetail[]">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.ToArray():MvcMusicStore.Models.OrderDetail[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.TrueForAll(System.Predicate&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Item(System.Int32):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;.set_Item(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.List&lt;System.Attribute&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Attribute&gt;):System.Collections.Generic.IList&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Synchronized(System.Collections.Generic.List&lt;System.Attribute&gt;):System.Collections.Generic.IList&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Attribute):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Add(System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Attribute):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.BinarySearch(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Attribute;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.BinarySearch(System.Attribute;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Attribute;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.BinarySearch(System.Int32;System.Int32;System.Attribute;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Attribute):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Contains(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Attribute[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.CopyTo(System.Attribute[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Attribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.CopyTo(System.Attribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Attribute[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.CopyTo(System.Int32;System.Attribute[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Attribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Exists(System.Predicate&lt;System.Attribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Attribute&gt;):System.Attribute">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Find(System.Predicate&lt;System.Attribute&gt;):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Attribute&gt;):System.Collections.Generic.List&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindAll(System.Predicate&lt;System.Attribute&gt;):System.Collections.Generic.List&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindIndex(System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Attribute&gt;):System.Attribute">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindLast(System.Predicate&lt;System.Attribute&gt;):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindLastIndex(System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.ForEach(System.Action&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.IndexOf(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.IndexOf(System.Attribute;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.IndexOf(System.Attribute;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Insert(System.Int32;System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Attribute):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.LastIndexOf(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Attribute;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.LastIndexOf(System.Attribute;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Attribute;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.LastIndexOf(System.Attribute;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Attribute&gt;" uniqueID="List&lt;System.Attribute&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.List&lt;System.Attribute&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Attribute&gt;" uniqueID="List&lt;System.Attribute&gt;(System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.List&lt;System.Attribute&gt;(System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Attribute&gt;" uniqueID="List&lt;System.Attribute&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.List&lt;System.Attribute&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Attribute):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Remove(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.RemoveAll(System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Sort(System.Comparison&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Attribute[]">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.ToArray():System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Attribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.TrueForAll(System.Predicate&lt;System.Attribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.set_Item(System.Int32;System.Attribute):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Add(System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.Objects.Internal.IEntityWrapper):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.BinarySearch(System.Data.Objects.Internal.IEntityWrapper):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.Objects.Internal.IEntityWrapper;System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.BinarySearch(System.Data.Objects.Internal.IEntityWrapper;System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.Objects.Internal.IEntityWrapper;System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.BinarySearch(System.Int32;System.Int32;System.Data.Objects.Internal.IEntityWrapper;System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Objects.Internal.IEntityWrapper):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Contains(System.Data.Objects.Internal.IEntityWrapper):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Objects.Internal.IEntityWrapper[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.CopyTo(System.Data.Objects.Internal.IEntityWrapper[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Objects.Internal.IEntityWrapper[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.CopyTo(System.Data.Objects.Internal.IEntityWrapper[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.Objects.Internal.IEntityWrapper[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.CopyTo(System.Int32;System.Data.Objects.Internal.IEntityWrapper[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Exists(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Find(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.FindAll(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.FindIndex(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.FindLast(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.FindLastIndex(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.ForEach(System.Action&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Objects.Internal.IEntityWrapper):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.IndexOf(System.Data.Objects.Internal.IEntityWrapper):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Objects.Internal.IEntityWrapper;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.IndexOf(System.Data.Objects.Internal.IEntityWrapper;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Objects.Internal.IEntityWrapper;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.IndexOf(System.Data.Objects.Internal.IEntityWrapper;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Insert(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.Objects.Internal.IEntityWrapper):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.LastIndexOf(System.Data.Objects.Internal.IEntityWrapper):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.Objects.Internal.IEntityWrapper;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.LastIndexOf(System.Data.Objects.Internal.IEntityWrapper;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.Objects.Internal.IEntityWrapper;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.LastIndexOf(System.Data.Objects.Internal.IEntityWrapper;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.Objects.Internal.IEntityWrapper):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Remove(System.Data.Objects.Internal.IEntityWrapper):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.RemoveAll(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Sort(System.Comparison&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.Objects.Internal.IEntityWrapper[]">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.ToArray():System.Data.Objects.Internal.IEntityWrapper[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.TrueForAll(System.Predicate&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.set_Item(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;):System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Synchronized(System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;):System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Add(System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Web.ModuleConfigurationInfo;System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.BinarySearch(System.Int32;System.Int32;System.Web.ModuleConfigurationInfo;System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Web.ModuleConfigurationInfo):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.BinarySearch(System.Web.ModuleConfigurationInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Web.ModuleConfigurationInfo;System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.BinarySearch(System.Web.ModuleConfigurationInfo;System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.ModuleConfigurationInfo):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Contains(System.Web.ModuleConfigurationInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Web.ModuleConfigurationInfo[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.CopyTo(System.Int32;System.Web.ModuleConfigurationInfo[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.ModuleConfigurationInfo[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.CopyTo(System.Web.ModuleConfigurationInfo[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.ModuleConfigurationInfo[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.CopyTo(System.Web.ModuleConfigurationInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Exists(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Find(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Web.ModuleConfigurationInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.FindAll(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.FindIndex(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.FindLast(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Web.ModuleConfigurationInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.FindLastIndex(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.ForEach(System.Action&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.ModuleConfigurationInfo):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.IndexOf(System.Web.ModuleConfigurationInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.ModuleConfigurationInfo;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.IndexOf(System.Web.ModuleConfigurationInfo;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.ModuleConfigurationInfo;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.IndexOf(System.Web.ModuleConfigurationInfo;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Insert(System.Int32;System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.ModuleConfigurationInfo):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.LastIndexOf(System.Web.ModuleConfigurationInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.ModuleConfigurationInfo;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.LastIndexOf(System.Web.ModuleConfigurationInfo;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.ModuleConfigurationInfo;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.LastIndexOf(System.Web.ModuleConfigurationInfo;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="List&lt;System.Web.ModuleConfigurationInfo&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.List&lt;System.Web.ModuleConfigurationInfo&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="List&lt;System.Web.ModuleConfigurationInfo&gt;(System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.List&lt;System.Web.ModuleConfigurationInfo&gt;(System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="List&lt;System.Web.ModuleConfigurationInfo&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.List&lt;System.Web.ModuleConfigurationInfo&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.ModuleConfigurationInfo):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Remove(System.Web.ModuleConfigurationInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.RemoveAll(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Sort(System.Comparison&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Web.ModuleConfigurationInfo[]">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.ToArray():System.Web.ModuleConfigurationInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.TrueForAll(System.Predicate&lt;System.Web.ModuleConfigurationInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.get_Item(System.Int32):System.Web.ModuleConfigurationInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;.set_Item(System.Int32;System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;" uniqueID="List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Album">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Album&gt;.get_Current():MvcMusicStore.Models.Album</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Artist">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Artist&gt;.get_Current():MvcMusicStore.Models.Artist</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Cart">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Cart&gt;.get_Current():MvcMusicStore.Models.Cart</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.Genre">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.Genre&gt;.get_Current():MvcMusicStore.Models.Genre</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Current():MvcMusicStore.Models.OrderDetail</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Collections.Generic.List&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Current():System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;(System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;(System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.ModuleConfigurationInfo&gt;.get_Current():System.Web.ModuleConfigurationInfo</signature>
			</method>
		</class>
	</package>
	<package name="System.Runtime.InteropServices">
		<class name="_Exception" uniqueID="System.Runtime.InteropServices._Exception">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Exception.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBaseException" uniqueID="GetBaseException():System.Exception">
				<signature>System.Runtime.InteropServices._Exception.GetBaseException():System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._Exception.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._Exception.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._Exception.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpLink" uniqueID="get_HelpLink():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_HelpLink():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InnerException" uniqueID="get_InnerException():System.Exception">
				<signature>System.Runtime.InteropServices._Exception.get_InnerException():System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Message" uniqueID="get_Message():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_Message():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Source" uniqueID="get_Source():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_Source():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StackTrace" uniqueID="get_StackTrace():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_StackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TargetSite" uniqueID="get_TargetSite():System.Reflection.MethodBase">
				<signature>System.Runtime.InteropServices._Exception.get_TargetSite():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpLink" uniqueID="set_HelpLink(System.String):System.Void">
				<signature>System.Runtime.InteropServices._Exception.set_HelpLink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Source" uniqueID="set_Source(System.String):System.Void">
				<signature>System.Runtime.InteropServices._Exception.set_Source(System.String):System.Void</signature>
			</method>
		</class>
		<class name="_MethodInfo" uniqueID="System.Runtime.InteropServices._MethodInfo">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBaseDefinition" uniqueID="GetBaseDefinition():System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._MethodInfo.GetBaseDefinition():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._MethodInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethodImplementationFlags" uniqueID="GetMethodImplementationFlags():System.Reflection.MethodImplAttributes">
				<signature>System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags():System.Reflection.MethodImplAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParameters" uniqueID="GetParameters():System.Reflection.ParameterInfo[]">
				<signature>System.Runtime.InteropServices._MethodInfo.GetParameters():System.Reflection.ParameterInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._MethodInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Object[]):System.Object">
				<signature>System.Runtime.InteropServices._MethodInfo.Invoke(System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Runtime.InteropServices._MethodInfo.Invoke(System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._MethodInfo.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.MethodAttributes">
				<signature>System.Runtime.InteropServices._MethodInfo.get_Attributes():System.Reflection.MethodAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CallingConvention" uniqueID="get_CallingConvention():System.Reflection.CallingConventions">
				<signature>System.Runtime.InteropServices._MethodInfo.get_CallingConvention():System.Reflection.CallingConventions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._MethodInfo.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAssembly" uniqueID="get_IsAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsConstructor" uniqueID="get_IsConstructor():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsConstructor():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamily" uniqueID="get_IsFamily():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyAndAssembly" uniqueID="get_IsFamilyAndAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsFamilyAndAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyOrAssembly" uniqueID="get_IsFamilyOrAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsFamilyOrAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFinal" uniqueID="get_IsFinal():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsFinal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsHideBySig" uniqueID="get_IsHideBySig():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsHideBySig():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrivate" uniqueID="get_IsPrivate():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsStatic" uniqueID="get_IsStatic():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsStatic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsVirtual" uniqueID="get_IsVirtual():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodInfo.get_IsVirtual():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._MethodInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MethodHandle" uniqueID="get_MethodHandle():System.RuntimeMethodHandle">
				<signature>System.Runtime.InteropServices._MethodInfo.get_MethodHandle():System.RuntimeMethodHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._MethodInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._MethodInfo.get_ReflectedType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReturnType" uniqueID="get_ReturnType():System.Type">
				<signature>System.Runtime.InteropServices._MethodInfo.get_ReturnType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReturnTypeCustomAttributes" uniqueID="get_ReturnTypeCustomAttributes():System.Reflection.ICustomAttributeProvider">
				<signature>System.Runtime.InteropServices._MethodInfo.get_ReturnTypeCustomAttributes():System.Reflection.ICustomAttributeProvider</signature>
			</method>
		</class>
		<class name="_MemberInfo" uniqueID="System.Runtime.InteropServices._MemberInfo">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._MemberInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._MemberInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._MemberInfo.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._MemberInfo.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._MemberInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._MemberInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.get_ReflectedType():System.Type</signature>
			</method>
		</class>
		<class name="_FieldInfo" uniqueID="System.Runtime.InteropServices._FieldInfo">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._FieldInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._FieldInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Object):System.Object">
				<signature>System.Runtime.InteropServices._FieldInfo.GetValue(System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueDirect" uniqueID="GetValueDirect(System.TypedReference):System.Object">
				<signature>System.Runtime.InteropServices._FieldInfo.GetValueDirect(System.TypedReference):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Object):System.Void">
				<signature>System.Runtime.InteropServices._FieldInfo.SetValue(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Globalization.CultureInfo):System.Void">
				<signature>System.Runtime.InteropServices._FieldInfo.SetValue(System.Object;System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValueDirect" uniqueID="SetValueDirect(System.TypedReference;System.Object):System.Void">
				<signature>System.Runtime.InteropServices._FieldInfo.SetValueDirect(System.TypedReference;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._FieldInfo.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.FieldAttributes">
				<signature>System.Runtime.InteropServices._FieldInfo.get_Attributes():System.Reflection.FieldAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._FieldInfo.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FieldHandle" uniqueID="get_FieldHandle():System.RuntimeFieldHandle">
				<signature>System.Runtime.InteropServices._FieldInfo.get_FieldHandle():System.RuntimeFieldHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FieldType" uniqueID="get_FieldType():System.Type">
				<signature>System.Runtime.InteropServices._FieldInfo.get_FieldType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAssembly" uniqueID="get_IsAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamily" uniqueID="get_IsFamily():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyAndAssembly" uniqueID="get_IsFamilyAndAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsFamilyAndAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyOrAssembly" uniqueID="get_IsFamilyOrAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsFamilyOrAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInitOnly" uniqueID="get_IsInitOnly():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsInitOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLiteral" uniqueID="get_IsLiteral():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsLiteral():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNotSerialized" uniqueID="get_IsNotSerialized():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsNotSerialized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPinvokeImpl" uniqueID="get_IsPinvokeImpl():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsPinvokeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrivate" uniqueID="get_IsPrivate():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsStatic" uniqueID="get_IsStatic():System.Boolean">
				<signature>System.Runtime.InteropServices._FieldInfo.get_IsStatic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._FieldInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._FieldInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._FieldInfo.get_ReflectedType():System.Type</signature>
			</method>
		</class>
		<class name="_MethodBase" uniqueID="System.Runtime.InteropServices._MethodBase">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._MethodBase.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethodImplementationFlags" uniqueID="GetMethodImplementationFlags():System.Reflection.MethodImplAttributes">
				<signature>System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags():System.Reflection.MethodImplAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParameters" uniqueID="GetParameters():System.Reflection.ParameterInfo[]">
				<signature>System.Runtime.InteropServices._MethodBase.GetParameters():System.Reflection.ParameterInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._MethodBase.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Object[]):System.Object">
				<signature>System.Runtime.InteropServices._MethodBase.Invoke(System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Runtime.InteropServices._MethodBase.Invoke(System.Object;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._MethodBase.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.MethodAttributes">
				<signature>System.Runtime.InteropServices._MethodBase.get_Attributes():System.Reflection.MethodAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CallingConvention" uniqueID="get_CallingConvention():System.Reflection.CallingConventions">
				<signature>System.Runtime.InteropServices._MethodBase.get_CallingConvention():System.Reflection.CallingConventions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._MethodBase.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAssembly" uniqueID="get_IsAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsConstructor" uniqueID="get_IsConstructor():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsConstructor():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamily" uniqueID="get_IsFamily():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyAndAssembly" uniqueID="get_IsFamilyAndAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsFamilyAndAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFamilyOrAssembly" uniqueID="get_IsFamilyOrAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsFamilyOrAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFinal" uniqueID="get_IsFinal():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsFinal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsHideBySig" uniqueID="get_IsHideBySig():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsHideBySig():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrivate" uniqueID="get_IsPrivate():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsStatic" uniqueID="get_IsStatic():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsStatic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsVirtual" uniqueID="get_IsVirtual():System.Boolean">
				<signature>System.Runtime.InteropServices._MethodBase.get_IsVirtual():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._MethodBase.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MethodHandle" uniqueID="get_MethodHandle():System.RuntimeMethodHandle">
				<signature>System.Runtime.InteropServices._MethodBase.get_MethodHandle():System.RuntimeMethodHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._MethodBase.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._MethodBase.get_ReflectedType():System.Type</signature>
			</method>
		</class>
		<class name="_Type" uniqueID="System.Runtime.InteropServices._Type">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.Equals(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindInterfaces" uniqueID="FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]">
				<signature>System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindMembers" uniqueID="FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetArrayRank" uniqueID="GetArrayRank():System.Int32">
				<signature>System.Runtime.InteropServices._Type.GetArrayRank():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Type[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Type[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors():System.Reflection.ConstructorInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetConstructors():System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDefaultMembers" uniqueID="GetDefaultMembers():System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetDefaultMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetElementType" uniqueID="GetElementType():System.Type">
				<signature>System.Runtime.InteropServices._Type.GetElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String):System.Reflection.EventInfo">
				<signature>System.Runtime.InteropServices._Type.GetEvent(System.String):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo">
				<signature>System.Runtime.InteropServices._Type.GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents():System.Reflection.EventInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetEvents():System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String):System.Reflection.FieldInfo">
				<signature>System.Runtime.InteropServices._Type.GetField(System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Runtime.InteropServices._Type.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields():System.Reflection.FieldInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetFields():System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._Type.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetInterface(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String;System.Boolean):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetInterface(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaceMap" uniqueID="GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping">
				<signature>System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaces" uniqueID="GetInterfaces():System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetInterfaces():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers():System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods():System.Reflection.MethodInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMethods():System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetNestedType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String;System.Reflection.BindingFlags):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetNestedType(System.String;System.Reflection.BindingFlags):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes():System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetNestedTypes():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes(System.Reflection.BindingFlags):System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties():System.Reflection.PropertyInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetProperties():System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._Type.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsAssignableFrom" uniqueID="IsAssignableFrom(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubclassOf" uniqueID="IsSubclassOf(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsSubclassOf(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._Type.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Assembly" uniqueID="get_Assembly():System.Reflection.Assembly">
				<signature>System.Runtime.InteropServices._Type.get_Assembly():System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AssemblyQualifiedName" uniqueID="get_AssemblyQualifiedName():System.String">
				<signature>System.Runtime.InteropServices._Type.get_AssemblyQualifiedName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.TypeAttributes">
				<signature>System.Runtime.InteropServices._Type.get_Attributes():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseType" uniqueID="get_BaseType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_BaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FullName" uniqueID="get_FullName():System.String">
				<signature>System.Runtime.InteropServices._Type.get_FullName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GUID" uniqueID="get_GUID():System.Guid">
				<signature>System.Runtime.InteropServices._Type.get_GUID():System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasElementType" uniqueID="get_HasElementType():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_HasElementType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAnsiClass" uniqueID="get_IsAnsiClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAnsiClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsArray" uniqueID="get_IsArray():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoClass" uniqueID="get_IsAutoClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAutoClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoLayout" uniqueID="get_IsAutoLayout():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAutoLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsByRef" uniqueID="get_IsByRef():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCOMObject" uniqueID="get_IsCOMObject():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsCOMObject():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClass" uniqueID="get_IsClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsContextful" uniqueID="get_IsContextful():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsContextful():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEnum" uniqueID="get_IsEnum():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsEnum():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsExplicitLayout" uniqueID="get_IsExplicitLayout():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsExplicitLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsImport" uniqueID="get_IsImport():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsImport():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInterface" uniqueID="get_IsInterface():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsInterface():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLayoutSequential" uniqueID="get_IsLayoutSequential():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsLayoutSequential():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsMarshalByRef" uniqueID="get_IsMarshalByRef():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsMarshalByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedAssembly" uniqueID="get_IsNestedAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamANDAssem" uniqueID="get_IsNestedFamANDAssem():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamANDAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamORAssem" uniqueID="get_IsNestedFamORAssem():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamORAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamily" uniqueID="get_IsNestedFamily():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPrivate" uniqueID="get_IsNestedPrivate():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPublic" uniqueID="get_IsNestedPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNotPublic" uniqueID="get_IsNotPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNotPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPointer" uniqueID="get_IsPointer():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPointer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrimitive" uniqueID="get_IsPrimitive():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPrimitive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSealed" uniqueID="get_IsSealed():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSealed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSerializable" uniqueID="get_IsSerializable():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSerializable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsUnicodeClass" uniqueID="get_IsUnicodeClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsUnicodeClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsValueType" uniqueID="get_IsValueType():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsValueType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._Type.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Runtime.InteropServices._Type.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._Type.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Runtime.InteropServices._Type.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_ReflectedType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeHandle" uniqueID="get_TypeHandle():System.RuntimeTypeHandle">
				<signature>System.Runtime.InteropServices._Type.get_TypeHandle():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeInitializer" uniqueID="get_TypeInitializer():System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.get_TypeInitializer():System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="MvcMusicStore.ViewModels">
		<class name="ShoppingCartRemoveViewModel" uniqueID="MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel">
			<method accessibility="Public" methodKind="Member" name="ShoppingCartRemoveViewModel" uniqueID="ShoppingCartRemoveViewModel():System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.ShoppingCartRemoveViewModel():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CartCount" uniqueID="get_CartCount():System.Int32">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.get_CartCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CartTotal" uniqueID="get_CartTotal():System.Decimal">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.get_CartTotal():System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeleteId" uniqueID="get_DeleteId():System.Int32">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.get_DeleteId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ItemCount" uniqueID="get_ItemCount():System.Int32">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.get_ItemCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Message" uniqueID="get_Message():System.String">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.get_Message():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CartCount" uniqueID="set_CartCount(System.Int32):System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.set_CartCount(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CartTotal" uniqueID="set_CartTotal(System.Decimal):System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.set_CartTotal(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DeleteId" uniqueID="set_DeleteId(System.Int32):System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.set_DeleteId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ItemCount" uniqueID="set_ItemCount(System.Int32):System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.set_ItemCount(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Message" uniqueID="set_Message(System.String):System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartRemoveViewModel.set_Message(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ShoppingCartViewModel" uniqueID="MvcMusicStore.ViewModels.ShoppingCartViewModel">
			<method accessibility="Public" methodKind="Member" name="ShoppingCartViewModel" uniqueID="ShoppingCartViewModel():System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartViewModel.ShoppingCartViewModel():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CartItems" uniqueID="get_CartItems():System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>MvcMusicStore.ViewModels.ShoppingCartViewModel.get_CartItems():System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CartTotal" uniqueID="get_CartTotal():System.Decimal">
				<signature>MvcMusicStore.ViewModels.ShoppingCartViewModel.get_CartTotal():System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CartItems" uniqueID="set_CartItems(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartViewModel.set_CartItems(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CartTotal" uniqueID="set_CartTotal(System.Decimal):System.Void">
				<signature>MvcMusicStore.ViewModels.ShoppingCartViewModel.set_CartTotal(System.Decimal):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections.ObjectModel">
		<class name="Collection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.Add(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Album&gt;():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.Collection&lt;MvcMusicStore.Models.Album&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.Collection&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.Contains(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Album[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.CopyTo(MvcMusicStore.Models.Album[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.IndexOf(MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.Insert(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.Remove(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.SetItem(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Album">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.get_Item(System.Int32):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Album&gt;.set_Item(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.Contains(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Album[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.CopyTo(MvcMusicStore.Models.Album[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Album):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.IndexOf(MvcMusicStore.Models.Album):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Album):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Album):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Album">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Album">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.get_Item(System.Int32):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Album&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
		</class>
		<class name="Collection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.Add(MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Artist&gt;():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.Collection&lt;MvcMusicStore.Models.Artist&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.Collection&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.Contains(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Artist[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.CopyTo(MvcMusicStore.Models.Artist[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Artist):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.IndexOf(MvcMusicStore.Models.Artist):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.Insert(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.Remove(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.SetItem(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Artist">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.get_Item(System.Int32):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Artist&gt;.set_Item(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
		</class>
		<class name="Collection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.Add(MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Cart&gt;():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.Collection&lt;MvcMusicStore.Models.Cart&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.Collection&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.Contains(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.IndexOf(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.Remove(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.SetItem(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Cart">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.get_Item(System.Int32):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Cart&gt;.set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
		</class>
		<class name="Collection&lt;System.Web.Routing.RouteBase&gt;" uniqueID="System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.Routing.RouteBase):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.Add(System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;System.Web.Routing.RouteBase&gt;" uniqueID="Collection&lt;System.Web.Routing.RouteBase&gt;():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.Collection&lt;System.Web.Routing.RouteBase&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;System.Web.Routing.RouteBase&gt;" uniqueID="Collection&lt;System.Web.Routing.RouteBase&gt;(System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.Collection&lt;System.Web.Routing.RouteBase&gt;(System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.Routing.RouteBase):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.Contains(System.Web.Routing.RouteBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.Routing.RouteBase[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.CopyTo(System.Web.Routing.RouteBase[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Routing.RouteBase&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Routing.RouteBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.Routing.RouteBase):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.IndexOf(System.Web.Routing.RouteBase):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.Insert(System.Int32;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.InsertItem(System.Int32;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.Routing.RouteBase):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.Remove(System.Web.Routing.RouteBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.SetItem(System.Int32;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.Routing.RouteBase">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.get_Item(System.Int32):System.Web.Routing.RouteBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.Routing.RouteBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;.set_Item(System.Int32;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.ElementInit):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.Contains(System.Linq.Expressions.ElementInit):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.ElementInit[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.CopyTo(System.Linq.Expressions.ElementInit[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ElementInit&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ElementInit&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.ElementInit):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.IndexOf(System.Linq.Expressions.ElementInit):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;" uniqueID="ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.ElementInit):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.ElementInit):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.ElementInit):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.ElementInit):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.ElementInit):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.ElementInit):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.ElementInit">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.ElementInit</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.ElementInit):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.ElementInit):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.ElementInit">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.get_Item(System.Int32):System.Linq.Expressions.ElementInit</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;.get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.ElementInit&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.Expression):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.Contains(System.Linq.Expressions.Expression):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.Expression[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.CopyTo(System.Linq.Expressions.Expression[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.Expression&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.Expression&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.Expression):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.IndexOf(System.Linq.Expressions.Expression):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;" uniqueID="ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.Expression):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.Expression):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.Expression):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.Expression):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.Expression):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.Expression):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.Expression">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.Expression):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.Expression):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.Expression">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.get_Item(System.Int32):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;.get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;</signature>
			</method>
		</class>
		<class name="Collection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.Add(MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Genre&gt;():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.Collection&lt;MvcMusicStore.Models.Genre&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.Collection&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.Contains(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Genre[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.CopyTo(MvcMusicStore.Models.Genre[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Genre):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.IndexOf(MvcMusicStore.Models.Genre):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.Insert(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.Remove(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.SetItem(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Genre">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.get_Item(System.Int32):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Genre&gt;.set_Item(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
		</class>
		<class name="ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Protected" methodKind="Member" name="BlockReentrancy" uniqueID="BlockReentrancy():System.IDisposable">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.BlockReentrancy():System.IDisposable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckReentrancy" uniqueID="CheckReentrancy():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.CheckReentrancy():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyFrom" uniqueID="CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Move" uniqueID="Move(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.Move(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveItem" uniqueID="MoveItem(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.MoveItem(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionReset" uniqueID="OnCollectionReset():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.OnCollectionReset():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.String):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.OnPropertyChanged(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.SetItem(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanged" uniqueID="add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanged" uniqueID="remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="Collection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.Add(MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Order&gt;():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.Collection&lt;MvcMusicStore.Models.Order&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.Collection&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.Contains(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Order[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.CopyTo(MvcMusicStore.Models.Order[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Order):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.IndexOf(MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.Insert(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.Remove(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.SetItem(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Order">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.get_Item(System.Int32):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.Order&gt;.set_Item(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
		</class>
		<class name="Collection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.Add(MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.OrderDetail&gt;():System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="Collection&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.Contains(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.OrderDetail[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.CopyTo(MvcMusicStore.Models.OrderDetail[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.OrderDetail):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.IndexOf(MvcMusicStore.Models.OrderDetail):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.Insert(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.InsertItem(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.Remove(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.SetItem(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Item(System.Int32):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.Collection&lt;MvcMusicStore.Models.OrderDetail&gt;.set_Item(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.Contains(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Artist[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.CopyTo(MvcMusicStore.Models.Artist[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Artist):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.IndexOf(MvcMusicStore.Models.Artist):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Artist">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Artist">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.get_Item(System.Int32):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Artist&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.Contains(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Order[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.CopyTo(MvcMusicStore.Models.Order[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Order):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.IndexOf(MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Order">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Order">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.get_Item(System.Int32):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Order&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.Contains(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.CopyTo(MvcMusicStore.Models.Cart[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Cart):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.IndexOf(MvcMusicStore.Models.Cart):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Cart):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Cart):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Cart">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Cart):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Cart">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.get_Item(System.Int32):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Cart&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.Contains(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.Genre[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.CopyTo(MvcMusicStore.Models.Genre[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.Genre):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.IndexOf(MvcMusicStore.Models.Genre):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Genre">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.Genre">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.get_Item(System.Int32):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.Genre&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.Contains(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(MvcMusicStore.Models.OrderDetail[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.CopyTo(MvcMusicStore.Models.OrderDetail[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(MvcMusicStore.Models.OrderDetail):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.IndexOf(MvcMusicStore.Models.OrderDetail):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.OrderDetail):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(MvcMusicStore.Models.OrderDetail):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):MvcMusicStore.Models.OrderDetail">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Item(System.Int32):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Items():System.Collections.Generic.IList&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Attribute&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Attribute):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.Contains(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Attribute[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.CopyTo(System.Attribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.IndexOf(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Attribute&gt;" uniqueID="ReadOnlyCollection&lt;System.Attribute&gt;(System.Collections.Generic.IList&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.ReadOnlyCollection&lt;System.Attribute&gt;(System.Collections.Generic.IList&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Attribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Attribute):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Attribute&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.get_Items():System.Collections.Generic.IList&lt;System.Attribute&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.Contains(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.CopyTo(System.Data.Common.Internal.Materialization.CoordinatorFactory[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.IndexOf(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;(System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;(System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.CoordinatorFactory">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.CoordinatorFactory</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.Common.Internal.Materialization.CoordinatorFactory):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Common.Internal.Materialization.CoordinatorFactory">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.CoordinatorFactory</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.CoordinatorFactory&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Reflection.MemberInfo):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.Contains(System.Reflection.MemberInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Reflection.MemberInfo[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.CopyTo(System.Reflection.MemberInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.MemberInfo&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.MemberInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Reflection.MemberInfo):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.IndexOf(System.Reflection.MemberInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;" uniqueID="ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;(System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;(System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Reflection.MemberInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Reflection.MemberInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Reflection.MemberInfo):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Reflection.MemberInfo):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Reflection.MemberInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Reflection.MemberInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Reflection.MemberInfo">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Reflection.MemberInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Reflection.MemberInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Reflection.MemberInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Reflection.MemberInfo">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.get_Item(System.Int32):System.Reflection.MemberInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;.get_Items():System.Collections.Generic.IList&lt;System.Reflection.MemberInfo&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.Contains(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Common.Internal.Materialization.RecordStateFactory[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.CopyTo(System.Data.Common.Internal.Materialization.RecordStateFactory[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.IndexOf(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;(System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;(System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.Common.Internal.Materialization.RecordStateFactory):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.RecordStateFactory">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.RecordStateFactory</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.Common.Internal.Materialization.RecordStateFactory):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Common.Internal.Materialization.RecordStateFactory">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_Item(System.Int32):System.Data.Common.Internal.Materialization.RecordStateFactory</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.Common.Internal.Materialization.RecordStateFactory&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Objects.Internal.IEntityWrapper):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.Contains(System.Data.Objects.Internal.IEntityWrapper):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Objects.Internal.IEntityWrapper[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.CopyTo(System.Data.Objects.Internal.IEntityWrapper[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Objects.Internal.IEntityWrapper):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.IndexOf(System.Data.Objects.Internal.IEntityWrapper):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;(System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.Objects.Internal.IEntityWrapper):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.Objects.Internal.IEntityWrapper):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.Objects.Internal.IEntityWrapper):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Item(System.Int32):System.Data.Objects.Internal.IEntityWrapper</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.Internal.IEntityWrapper&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.Objects.Internal.IEntityWrapper&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.CatchBlock):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.Contains(System.Linq.Expressions.CatchBlock):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.CatchBlock[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.CopyTo(System.Linq.Expressions.CatchBlock[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.CatchBlock&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.CatchBlock&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.CatchBlock):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.IndexOf(System.Linq.Expressions.CatchBlock):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;" uniqueID="ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.CatchBlock):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.CatchBlock):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.CatchBlock):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.CatchBlock):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.CatchBlock):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.CatchBlock):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.CatchBlock">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.CatchBlock</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.CatchBlock):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.CatchBlock):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.CatchBlock">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.get_Item(System.Int32):System.Linq.Expressions.CatchBlock</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;.get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.CatchBlock&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.MemberBinding):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.Contains(System.Linq.Expressions.MemberBinding):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.MemberBinding[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.CopyTo(System.Linq.Expressions.MemberBinding[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.MemberBinding&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.MemberBinding&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.MemberBinding):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.IndexOf(System.Linq.Expressions.MemberBinding):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;" uniqueID="ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.MemberBinding):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.MemberBinding):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.MemberBinding):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.MemberBinding):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.MemberBinding):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.MemberBinding):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.MemberBinding">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.MemberBinding</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.MemberBinding):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.MemberBinding):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.MemberBinding">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.get_Item(System.Int32):System.Linq.Expressions.MemberBinding</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;.get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.MemberBinding&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Linq.Expressions.ParameterExpression):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.Contains(System.Linq.Expressions.ParameterExpression):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Linq.Expressions.ParameterExpression[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.CopyTo(System.Linq.Expressions.ParameterExpression[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ParameterExpression&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Linq.Expressions.ParameterExpression&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Linq.Expressions.ParameterExpression):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.IndexOf(System.Linq.Expressions.ParameterExpression):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;" uniqueID="ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;(System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.ParameterExpression):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Linq.Expressions.ParameterExpression):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.ParameterExpression):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Linq.Expressions.ParameterExpression):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.ParameterExpression):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Linq.Expressions.ParameterExpression):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.ParameterExpression">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.ParameterExpression):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Linq.Expressions.ParameterExpression):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Linq.Expressions.ParameterExpression">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.get_Item(System.Int32):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;.get_Items():System.Collections.Generic.IList&lt;System.Linq.Expressions.ParameterExpression&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.ModuleConfigurationInfo):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.Contains(System.Web.ModuleConfigurationInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.ModuleConfigurationInfo[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.CopyTo(System.Web.ModuleConfigurationInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.ModuleConfigurationInfo):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.IndexOf(System.Web.ModuleConfigurationInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;" uniqueID="ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;(System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;(System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.ModuleConfigurationInfo):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.ModuleConfigurationInfo):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.ModuleConfigurationInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.ModuleConfigurationInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.ModuleConfigurationInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.ModuleConfigurationInfo">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.get_Item(System.Int32):System.Web.ModuleConfigurationInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.ModuleConfigurationInfo&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
		</class>
		<class name="ObservableCollection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Protected" methodKind="Member" name="BlockReentrancy" uniqueID="BlockReentrancy():System.IDisposable">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.BlockReentrancy():System.IDisposable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckReentrancy" uniqueID="CheckReentrancy():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.CheckReentrancy():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyFrom" uniqueID="CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Move" uniqueID="Move(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.Move(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveItem" uniqueID="MoveItem(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.MoveItem(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Album&gt;():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionReset" uniqueID="OnCollectionReset():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.OnCollectionReset():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.String):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.OnPropertyChanged(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Album):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.SetItem(System.Int32;MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanged" uniqueID="add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanged" uniqueID="remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Protected" methodKind="Member" name="BlockReentrancy" uniqueID="BlockReentrancy():System.IDisposable">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.BlockReentrancy():System.IDisposable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckReentrancy" uniqueID="CheckReentrancy():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.CheckReentrancy():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyFrom" uniqueID="CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Move" uniqueID="Move(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.Move(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveItem" uniqueID="MoveItem(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.MoveItem(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionReset" uniqueID="OnCollectionReset():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.OnCollectionReset():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.String):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.OnPropertyChanged(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Artist):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.SetItem(System.Int32;MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanged" uniqueID="add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanged" uniqueID="remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Protected" methodKind="Member" name="BlockReentrancy" uniqueID="BlockReentrancy():System.IDisposable">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.BlockReentrancy():System.IDisposable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckReentrancy" uniqueID="CheckReentrancy():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.CheckReentrancy():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyFrom" uniqueID="CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Move" uniqueID="Move(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.Move(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveItem" uniqueID="MoveItem(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.MoveItem(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionReset" uniqueID="OnCollectionReset():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.OnCollectionReset():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.String):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.OnPropertyChanged(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Genre):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.SetItem(System.Int32;MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanged" uniqueID="add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanged" uniqueID="remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="ObservableCollection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Protected" methodKind="Member" name="BlockReentrancy" uniqueID="BlockReentrancy():System.IDisposable">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.BlockReentrancy():System.IDisposable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckReentrancy" uniqueID="CheckReentrancy():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.CheckReentrancy():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyFrom" uniqueID="CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.InsertItem(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Move" uniqueID="Move(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.Move(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveItem" uniqueID="MoveItem(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.MoveItem(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Order&gt;():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionReset" uniqueID="OnCollectionReset():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.OnCollectionReset():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.String):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.OnPropertyChanged(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.Order):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.SetItem(System.Int32;MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanged" uniqueID="add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanged" uniqueID="remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Protected" methodKind="Member" name="BlockReentrancy" uniqueID="BlockReentrancy():System.IDisposable">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.BlockReentrancy():System.IDisposable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckReentrancy" uniqueID="CheckReentrancy():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.CheckReentrancy():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyFrom" uniqueID="CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.CopyFrom(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.InsertItem(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Move" uniqueID="Move(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.Move(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveItem" uniqueID="MoveItem(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.MoveItem(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction;System.Object;System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionReset" uniqueID="OnCollectionReset():System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.OnCollectionReset():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPropertyChanged" uniqueID="OnPropertyChanged(System.String):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.OnPropertyChanged(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.SetItem(System.Int32;MvcMusicStore.Models.OrderDetail):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanged" uniqueID="add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanged" uniqueID="remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Security.Principal">
		<class name="IIdentity" uniqueID="System.Security.Principal.IIdentity">
			<method accessibility="Public" methodKind="Member" name="get_AuthenticationType" uniqueID="get_AuthenticationType():System.String">
				<signature>System.Security.Principal.IIdentity.get_AuthenticationType():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAuthenticated" uniqueID="get_IsAuthenticated():System.Boolean">
				<signature>System.Security.Principal.IIdentity.get_IsAuthenticated():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Security.Principal.IIdentity.get_Name():System.String</signature>
			</method>
		</class>
		<class name="IPrincipal" uniqueID="System.Security.Principal.IPrincipal">
			<method accessibility="Public" methodKind="Member" name="IsInRole" uniqueID="IsInRole(System.String):System.Boolean">
				<signature>System.Security.Principal.IPrincipal.IsInRole(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Identity" uniqueID="get_Identity():System.Security.Principal.IIdentity">
				<signature>System.Security.Principal.IPrincipal.get_Identity():System.Security.Principal.IIdentity</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.Mvc">
		<class name="ActionResult" uniqueID="System.Web.Mvc.ActionResult">
			<method accessibility="Protected" methodKind="Member" name="ActionResult" uniqueID="ActionResult():System.Void">
				<signature>System.Web.Mvc.ActionResult.ActionResult():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteResult" uniqueID="ExecuteResult(System.Web.Mvc.ControllerContext):System.Void">
				<signature>System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext):System.Void</signature>
			</method>
		</class>
		<class name="Controller" uniqueID="System.Web.Mvc.Controller">
			<method accessibility="Public" methodKind="Member" name="Content" uniqueID="Content(System.String):System.Web.Mvc.ContentResult">
				<signature>System.Web.Mvc.Controller.Content(System.String):System.Web.Mvc.ContentResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Content" uniqueID="Content(System.String;System.String):System.Web.Mvc.ContentResult">
				<signature>System.Web.Mvc.Controller.Content(System.String;System.String):System.Web.Mvc.ContentResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Content" uniqueID="Content(System.String;System.String;System.Text.Encoding):System.Web.Mvc.ContentResult">
				<signature>System.Web.Mvc.Controller.Content(System.String;System.String;System.Text.Encoding):System.Web.Mvc.ContentResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Controller" uniqueID="Controller():System.Void">
				<signature>System.Web.Mvc.Controller.Controller():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateActionInvoker" uniqueID="CreateActionInvoker():System.Web.Mvc.IActionInvoker">
				<signature>System.Web.Mvc.Controller.CreateActionInvoker():System.Web.Mvc.IActionInvoker</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateTempDataProvider" uniqueID="CreateTempDataProvider():System.Web.Mvc.ITempDataProvider">
				<signature>System.Web.Mvc.Controller.CreateTempDataProvider():System.Web.Mvc.ITempDataProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Web.Mvc.Controller.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Web.Mvc.Controller.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteCore" uniqueID="ExecuteCore():System.Void">
				<signature>System.Web.Mvc.Controller.ExecuteCore():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="File" uniqueID="File(System.Byte[];System.String):System.Web.Mvc.FileContentResult">
				<signature>System.Web.Mvc.Controller.File(System.Byte[];System.String):System.Web.Mvc.FileContentResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="File" uniqueID="File(System.Byte[];System.String;System.String):System.Web.Mvc.FileContentResult">
				<signature>System.Web.Mvc.Controller.File(System.Byte[];System.String;System.String):System.Web.Mvc.FileContentResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="File" uniqueID="File(System.IO.Stream;System.String):System.Web.Mvc.FileStreamResult">
				<signature>System.Web.Mvc.Controller.File(System.IO.Stream;System.String):System.Web.Mvc.FileStreamResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="File" uniqueID="File(System.IO.Stream;System.String;System.String):System.Web.Mvc.FileStreamResult">
				<signature>System.Web.Mvc.Controller.File(System.IO.Stream;System.String;System.String):System.Web.Mvc.FileStreamResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="File" uniqueID="File(System.String;System.String):System.Web.Mvc.FilePathResult">
				<signature>System.Web.Mvc.Controller.File(System.String;System.String):System.Web.Mvc.FilePathResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="File" uniqueID="File(System.String;System.String;System.String):System.Web.Mvc.FilePathResult">
				<signature>System.Web.Mvc.Controller.File(System.String;System.String;System.String):System.Web.Mvc.FilePathResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HandleUnknownAction" uniqueID="HandleUnknownAction(System.String):System.Void">
				<signature>System.Web.Mvc.Controller.HandleUnknownAction(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpNotFound" uniqueID="HttpNotFound():System.Web.Mvc.HttpNotFoundResult">
				<signature>System.Web.Mvc.Controller.HttpNotFound():System.Web.Mvc.HttpNotFoundResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpNotFound" uniqueID="HttpNotFound(System.String):System.Web.Mvc.HttpNotFoundResult">
				<signature>System.Web.Mvc.Controller.HttpNotFound(System.String):System.Web.Mvc.HttpNotFoundResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="JavaScript" uniqueID="JavaScript(System.String):System.Web.Mvc.JavaScriptResult">
				<signature>System.Web.Mvc.Controller.JavaScript(System.String):System.Web.Mvc.JavaScriptResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Json" uniqueID="Json(System.Object):System.Web.Mvc.JsonResult">
				<signature>System.Web.Mvc.Controller.Json(System.Object):System.Web.Mvc.JsonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Json" uniqueID="Json(System.Object;System.String):System.Web.Mvc.JsonResult">
				<signature>System.Web.Mvc.Controller.Json(System.Object;System.String):System.Web.Mvc.JsonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Json" uniqueID="Json(System.Object;System.String;System.Text.Encoding):System.Web.Mvc.JsonResult">
				<signature>System.Web.Mvc.Controller.Json(System.Object;System.String;System.Text.Encoding):System.Web.Mvc.JsonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Json" uniqueID="Json(System.Object;System.String;System.Text.Encoding;System.Web.Mvc.JsonRequestBehavior):System.Web.Mvc.JsonResult">
				<signature>System.Web.Mvc.Controller.Json(System.Object;System.String;System.Text.Encoding;System.Web.Mvc.JsonRequestBehavior):System.Web.Mvc.JsonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Json" uniqueID="Json(System.Object;System.String;System.Web.Mvc.JsonRequestBehavior):System.Web.Mvc.JsonResult">
				<signature>System.Web.Mvc.Controller.Json(System.Object;System.String;System.Web.Mvc.JsonRequestBehavior):System.Web.Mvc.JsonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Json" uniqueID="Json(System.Object;System.Web.Mvc.JsonRequestBehavior):System.Web.Mvc.JsonResult">
				<signature>System.Web.Mvc.Controller.Json(System.Object;System.Web.Mvc.JsonRequestBehavior):System.Web.Mvc.JsonResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnActionExecuted" uniqueID="OnActionExecuted(System.Web.Mvc.ActionExecutedContext):System.Void">
				<signature>System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnActionExecuting" uniqueID="OnActionExecuting(System.Web.Mvc.ActionExecutingContext):System.Void">
				<signature>System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnAuthorization" uniqueID="OnAuthorization(System.Web.Mvc.AuthorizationContext):System.Void">
				<signature>System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnException" uniqueID="OnException(System.Web.Mvc.ExceptionContext):System.Void">
				<signature>System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnResultExecuted" uniqueID="OnResultExecuted(System.Web.Mvc.ResultExecutedContext):System.Void">
				<signature>System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnResultExecuting" uniqueID="OnResultExecuting(System.Web.Mvc.ResultExecutingContext):System.Void">
				<signature>System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PartialView" uniqueID="PartialView():System.Web.Mvc.PartialViewResult">
				<signature>System.Web.Mvc.Controller.PartialView():System.Web.Mvc.PartialViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PartialView" uniqueID="PartialView(System.Object):System.Web.Mvc.PartialViewResult">
				<signature>System.Web.Mvc.Controller.PartialView(System.Object):System.Web.Mvc.PartialViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PartialView" uniqueID="PartialView(System.String):System.Web.Mvc.PartialViewResult">
				<signature>System.Web.Mvc.Controller.PartialView(System.String):System.Web.Mvc.PartialViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PartialView" uniqueID="PartialView(System.String;System.Object):System.Web.Mvc.PartialViewResult">
				<signature>System.Web.Mvc.Controller.PartialView(System.String;System.Object):System.Web.Mvc.PartialViewResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PossiblyLoadTempData" uniqueID="PossiblyLoadTempData():System.Void">
				<signature>System.Web.Mvc.Controller.PossiblyLoadTempData():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PossiblySaveTempData" uniqueID="PossiblySaveTempData():System.Void">
				<signature>System.Web.Mvc.Controller.PossiblySaveTempData():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String):System.Web.Mvc.RedirectResult">
				<signature>System.Web.Mvc.Controller.Redirect(System.String):System.Web.Mvc.RedirectResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectPermanent" uniqueID="RedirectPermanent(System.String):System.Web.Mvc.RedirectResult">
				<signature>System.Web.Mvc.Controller.RedirectPermanent(System.String):System.Web.Mvc.RedirectResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToAction" uniqueID="RedirectToAction(System.String):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToAction(System.String):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToAction" uniqueID="RedirectToAction(System.String;System.Object):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToAction(System.String;System.Object):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToAction" uniqueID="RedirectToAction(System.String;System.String):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToAction(System.String;System.String):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToAction" uniqueID="RedirectToAction(System.String;System.String;System.Object):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToAction(System.String;System.String;System.Object):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToAction" uniqueID="RedirectToAction(System.String;System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToAction(System.String;System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToAction" uniqueID="RedirectToAction(System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToAction(System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToActionPermanent" uniqueID="RedirectToActionPermanent(System.String):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToActionPermanent(System.String):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToActionPermanent" uniqueID="RedirectToActionPermanent(System.String;System.Object):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToActionPermanent(System.String;System.Object):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToActionPermanent" uniqueID="RedirectToActionPermanent(System.String;System.String):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToActionPermanent(System.String;System.String):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToActionPermanent" uniqueID="RedirectToActionPermanent(System.String;System.String;System.Object):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToActionPermanent(System.String;System.String;System.Object):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToActionPermanent" uniqueID="RedirectToActionPermanent(System.String;System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToActionPermanent(System.String;System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToActionPermanent" uniqueID="RedirectToActionPermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToActionPermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.Object):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoute(System.Object):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoute(System.String):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Object):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoute(System.String;System.Object):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.Object):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String;System.Object):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String;System.Object):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult">
				<signature>System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):System.Web.Mvc.RedirectToRouteResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IActionFilter.OnActionExecuted" uniqueID="System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext):System.Void">
				<signature>System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IActionFilter.OnActionExecuting" uniqueID="System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext):System.Void">
				<signature>System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IAuthorizationFilter.OnAuthorization" uniqueID="System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext):System.Void">
				<signature>System.Web.Mvc.Controller.System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IExceptionFilter.OnException" uniqueID="System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext):System.Void">
				<signature>System.Web.Mvc.Controller.System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IResultFilter.OnResultExecuted" uniqueID="System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext):System.Void">
				<signature>System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IResultFilter.OnResultExecuting" uniqueID="System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext):System.Void">
				<signature>System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryUpdateModel&lt;MvcMusicStore.Models.Order&gt;" uniqueID="TryUpdateModel&lt;MvcMusicStore.Models.Order&gt;(MvcMusicStore.Models.Order):System.Boolean">
				<signature>System.Web.Mvc.Controller.TryUpdateModel&lt;MvcMusicStore.Models.Order&gt;(MvcMusicStore.Models.Order):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryValidateModel" uniqueID="TryValidateModel(System.Object):System.Boolean">
				<signature>System.Web.Mvc.Controller.TryValidateModel(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryValidateModel" uniqueID="TryValidateModel(System.Object;System.String):System.Boolean">
				<signature>System.Web.Mvc.Controller.TryValidateModel(System.Object;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ValidateModel" uniqueID="ValidateModel(System.Object):System.Void">
				<signature>System.Web.Mvc.Controller.ValidateModel(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ValidateModel" uniqueID="ValidateModel(System.Object;System.String):System.Void">
				<signature>System.Web.Mvc.Controller.ValidateModel(System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="View" uniqueID="View():System.Web.Mvc.ViewResult">
				<signature>System.Web.Mvc.Controller.View():System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="View" uniqueID="View(System.Object):System.Web.Mvc.ViewResult">
				<signature>System.Web.Mvc.Controller.View(System.Object):System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="View" uniqueID="View(System.String):System.Web.Mvc.ViewResult">
				<signature>System.Web.Mvc.Controller.View(System.String):System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="View" uniqueID="View(System.String;System.Object):System.Web.Mvc.ViewResult">
				<signature>System.Web.Mvc.Controller.View(System.String;System.Object):System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="View" uniqueID="View(System.String;System.String):System.Web.Mvc.ViewResult">
				<signature>System.Web.Mvc.Controller.View(System.String;System.String):System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="View" uniqueID="View(System.String;System.String;System.Object):System.Web.Mvc.ViewResult">
				<signature>System.Web.Mvc.Controller.View(System.String;System.String;System.Object):System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="View" uniqueID="View(System.Web.Mvc.IView):System.Web.Mvc.ViewResult">
				<signature>System.Web.Mvc.Controller.View(System.Web.Mvc.IView):System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="View" uniqueID="View(System.Web.Mvc.IView;System.Object):System.Web.Mvc.ViewResult">
				<signature>System.Web.Mvc.Controller.View(System.Web.Mvc.IView;System.Object):System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ActionInvoker" uniqueID="get_ActionInvoker():System.Web.Mvc.IActionInvoker">
				<signature>System.Web.Mvc.Controller.get_ActionInvoker():System.Web.Mvc.IActionInvoker</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Binders" uniqueID="get_Binders():System.Web.Mvc.ModelBinderDictionary">
				<signature>System.Web.Mvc.Controller.get_Binders():System.Web.Mvc.ModelBinderDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HttpContext" uniqueID="get_HttpContext():System.Web.HttpContextBase">
				<signature>System.Web.Mvc.Controller.get_HttpContext():System.Web.HttpContextBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ModelState" uniqueID="get_ModelState():System.Web.Mvc.ModelStateDictionary">
				<signature>System.Web.Mvc.Controller.get_ModelState():System.Web.Mvc.ModelStateDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Request" uniqueID="get_Request():System.Web.HttpRequestBase">
				<signature>System.Web.Mvc.Controller.get_Request():System.Web.HttpRequestBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Response" uniqueID="get_Response():System.Web.HttpResponseBase">
				<signature>System.Web.Mvc.Controller.get_Response():System.Web.HttpResponseBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RouteCollection" uniqueID="get_RouteCollection():System.Web.Routing.RouteCollection">
				<signature>System.Web.Mvc.Controller.get_RouteCollection():System.Web.Routing.RouteCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RouteData" uniqueID="get_RouteData():System.Web.Routing.RouteData">
				<signature>System.Web.Mvc.Controller.get_RouteData():System.Web.Routing.RouteData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Server" uniqueID="get_Server():System.Web.HttpServerUtilityBase">
				<signature>System.Web.Mvc.Controller.get_Server():System.Web.HttpServerUtilityBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Session" uniqueID="get_Session():System.Web.HttpSessionStateBase">
				<signature>System.Web.Mvc.Controller.get_Session():System.Web.HttpSessionStateBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TempDataProvider" uniqueID="get_TempDataProvider():System.Web.Mvc.ITempDataProvider">
				<signature>System.Web.Mvc.Controller.get_TempDataProvider():System.Web.Mvc.ITempDataProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Url" uniqueID="get_Url():System.Web.Mvc.UrlHelper">
				<signature>System.Web.Mvc.Controller.get_Url():System.Web.Mvc.UrlHelper</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_User" uniqueID="get_User():System.Security.Principal.IPrincipal">
				<signature>System.Web.Mvc.Controller.get_User():System.Security.Principal.IPrincipal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ActionInvoker" uniqueID="set_ActionInvoker(System.Web.Mvc.IActionInvoker):System.Void">
				<signature>System.Web.Mvc.Controller.set_ActionInvoker(System.Web.Mvc.IActionInvoker):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Binders" uniqueID="set_Binders(System.Web.Mvc.ModelBinderDictionary):System.Void">
				<signature>System.Web.Mvc.Controller.set_Binders(System.Web.Mvc.ModelBinderDictionary):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RouteCollection" uniqueID="set_RouteCollection(System.Web.Routing.RouteCollection):System.Void">
				<signature>System.Web.Mvc.Controller.set_RouteCollection(System.Web.Routing.RouteCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TempDataProvider" uniqueID="set_TempDataProvider(System.Web.Mvc.ITempDataProvider):System.Void">
				<signature>System.Web.Mvc.Controller.set_TempDataProvider(System.Web.Mvc.ITempDataProvider):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Url" uniqueID="set_Url(System.Web.Mvc.UrlHelper):System.Void">
				<signature>System.Web.Mvc.Controller.set_Url(System.Web.Mvc.UrlHelper):System.Void</signature>
			</method>
		</class>
		<class name="IAuthorizationFilter" uniqueID="System.Web.Mvc.IAuthorizationFilter">
			<method accessibility="Public" methodKind="Member" name="OnAuthorization" uniqueID="OnAuthorization(System.Web.Mvc.AuthorizationContext):System.Void">
				<signature>System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext):System.Void</signature>
			</method>
		</class>
		<class name="IActionFilter" uniqueID="System.Web.Mvc.IActionFilter">
			<method accessibility="Public" methodKind="Member" name="OnActionExecuted" uniqueID="OnActionExecuted(System.Web.Mvc.ActionExecutedContext):System.Void">
				<signature>System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnActionExecuting" uniqueID="OnActionExecuting(System.Web.Mvc.ActionExecutingContext):System.Void">
				<signature>System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext):System.Void</signature>
			</method>
		</class>
		<class name="IController" uniqueID="System.Web.Mvc.IController">
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
		</class>
		<class name="ControllerBase" uniqueID="System.Web.Mvc.ControllerBase">
			<method accessibility="Private" methodKind="Member" name="&lt;get_ViewBag&gt;b__0" uniqueID="&lt;get_ViewBag&gt;b__0():System.Web.Mvc.ViewDataDictionary">
				<signature>System.Web.Mvc.ControllerBase.&lt;get_ViewBag&gt;b__0():System.Web.Mvc.ViewDataDictionary</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ControllerBase" uniqueID="ControllerBase():System.Void">
				<signature>System.Web.Mvc.ControllerBase.ControllerBase():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Execute" uniqueID="Execute(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteCore" uniqueID="ExecuteCore():System.Void">
				<signature>System.Web.Mvc.ControllerBase.ExecuteCore():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IController.Execute" uniqueID="System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.Mvc.ControllerBase.System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="VerifyExecuteCalledOnce" uniqueID="VerifyExecuteCalledOnce():System.Void">
				<signature>System.Web.Mvc.ControllerBase.VerifyExecuteCalledOnce():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ControllerContext" uniqueID="get_ControllerContext():System.Web.Mvc.ControllerContext">
				<signature>System.Web.Mvc.ControllerBase.get_ControllerContext():System.Web.Mvc.ControllerContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TempData" uniqueID="get_TempData():System.Web.Mvc.TempDataDictionary">
				<signature>System.Web.Mvc.ControllerBase.get_TempData():System.Web.Mvc.TempDataDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValidateRequest" uniqueID="get_ValidateRequest():System.Boolean">
				<signature>System.Web.Mvc.ControllerBase.get_ValidateRequest():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueProvider" uniqueID="get_ValueProvider():System.Web.Mvc.IValueProvider">
				<signature>System.Web.Mvc.ControllerBase.get_ValueProvider():System.Web.Mvc.IValueProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewBag" uniqueID="get_ViewBag():System.Object">
				<signature>System.Web.Mvc.ControllerBase.get_ViewBag():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewData" uniqueID="get_ViewData():System.Web.Mvc.ViewDataDictionary">
				<signature>System.Web.Mvc.ControllerBase.get_ViewData():System.Web.Mvc.ViewDataDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ControllerContext" uniqueID="set_ControllerContext(System.Web.Mvc.ControllerContext):System.Void">
				<signature>System.Web.Mvc.ControllerBase.set_ControllerContext(System.Web.Mvc.ControllerContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TempData" uniqueID="set_TempData(System.Web.Mvc.TempDataDictionary):System.Void">
				<signature>System.Web.Mvc.ControllerBase.set_TempData(System.Web.Mvc.TempDataDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ValidateRequest" uniqueID="set_ValidateRequest(System.Boolean):System.Void">
				<signature>System.Web.Mvc.ControllerBase.set_ValidateRequest(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ValueProvider" uniqueID="set_ValueProvider(System.Web.Mvc.IValueProvider):System.Void">
				<signature>System.Web.Mvc.ControllerBase.set_ValueProvider(System.Web.Mvc.IValueProvider):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ViewData" uniqueID="set_ViewData(System.Web.Mvc.ViewDataDictionary):System.Void">
				<signature>System.Web.Mvc.ControllerBase.set_ViewData(System.Web.Mvc.ViewDataDictionary):System.Void</signature>
			</method>
		</class>
		<class name="IResultFilter" uniqueID="System.Web.Mvc.IResultFilter">
			<method accessibility="Public" methodKind="Member" name="OnResultExecuted" uniqueID="OnResultExecuted(System.Web.Mvc.ResultExecutedContext):System.Void">
				<signature>System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnResultExecuting" uniqueID="OnResultExecuting(System.Web.Mvc.ResultExecutingContext):System.Void">
				<signature>System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext):System.Void</signature>
			</method>
		</class>
		<class name="ModelStateDictionary" uniqueID="System.Web.Mvc.ModelStateDictionary">
			<method accessibility="Private" methodKind="Static" name="&lt;IsValidField&gt;b__2" uniqueID="&lt;IsValidField&gt;b__2(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.&lt;IsValidField&gt;b__2(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;get_IsValid&gt;b__0" uniqueID="&lt;get_IsValid&gt;b__0(System.Web.Mvc.ModelState):System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.&lt;get_IsValid&gt;b__0(System.Web.Mvc.ModelState):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Web.Mvc.ModelState):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.Add(System.String;System.Web.Mvc.ModelState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddModelError" uniqueID="AddModelError(System.String;System.Exception):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.AddModelError(System.String;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddModelError" uniqueID="AddModelError(System.String;System.String):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.AddModelError(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;[];System.Int32):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;&gt;">
				<signature>System.Web.Mvc.ModelStateDictionary.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetModelStateForKey" uniqueID="GetModelStateForKey(System.String):System.Web.Mvc.ModelState">
				<signature>System.Web.Mvc.ModelStateDictionary.GetModelStateForKey(System.String):System.Web.Mvc.ModelState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsValidField" uniqueID="IsValidField(System.String):System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.IsValidField(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Web.Mvc.ModelStateDictionary):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ModelStateDictionary" uniqueID="ModelStateDictionary():System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.ModelStateDictionary():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ModelStateDictionary" uniqueID="ModelStateDictionary(System.Web.Mvc.ModelStateDictionary):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.ModelStateDictionary(System.Web.Mvc.ModelStateDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.Mvc.ModelState&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetModelValue" uniqueID="SetModelValue(System.String;System.Web.Mvc.ValueProviderResult):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String;System.Web.Mvc.ValueProviderResult):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Web.Mvc.ModelStateDictionary.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Web.Mvc.ModelState):System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String;System.Web.Mvc.ModelState):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Web.Mvc.ModelStateDictionary.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsValid" uniqueID="get_IsValid():System.Boolean">
				<signature>System.Web.Mvc.ModelStateDictionary.get_IsValid():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.Mvc.ModelState">
				<signature>System.Web.Mvc.ModelStateDictionary.get_Item(System.String):System.Web.Mvc.ModelState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Web.Mvc.ModelStateDictionary.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;">
				<signature>System.Web.Mvc.ModelStateDictionary.get_Values():System.Collections.Generic.ICollection&lt;System.Web.Mvc.ModelState&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Web.Mvc.ModelState):System.Void">
				<signature>System.Web.Mvc.ModelStateDictionary.set_Item(System.String;System.Web.Mvc.ModelState):System.Void</signature>
			</method>
		</class>
		<class name="RouteCollectionExtensions" uniqueID="System.Web.Mvc.RouteCollectionExtensions">
			<method accessibility="Private" methodKind="Static" name="FilterRouteCollectionByArea" uniqueID="FilterRouteCollectionByArea(System.Web.Routing.RouteCollection;System.String;System.Boolean):System.Web.Routing.RouteCollection">
				<signature>System.Web.Mvc.RouteCollectionExtensions.FilterRouteCollectionByArea(System.Web.Routing.RouteCollection;System.String;System.Boolean):System.Web.Routing.RouteCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetVirtualPathForArea" uniqueID="GetVirtualPathForArea(System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.String;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData">
				<signature>System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.String;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetVirtualPathForArea" uniqueID="GetVirtualPathForArea(System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.String;System.Web.Routing.RouteValueDictionary;System.Boolean):System.Web.Routing.VirtualPathData">
				<signature>System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.String;System.Web.Routing.RouteValueDictionary;System.Boolean):System.Web.Routing.VirtualPathData</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetVirtualPathForArea" uniqueID="GetVirtualPathForArea(System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData">
				<signature>System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IgnoreRoute" uniqueID="IgnoreRoute(System.Web.Routing.RouteCollection;System.String):System.Void">
				<signature>System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IgnoreRoute" uniqueID="IgnoreRoute(System.Web.Routing.RouteCollection;System.String;System.Object):System.Void">
				<signature>System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MapRoute" uniqueID="MapRoute(System.Web.Routing.RouteCollection;System.String;System.String):System.Web.Routing.Route">
				<signature>System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection;System.String;System.String):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MapRoute" uniqueID="MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.Object):System.Web.Routing.Route">
				<signature>System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.Object):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MapRoute" uniqueID="MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.Object;System.Object):System.Web.Routing.Route">
				<signature>System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.Object;System.Object):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MapRoute" uniqueID="MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.Object;System.Object;System.String[]):System.Web.Routing.Route">
				<signature>System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.Object;System.Object;System.String[]):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MapRoute" uniqueID="MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.Object;System.String[]):System.Web.Routing.Route">
				<signature>System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.Object;System.String[]):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MapRoute" uniqueID="MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.String[]):System.Web.Routing.Route">
				<signature>System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection;System.String;System.String;System.String[]):System.Web.Routing.Route</signature>
			</method>
		</class>
		<class name="IExceptionFilter" uniqueID="System.Web.Mvc.IExceptionFilter">
			<method accessibility="Public" methodKind="Member" name="OnException" uniqueID="OnException(System.Web.Mvc.ExceptionContext):System.Void">
				<signature>System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext):System.Void</signature>
			</method>
		</class>
		<class name="AreaRegistration" uniqueID="System.Web.Mvc.AreaRegistration">
			<method accessibility="Private" methodKind="Static" name="IsAreaRegistrationType" uniqueID="IsAreaRegistrationType(System.Type):System.Boolean">
				<signature>System.Web.Mvc.AreaRegistration.IsAreaRegistrationType(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterAllAreas" uniqueID="RegisterAllAreas():System.Void">
				<signature>System.Web.Mvc.AreaRegistration.RegisterAllAreas():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterAllAreas" uniqueID="RegisterAllAreas(System.Object):System.Void">
				<signature>System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegisterAllAreas" uniqueID="RegisterAllAreas(System.Web.Routing.RouteCollection;System.Web.Mvc.IBuildManager;System.Object):System.Void">
				<signature>System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Web.Routing.RouteCollection;System.Web.Mvc.IBuildManager;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AreaRegistration" uniqueID="AreaRegistration():System.Void">
				<signature>System.Web.Mvc.AreaRegistration.AreaRegistration():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateContextAndRegister" uniqueID="CreateContextAndRegister(System.Web.Routing.RouteCollection;System.Object):System.Void">
				<signature>System.Web.Mvc.AreaRegistration.CreateContextAndRegister(System.Web.Routing.RouteCollection;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterArea" uniqueID="RegisterArea(System.Web.Mvc.AreaRegistrationContext):System.Void">
				<signature>System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AreaName" uniqueID="get_AreaName():System.String">
				<signature>System.Web.Mvc.AreaRegistration.get_AreaName():System.String</signature>
			</method>
		</class>
		<class name="Filter" uniqueID="System.Web.Mvc.Filter">
			<method accessibility="Public" methodKind="Member" name="Filter" uniqueID="Filter(System.Object;System.Web.Mvc.FilterScope;System.Nullable&lt;System.Int32&gt;):System.Void">
				<signature>System.Web.Mvc.Filter.Filter(System.Object;System.Web.Mvc.FilterScope;System.Nullable&lt;System.Int32&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Instance" uniqueID="get_Instance():System.Object">
				<signature>System.Web.Mvc.Filter.get_Instance():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Order" uniqueID="get_Order():System.Int32">
				<signature>System.Web.Mvc.Filter.get_Order():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scope" uniqueID="get_Scope():System.Web.Mvc.FilterScope">
				<signature>System.Web.Mvc.Filter.get_Scope():System.Web.Mvc.FilterScope</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Instance" uniqueID="set_Instance(System.Object):System.Void">
				<signature>System.Web.Mvc.Filter.set_Instance(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Order" uniqueID="set_Order(System.Int32):System.Void">
				<signature>System.Web.Mvc.Filter.set_Order(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Scope" uniqueID="set_Scope(System.Web.Mvc.FilterScope):System.Void">
				<signature>System.Web.Mvc.Filter.set_Scope(System.Web.Mvc.FilterScope):System.Void</signature>
			</method>
		</class>
		<class name="ViewDataDictionary" uniqueID="System.Web.Mvc.ViewDataDictionary">
			<method accessibility="Private" methodKind="Member" name="&lt;get_ModelMetadata&gt;b__0" uniqueID="&lt;get_ModelMetadata&gt;b__0():System.Object">
				<signature>System.Web.Mvc.ViewDataDictionary.&lt;get_ModelMetadata&gt;b__0():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Object):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.Add(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Boolean">
				<signature>System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;[];System.Int32):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Eval" uniqueID="Eval(System.String):System.Object">
				<signature>System.Web.Mvc.ViewDataDictionary.Eval(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Eval" uniqueID="Eval(System.String;System.String):System.String">
				<signature>System.Web.Mvc.ViewDataDictionary.Eval(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;&gt;">
				<signature>System.Web.Mvc.ViewDataDictionary.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetViewDataInfo" uniqueID="GetViewDataInfo(System.String):System.Web.Mvc.ViewDataInfo">
				<signature>System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String):System.Web.Mvc.ViewDataInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Boolean">
				<signature>System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Object&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Web.Mvc.ViewDataDictionary.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetModel" uniqueID="SetModel(System.Object):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.SetModel(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Web.Mvc.ViewDataDictionary.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Object):System.Boolean">
				<signature>System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ViewDataDictionary" uniqueID="ViewDataDictionary():System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.ViewDataDictionary():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ViewDataDictionary" uniqueID="ViewDataDictionary(System.Object):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.ViewDataDictionary(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ViewDataDictionary" uniqueID="ViewDataDictionary(System.Web.Mvc.ViewDataDictionary):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.ViewDataDictionary(System.Web.Mvc.ViewDataDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Web.Mvc.ViewDataDictionary.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Web.Mvc.ViewDataDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Web.Mvc.ViewDataDictionary.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Web.Mvc.ViewDataDictionary.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Model" uniqueID="get_Model():System.Object">
				<signature>System.Web.Mvc.ViewDataDictionary.get_Model():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ModelMetadata" uniqueID="get_ModelMetadata():System.Web.Mvc.ModelMetadata">
				<signature>System.Web.Mvc.ViewDataDictionary.get_ModelMetadata():System.Web.Mvc.ModelMetadata</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ModelState" uniqueID="get_ModelState():System.Web.Mvc.ModelStateDictionary">
				<signature>System.Web.Mvc.ViewDataDictionary.get_ModelState():System.Web.Mvc.ModelStateDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TemplateInfo" uniqueID="get_TemplateInfo():System.Web.Mvc.TemplateInfo">
				<signature>System.Web.Mvc.ViewDataDictionary.get_TemplateInfo():System.Web.Mvc.TemplateInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;">
				<signature>System.Web.Mvc.ViewDataDictionary.get_Values():System.Collections.Generic.ICollection&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Object):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.set_Item(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Model" uniqueID="set_Model(System.Object):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.set_Model(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ModelMetadata" uniqueID="set_ModelMetadata(System.Web.Mvc.ModelMetadata):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.set_ModelMetadata(System.Web.Mvc.ModelMetadata):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TemplateInfo" uniqueID="set_TemplateInfo(System.Web.Mvc.TemplateInfo):System.Void">
				<signature>System.Web.Mvc.ViewDataDictionary.set_TemplateInfo(System.Web.Mvc.TemplateInfo):System.Void</signature>
			</method>
		</class>
		<class name="IMvcFilter" uniqueID="System.Web.Mvc.IMvcFilter">
			<method accessibility="Public" methodKind="Member" name="get_AllowMultiple" uniqueID="get_AllowMultiple():System.Boolean">
				<signature>System.Web.Mvc.IMvcFilter.get_AllowMultiple():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Order" uniqueID="get_Order():System.Int32">
				<signature>System.Web.Mvc.IMvcFilter.get_Order():System.Int32</signature>
			</method>
		</class>
		<class name="FilterAttribute" uniqueID="System.Web.Mvc.FilterAttribute">
			<method accessibility="Private" methodKind="Static" name="&lt;AllowsMultiple&gt;b__0" uniqueID="&lt;AllowsMultiple&gt;b__0(System.Type):System.Boolean">
				<signature>System.Web.Mvc.FilterAttribute.&lt;AllowsMultiple&gt;b__0(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.Mvc.FilterAttribute.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="AllowsMultiple" uniqueID="AllowsMultiple(System.Type):System.Boolean">
				<signature>System.Web.Mvc.FilterAttribute.AllowsMultiple(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FilterAttribute" uniqueID="FilterAttribute():System.Void">
				<signature>System.Web.Mvc.FilterAttribute.FilterAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowMultiple" uniqueID="get_AllowMultiple():System.Boolean">
				<signature>System.Web.Mvc.FilterAttribute.get_AllowMultiple():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Order" uniqueID="get_Order():System.Int32">
				<signature>System.Web.Mvc.FilterAttribute.get_Order():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Order" uniqueID="set_Order(System.Int32):System.Void">
				<signature>System.Web.Mvc.FilterAttribute.set_Order(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="IValueProvider" uniqueID="System.Web.Mvc.IValueProvider">
			<method accessibility="Public" methodKind="Member" name="ContainsPrefix" uniqueID="ContainsPrefix(System.String):System.Boolean">
				<signature>System.Web.Mvc.IValueProvider.ContainsPrefix(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.String):System.Web.Mvc.ValueProviderResult">
				<signature>System.Web.Mvc.IValueProvider.GetValue(System.String):System.Web.Mvc.ValueProviderResult</signature>
			</method>
		</class>
		<class name="FormCollection" uniqueID="System.Web.Mvc.FormCollection">
			<method accessibility="Public" methodKind="Member" name="FormCollection" uniqueID="FormCollection():System.Void">
				<signature>System.Web.Mvc.FormCollection.FormCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FormCollection" uniqueID="FormCollection(System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Web.Mvc.FormCollection.FormCollection(System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FormCollection" uniqueID="FormCollection(System.Web.Mvc.ControllerBase;System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;;System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;):System.Void">
				<signature>System.Web.Mvc.FormCollection.FormCollection(System.Web.Mvc.ControllerBase;System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;;System.Func&lt;System.Collections.Specialized.NameValueCollection&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.String):System.Web.Mvc.ValueProviderResult">
				<signature>System.Web.Mvc.FormCollection.GetValue(System.String):System.Web.Mvc.ValueProviderResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IValueProvider.ContainsPrefix" uniqueID="System.Web.Mvc.IValueProvider.ContainsPrefix(System.String):System.Boolean">
				<signature>System.Web.Mvc.FormCollection.System.Web.Mvc.IValueProvider.ContainsPrefix(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IValueProvider.GetValue" uniqueID="System.Web.Mvc.IValueProvider.GetValue(System.String):System.Web.Mvc.ValueProviderResult">
				<signature>System.Web.Mvc.FormCollection.System.Web.Mvc.IValueProvider.GetValue(System.String):System.Web.Mvc.ValueProviderResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToValueProvider" uniqueID="ToValueProvider():System.Web.Mvc.IValueProvider">
				<signature>System.Web.Mvc.FormCollection.ToValueProvider():System.Web.Mvc.IValueProvider</signature>
			</method>
		</class>
		<class name="ViewResult" uniqueID="System.Web.Mvc.ViewResult">
			<method accessibility="Protected" methodKind="Member" name="FindView" uniqueID="FindView(System.Web.Mvc.ControllerContext):System.Web.Mvc.ViewEngineResult">
				<signature>System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext):System.Web.Mvc.ViewEngineResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ViewResult" uniqueID="ViewResult():System.Void">
				<signature>System.Web.Mvc.ViewResult.ViewResult():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MasterName" uniqueID="get_MasterName():System.String">
				<signature>System.Web.Mvc.ViewResult.get_MasterName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MasterName" uniqueID="set_MasterName(System.String):System.Void">
				<signature>System.Web.Mvc.ViewResult.set_MasterName(System.String):System.Void</signature>
			</method>
		</class>
		<class name="IFilterProvider" uniqueID="System.Web.Mvc.IFilterProvider">
			<method accessibility="Public" methodKind="Member" name="GetFilters" uniqueID="GetFilters(System.Web.Mvc.ControllerContext;System.Web.Mvc.ActionDescriptor):System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.Filter&gt;">
				<signature>System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext;System.Web.Mvc.ActionDescriptor):System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.Filter&gt;</signature>
			</method>
		</class>
		<class name="GlobalFilterCollection" uniqueID="System.Web.Mvc.GlobalFilterCollection">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Web.Mvc.GlobalFilterCollection.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object;System.Int32):System.Void">
				<signature>System.Web.Mvc.GlobalFilterCollection.Add(System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddInternal" uniqueID="AddInternal(System.Object;System.Nullable&lt;System.Int32&gt;):System.Void">
				<signature>System.Web.Mvc.GlobalFilterCollection.AddInternal(System.Object;System.Nullable&lt;System.Int32&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Web.Mvc.GlobalFilterCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Web.Mvc.GlobalFilterCollection.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.Filter&gt;">
				<signature>System.Web.Mvc.GlobalFilterCollection.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.Filter&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GlobalFilterCollection" uniqueID="GlobalFilterCollection():System.Void">
				<signature>System.Web.Mvc.GlobalFilterCollection.GlobalFilterCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Web.Mvc.GlobalFilterCollection.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Web.Mvc.GlobalFilterCollection.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Mvc.IFilterProvider.GetFilters" uniqueID="System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext;System.Web.Mvc.ActionDescriptor):System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.Filter&gt;">
				<signature>System.Web.Mvc.GlobalFilterCollection.System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext;System.Web.Mvc.ActionDescriptor):System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.Filter&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Web.Mvc.GlobalFilterCollection.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ViewResultBase" uniqueID="System.Web.Mvc.ViewResultBase">
			<method accessibility="Private" methodKind="Member" name="&lt;get_ViewBag&gt;b__0" uniqueID="&lt;get_ViewBag&gt;b__0():System.Web.Mvc.ViewDataDictionary">
				<signature>System.Web.Mvc.ViewResultBase.&lt;get_ViewBag&gt;b__0():System.Web.Mvc.ViewDataDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteResult" uniqueID="ExecuteResult(System.Web.Mvc.ControllerContext):System.Void">
				<signature>System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindView" uniqueID="FindView(System.Web.Mvc.ControllerContext):System.Web.Mvc.ViewEngineResult">
				<signature>System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext):System.Web.Mvc.ViewEngineResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ViewResultBase" uniqueID="ViewResultBase():System.Void">
				<signature>System.Web.Mvc.ViewResultBase.ViewResultBase():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Model" uniqueID="get_Model():System.Object">
				<signature>System.Web.Mvc.ViewResultBase.get_Model():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TempData" uniqueID="get_TempData():System.Web.Mvc.TempDataDictionary">
				<signature>System.Web.Mvc.ViewResultBase.get_TempData():System.Web.Mvc.TempDataDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_View" uniqueID="get_View():System.Web.Mvc.IView">
				<signature>System.Web.Mvc.ViewResultBase.get_View():System.Web.Mvc.IView</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewBag" uniqueID="get_ViewBag():System.Object">
				<signature>System.Web.Mvc.ViewResultBase.get_ViewBag():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewData" uniqueID="get_ViewData():System.Web.Mvc.ViewDataDictionary">
				<signature>System.Web.Mvc.ViewResultBase.get_ViewData():System.Web.Mvc.ViewDataDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewEngineCollection" uniqueID="get_ViewEngineCollection():System.Web.Mvc.ViewEngineCollection">
				<signature>System.Web.Mvc.ViewResultBase.get_ViewEngineCollection():System.Web.Mvc.ViewEngineCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewName" uniqueID="get_ViewName():System.String">
				<signature>System.Web.Mvc.ViewResultBase.get_ViewName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TempData" uniqueID="set_TempData(System.Web.Mvc.TempDataDictionary):System.Void">
				<signature>System.Web.Mvc.ViewResultBase.set_TempData(System.Web.Mvc.TempDataDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_View" uniqueID="set_View(System.Web.Mvc.IView):System.Void">
				<signature>System.Web.Mvc.ViewResultBase.set_View(System.Web.Mvc.IView):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ViewData" uniqueID="set_ViewData(System.Web.Mvc.ViewDataDictionary):System.Void">
				<signature>System.Web.Mvc.ViewResultBase.set_ViewData(System.Web.Mvc.ViewDataDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ViewEngineCollection" uniqueID="set_ViewEngineCollection(System.Web.Mvc.ViewEngineCollection):System.Void">
				<signature>System.Web.Mvc.ViewResultBase.set_ViewEngineCollection(System.Web.Mvc.ViewEngineCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ViewName" uniqueID="set_ViewName(System.String):System.Void">
				<signature>System.Web.Mvc.ViewResultBase.set_ViewName(System.String):System.Void</signature>
			</method>
		</class>
		<class name="GlobalFilters" uniqueID="System.Web.Mvc.GlobalFilters">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.Mvc.GlobalFilters.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Filters" uniqueID="get_Filters():System.Web.Mvc.GlobalFilterCollection">
				<signature>System.Web.Mvc.GlobalFilters.get_Filters():System.Web.Mvc.GlobalFilterCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="set_Filters" uniqueID="set_Filters(System.Web.Mvc.GlobalFilterCollection):System.Void">
				<signature>System.Web.Mvc.GlobalFilters.set_Filters(System.Web.Mvc.GlobalFilterCollection):System.Void</signature>
			</method>
		</class>
		<class name="HandleErrorAttribute" uniqueID="System.Web.Mvc.HandleErrorAttribute">
			<method accessibility="Public" methodKind="Member" name="HandleErrorAttribute" uniqueID="HandleErrorAttribute():System.Void">
				<signature>System.Web.Mvc.HandleErrorAttribute.HandleErrorAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnException" uniqueID="OnException(System.Web.Mvc.ExceptionContext):System.Void">
				<signature>System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExceptionType" uniqueID="get_ExceptionType():System.Type">
				<signature>System.Web.Mvc.HandleErrorAttribute.get_ExceptionType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Master" uniqueID="get_Master():System.String">
				<signature>System.Web.Mvc.HandleErrorAttribute.get_Master():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeId" uniqueID="get_TypeId():System.Object">
				<signature>System.Web.Mvc.HandleErrorAttribute.get_TypeId():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_View" uniqueID="get_View():System.String">
				<signature>System.Web.Mvc.HandleErrorAttribute.get_View():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ExceptionType" uniqueID="set_ExceptionType(System.Type):System.Void">
				<signature>System.Web.Mvc.HandleErrorAttribute.set_ExceptionType(System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Master" uniqueID="set_Master(System.String):System.Void">
				<signature>System.Web.Mvc.HandleErrorAttribute.set_Master(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_View" uniqueID="set_View(System.String):System.Void">
				<signature>System.Web.Mvc.HandleErrorAttribute.set_View(System.String):System.Void</signature>
			</method>
		</class>
		<class name="JsonResult" uniqueID="System.Web.Mvc.JsonResult">
			<method accessibility="Public" methodKind="Member" name="ExecuteResult" uniqueID="ExecuteResult(System.Web.Mvc.ControllerContext):System.Void">
				<signature>System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="JsonResult" uniqueID="JsonResult():System.Void">
				<signature>System.Web.Mvc.JsonResult.JsonResult():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentEncoding" uniqueID="get_ContentEncoding():System.Text.Encoding">
				<signature>System.Web.Mvc.JsonResult.get_ContentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentType" uniqueID="get_ContentType():System.String">
				<signature>System.Web.Mvc.JsonResult.get_ContentType():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Data" uniqueID="get_Data():System.Object">
				<signature>System.Web.Mvc.JsonResult.get_Data():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_JsonRequestBehavior" uniqueID="get_JsonRequestBehavior():System.Web.Mvc.JsonRequestBehavior">
				<signature>System.Web.Mvc.JsonResult.get_JsonRequestBehavior():System.Web.Mvc.JsonRequestBehavior</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentEncoding" uniqueID="set_ContentEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.Mvc.JsonResult.set_ContentEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentType" uniqueID="set_ContentType(System.String):System.Void">
				<signature>System.Web.Mvc.JsonResult.set_ContentType(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Data" uniqueID="set_Data(System.Object):System.Void">
				<signature>System.Web.Mvc.JsonResult.set_Data(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_JsonRequestBehavior" uniqueID="set_JsonRequestBehavior(System.Web.Mvc.JsonRequestBehavior):System.Void">
				<signature>System.Web.Mvc.JsonResult.set_JsonRequestBehavior(System.Web.Mvc.JsonRequestBehavior):System.Void</signature>
			</method>
		</class>
		<class name="ModelState" uniqueID="System.Web.Mvc.ModelState">
			<method accessibility="Public" methodKind="Member" name="ModelState" uniqueID="ModelState():System.Void">
				<signature>System.Web.Mvc.ModelState.ModelState():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Errors" uniqueID="get_Errors():System.Web.Mvc.ModelErrorCollection">
				<signature>System.Web.Mvc.ModelState.get_Errors():System.Web.Mvc.ModelErrorCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Web.Mvc.ValueProviderResult">
				<signature>System.Web.Mvc.ModelState.get_Value():System.Web.Mvc.ValueProviderResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Value" uniqueID="set_Value(System.Web.Mvc.ValueProviderResult):System.Void">
				<signature>System.Web.Mvc.ModelState.set_Value(System.Web.Mvc.ValueProviderResult):System.Void</signature>
			</method>
		</class>
		<class name="MultiSelectList" uniqueID="System.Web.Mvc.MultiSelectList">
			<method accessibility="Private" methodKind="Static" name="&lt;GetListItemsWithValueField&gt;b__2" uniqueID="&lt;GetListItemsWithValueField&gt;b__2(System.Object):System.String">
				<signature>System.Web.Mvc.MultiSelectList.&lt;GetListItemsWithValueField&gt;b__2(System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="Eval" uniqueID="Eval(System.Object;System.String):System.String">
				<signature>System.Web.Mvc.MultiSelectList.Eval(System.Object;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;GetListItemsWithValueField&gt;b__3" uniqueID="&lt;GetListItemsWithValueField&gt;b__3(System.Object):&lt;&gt;f__AnonymousType6&lt;System.Object;System.String&gt;">
				<signature>System.Web.Mvc.MultiSelectList.&lt;GetListItemsWithValueField&gt;b__3(System.Object):&lt;&gt;f__AnonymousType6&lt;System.Object;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.SelectListItem&gt;">
				<signature>System.Web.Mvc.MultiSelectList.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.Mvc.SelectListItem&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetListItems" uniqueID="GetListItems():System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;">
				<signature>System.Web.Mvc.MultiSelectList.GetListItems():System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetListItemsWithValueField" uniqueID="GetListItemsWithValueField():System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;">
				<signature>System.Web.Mvc.MultiSelectList.GetListItemsWithValueField():System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetListItemsWithoutValueField" uniqueID="GetListItemsWithoutValueField():System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;">
				<signature>System.Web.Mvc.MultiSelectList.GetListItemsWithoutValueField():System.Collections.Generic.IList&lt;System.Web.Mvc.SelectListItem&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MultiSelectList" uniqueID="MultiSelectList(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.Mvc.MultiSelectList.MultiSelectList(System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MultiSelectList" uniqueID="MultiSelectList(System.Collections.IEnumerable;System.Collections.IEnumerable):System.Void">
				<signature>System.Web.Mvc.MultiSelectList.MultiSelectList(System.Collections.IEnumerable;System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MultiSelectList" uniqueID="MultiSelectList(System.Collections.IEnumerable;System.String;System.String):System.Void">
				<signature>System.Web.Mvc.MultiSelectList.MultiSelectList(System.Collections.IEnumerable;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MultiSelectList" uniqueID="MultiSelectList(System.Collections.IEnumerable;System.String;System.String;System.Collections.IEnumerable):System.Void">
				<signature>System.Web.Mvc.MultiSelectList.MultiSelectList(System.Collections.IEnumerable;System.String;System.String;System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Web.Mvc.MultiSelectList.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataTextField" uniqueID="get_DataTextField():System.String">
				<signature>System.Web.Mvc.MultiSelectList.get_DataTextField():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataValueField" uniqueID="get_DataValueField():System.String">
				<signature>System.Web.Mvc.MultiSelectList.get_DataValueField():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.IEnumerable">
				<signature>System.Web.Mvc.MultiSelectList.get_Items():System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedValues" uniqueID="get_SelectedValues():System.Collections.IEnumerable">
				<signature>System.Web.Mvc.MultiSelectList.get_SelectedValues():System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_DataTextField" uniqueID="set_DataTextField(System.String):System.Void">
				<signature>System.Web.Mvc.MultiSelectList.set_DataTextField(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_DataValueField" uniqueID="set_DataValueField(System.String):System.Void">
				<signature>System.Web.Mvc.MultiSelectList.set_DataValueField(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_Items" uniqueID="set_Items(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.Mvc.MultiSelectList.set_Items(System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_SelectedValues" uniqueID="set_SelectedValues(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.Mvc.MultiSelectList.set_SelectedValues(System.Collections.IEnumerable):System.Void</signature>
			</method>
		</class>
		<class name="PartialViewResult" uniqueID="System.Web.Mvc.PartialViewResult">
			<method accessibility="Protected" methodKind="Member" name="FindView" uniqueID="FindView(System.Web.Mvc.ControllerContext):System.Web.Mvc.ViewEngineResult">
				<signature>System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext):System.Web.Mvc.ViewEngineResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PartialViewResult" uniqueID="PartialViewResult():System.Void">
				<signature>System.Web.Mvc.PartialViewResult.PartialViewResult():System.Void</signature>
			</method>
		</class>
		<class name="RedirectResult" uniqueID="System.Web.Mvc.RedirectResult">
			<method accessibility="Public" methodKind="Member" name="ExecuteResult" uniqueID="ExecuteResult(System.Web.Mvc.ControllerContext):System.Void">
				<signature>System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectResult" uniqueID="RedirectResult(System.String):System.Void">
				<signature>System.Web.Mvc.RedirectResult.RedirectResult(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectResult" uniqueID="RedirectResult(System.String;System.Boolean):System.Void">
				<signature>System.Web.Mvc.RedirectResult.RedirectResult(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Permanent" uniqueID="get_Permanent():System.Boolean">
				<signature>System.Web.Mvc.RedirectResult.get_Permanent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Url" uniqueID="get_Url():System.String">
				<signature>System.Web.Mvc.RedirectResult.get_Url():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_Permanent" uniqueID="set_Permanent(System.Boolean):System.Void">
				<signature>System.Web.Mvc.RedirectResult.set_Permanent(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_Url" uniqueID="set_Url(System.String):System.Void">
				<signature>System.Web.Mvc.RedirectResult.set_Url(System.String):System.Void</signature>
			</method>
		</class>
		<class name="RedirectToRouteResult" uniqueID="System.Web.Mvc.RedirectToRouteResult">
			<method accessibility="Public" methodKind="Member" name="ExecuteResult" uniqueID="ExecuteResult(System.Web.Mvc.ControllerContext):System.Void">
				<signature>System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRouteResult" uniqueID="RedirectToRouteResult(System.String;System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.Mvc.RedirectToRouteResult.RedirectToRouteResult(System.String;System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRouteResult" uniqueID="RedirectToRouteResult(System.String;System.Web.Routing.RouteValueDictionary;System.Boolean):System.Void">
				<signature>System.Web.Mvc.RedirectToRouteResult.RedirectToRouteResult(System.String;System.Web.Routing.RouteValueDictionary;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRouteResult" uniqueID="RedirectToRouteResult(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.Mvc.RedirectToRouteResult.RedirectToRouteResult(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Permanent" uniqueID="get_Permanent():System.Boolean">
				<signature>System.Web.Mvc.RedirectToRouteResult.get_Permanent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RouteName" uniqueID="get_RouteName():System.String">
				<signature>System.Web.Mvc.RedirectToRouteResult.get_RouteName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RouteValues" uniqueID="get_RouteValues():System.Web.Routing.RouteValueDictionary">
				<signature>System.Web.Mvc.RedirectToRouteResult.get_RouteValues():System.Web.Routing.RouteValueDictionary</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Routes" uniqueID="get_Routes():System.Web.Routing.RouteCollection">
				<signature>System.Web.Mvc.RedirectToRouteResult.get_Routes():System.Web.Routing.RouteCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_Permanent" uniqueID="set_Permanent(System.Boolean):System.Void">
				<signature>System.Web.Mvc.RedirectToRouteResult.set_Permanent(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_RouteName" uniqueID="set_RouteName(System.String):System.Void">
				<signature>System.Web.Mvc.RedirectToRouteResult.set_RouteName(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_RouteValues" uniqueID="set_RouteValues(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.Mvc.RedirectToRouteResult.set_RouteValues(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Routes" uniqueID="set_Routes(System.Web.Routing.RouteCollection):System.Void">
				<signature>System.Web.Mvc.RedirectToRouteResult.set_Routes(System.Web.Routing.RouteCollection):System.Void</signature>
			</method>
		</class>
		<class name="SelectList" uniqueID="System.Web.Mvc.SelectList">
			<method accessibility="Private" methodKind="Static" name="ToEnumerable" uniqueID="ToEnumerable(System.Object):System.Collections.IEnumerable">
				<signature>System.Web.Mvc.SelectList.ToEnumerable(System.Object):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectList" uniqueID="SelectList(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.Mvc.SelectList.SelectList(System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectList" uniqueID="SelectList(System.Collections.IEnumerable;System.Object):System.Void">
				<signature>System.Web.Mvc.SelectList.SelectList(System.Collections.IEnumerable;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectList" uniqueID="SelectList(System.Collections.IEnumerable;System.String;System.String):System.Void">
				<signature>System.Web.Mvc.SelectList.SelectList(System.Collections.IEnumerable;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectList" uniqueID="SelectList(System.Collections.IEnumerable;System.String;System.String;System.Object):System.Void">
				<signature>System.Web.Mvc.SelectList.SelectList(System.Collections.IEnumerable;System.String;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedValue" uniqueID="get_SelectedValue():System.Object">
				<signature>System.Web.Mvc.SelectList.get_SelectedValue():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_SelectedValue" uniqueID="set_SelectedValue(System.Object):System.Void">
				<signature>System.Web.Mvc.SelectList.set_SelectedValue(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="SelectListItem" uniqueID="System.Web.Mvc.SelectListItem">
			<method accessibility="Public" methodKind="Member" name="SelectListItem" uniqueID="SelectListItem():System.Void">
				<signature>System.Web.Mvc.SelectListItem.SelectListItem():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Selected" uniqueID="get_Selected():System.Boolean">
				<signature>System.Web.Mvc.SelectListItem.get_Selected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Text" uniqueID="get_Text():System.String">
				<signature>System.Web.Mvc.SelectListItem.get_Text():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.String">
				<signature>System.Web.Mvc.SelectListItem.get_Value():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Selected" uniqueID="set_Selected(System.Boolean):System.Void">
				<signature>System.Web.Mvc.SelectListItem.set_Selected(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Text" uniqueID="set_Text(System.String):System.Void">
				<signature>System.Web.Mvc.SelectListItem.set_Text(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Value" uniqueID="set_Value(System.String):System.Void">
				<signature>System.Web.Mvc.SelectListItem.set_Value(System.String):System.Void</signature>
			</method>
		</class>
		<class name="UrlHelper" uniqueID="System.Web.Mvc.UrlHelper">
			<method accessibility="Public" methodKind="Static" name="GenerateContentUrl" uniqueID="GenerateContentUrl(System.String;System.Web.HttpContextBase):System.String">
				<signature>System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String;System.Web.HttpContextBase):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GenerateUrl" uniqueID="GenerateUrl(System.String;System.String;System.String;System.String;System.String;System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.Boolean):System.String">
				<signature>System.Web.Mvc.UrlHelper.GenerateUrl(System.String;System.String;System.String;System.String;System.String;System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GenerateUrl" uniqueID="GenerateUrl(System.String;System.String;System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.Boolean):System.String">
				<signature>System.Web.Mvc.UrlHelper.GenerateUrl(System.String;System.String;System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteCollection;System.Web.Routing.RequestContext;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Action" uniqueID="Action(System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.Action(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Action" uniqueID="Action(System.String;System.Object):System.String">
				<signature>System.Web.Mvc.UrlHelper.Action(System.String;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Action" uniqueID="Action(System.String;System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.Action(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Action" uniqueID="Action(System.String;System.String;System.Object):System.String">
				<signature>System.Web.Mvc.UrlHelper.Action(System.String;System.String;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Action" uniqueID="Action(System.String;System.String;System.Object;System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.Action(System.String;System.String;System.Object;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Action" uniqueID="Action(System.String;System.String;System.Web.Routing.RouteValueDictionary):System.String">
				<signature>System.Web.Mvc.UrlHelper.Action(System.String;System.String;System.Web.Routing.RouteValueDictionary):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Action" uniqueID="Action(System.String;System.String;System.Web.Routing.RouteValueDictionary;System.String;System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.Action(System.String;System.String;System.Web.Routing.RouteValueDictionary;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Action" uniqueID="Action(System.String;System.Web.Routing.RouteValueDictionary):System.String">
				<signature>System.Web.Mvc.UrlHelper.Action(System.String;System.Web.Routing.RouteValueDictionary):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Content" uniqueID="Content(System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.Content(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Encode" uniqueID="Encode(System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.Encode(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GenerateUrl" uniqueID="GenerateUrl(System.String;System.String;System.String;System.Web.Routing.RouteValueDictionary):System.String">
				<signature>System.Web.Mvc.UrlHelper.GenerateUrl(System.String;System.String;System.String;System.Web.Routing.RouteValueDictionary):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsLocalUrl" uniqueID="IsLocalUrl(System.String):System.Boolean">
				<signature>System.Web.Mvc.UrlHelper.IsLocalUrl(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteUrl" uniqueID="RouteUrl(System.Object):System.String">
				<signature>System.Web.Mvc.UrlHelper.RouteUrl(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteUrl" uniqueID="RouteUrl(System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.RouteUrl(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteUrl" uniqueID="RouteUrl(System.String;System.Object):System.String">
				<signature>System.Web.Mvc.UrlHelper.RouteUrl(System.String;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteUrl" uniqueID="RouteUrl(System.String;System.Object;System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.RouteUrl(System.String;System.Object;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteUrl" uniqueID="RouteUrl(System.String;System.Web.Routing.RouteValueDictionary):System.String">
				<signature>System.Web.Mvc.UrlHelper.RouteUrl(System.String;System.Web.Routing.RouteValueDictionary):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteUrl" uniqueID="RouteUrl(System.String;System.Web.Routing.RouteValueDictionary;System.String;System.String):System.String">
				<signature>System.Web.Mvc.UrlHelper.RouteUrl(System.String;System.Web.Routing.RouteValueDictionary;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteUrl" uniqueID="RouteUrl(System.Web.Routing.RouteValueDictionary):System.String">
				<signature>System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlHelper" uniqueID="UrlHelper(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.Mvc.UrlHelper.UrlHelper(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlHelper" uniqueID="UrlHelper(System.Web.Routing.RequestContext;System.Web.Routing.RouteCollection):System.Void">
				<signature>System.Web.Mvc.UrlHelper.UrlHelper(System.Web.Routing.RequestContext;System.Web.Routing.RouteCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RequestContext" uniqueID="get_RequestContext():System.Web.Routing.RequestContext">
				<signature>System.Web.Mvc.UrlHelper.get_RequestContext():System.Web.Routing.RequestContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RouteCollection" uniqueID="get_RouteCollection():System.Web.Routing.RouteCollection">
				<signature>System.Web.Mvc.UrlHelper.get_RouteCollection():System.Web.Routing.RouteCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_RequestContext" uniqueID="set_RequestContext(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.Mvc.UrlHelper.set_RequestContext(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_RouteCollection" uniqueID="set_RouteCollection(System.Web.Routing.RouteCollection):System.Void">
				<signature>System.Web.Mvc.UrlHelper.set_RouteCollection(System.Web.Routing.RouteCollection):System.Void</signature>
			</method>
		</class>
		<class name="UrlParameter" uniqueID="System.Web.Mvc.UrlParameter">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.Mvc.UrlParameter.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Web.Mvc.UrlParameter.ToString():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UrlParameter" uniqueID="UrlParameter():System.Void">
				<signature>System.Web.Mvc.UrlParameter.UrlParameter():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="Mvc3ToolsUpdateWeb_Default.Controllers">
		<class name="AccountController" uniqueID="Mvc3ToolsUpdateWeb_Default.Controllers.AccountController">
			<method accessibility="Private" methodKind="Static" name="ErrorCodeToString" uniqueID="ErrorCodeToString(System.Web.Security.MembershipCreateStatus):System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.ErrorCodeToString(System.Web.Security.MembershipCreateStatus):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AccountController" uniqueID="AccountController():System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.AccountController():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ChangePassword" uniqueID="ChangePassword():System.Web.Mvc.ActionResult">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.ChangePassword():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ChangePassword" uniqueID="ChangePassword(Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel):System.Web.Mvc.ActionResult">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.ChangePassword(Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ChangePasswordSuccess" uniqueID="ChangePasswordSuccess():System.Web.Mvc.ActionResult">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.ChangePasswordSuccess():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LogOff" uniqueID="LogOff():System.Web.Mvc.ActionResult">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.LogOff():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LogOn" uniqueID="LogOn():System.Web.Mvc.ActionResult">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.LogOn():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LogOn" uniqueID="LogOn(Mvc3ToolsUpdateWeb_Default.Models.LogOnModel;System.String):System.Web.Mvc.ActionResult">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.LogOn(Mvc3ToolsUpdateWeb_Default.Models.LogOnModel;System.String):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MigrateShoppingCart" uniqueID="MigrateShoppingCart(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.MigrateShoppingCart(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Register" uniqueID="Register():System.Web.Mvc.ActionResult">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.Register():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Register" uniqueID="Register(Mvc3ToolsUpdateWeb_Default.Models.RegisterModel):System.Web.Mvc.ActionResult">
				<signature>Mvc3ToolsUpdateWeb_Default.Controllers.AccountController.Register(Mvc3ToolsUpdateWeb_Default.Models.RegisterModel):System.Web.Mvc.ActionResult</signature>
			</method>
		</class>
	</package>
	<package name="Mvc3ToolsUpdateWeb_Default.Models">
		<class name="ChangePasswordModel" uniqueID="Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel">
			<method accessibility="Public" methodKind="Member" name="ChangePasswordModel" uniqueID="ChangePasswordModel():System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel.ChangePasswordModel():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConfirmPassword" uniqueID="get_ConfirmPassword():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel.get_ConfirmPassword():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NewPassword" uniqueID="get_NewPassword():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel.get_NewPassword():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OldPassword" uniqueID="get_OldPassword():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel.get_OldPassword():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ConfirmPassword" uniqueID="set_ConfirmPassword(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel.set_ConfirmPassword(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_NewPassword" uniqueID="set_NewPassword(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel.set_NewPassword(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OldPassword" uniqueID="set_OldPassword(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.ChangePasswordModel.set_OldPassword(System.String):System.Void</signature>
			</method>
		</class>
		<class name="LogOnModel" uniqueID="Mvc3ToolsUpdateWeb_Default.Models.LogOnModel">
			<method accessibility="Public" methodKind="Member" name="LogOnModel" uniqueID="LogOnModel():System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.LogOnModel.LogOnModel():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Password" uniqueID="get_Password():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.LogOnModel.get_Password():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RememberMe" uniqueID="get_RememberMe():System.Boolean">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.LogOnModel.get_RememberMe():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserName" uniqueID="get_UserName():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.LogOnModel.get_UserName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Password" uniqueID="set_Password(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.LogOnModel.set_Password(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RememberMe" uniqueID="set_RememberMe(System.Boolean):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.LogOnModel.set_RememberMe(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UserName" uniqueID="set_UserName(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.LogOnModel.set_UserName(System.String):System.Void</signature>
			</method>
		</class>
		<class name="RegisterModel" uniqueID="Mvc3ToolsUpdateWeb_Default.Models.RegisterModel">
			<method accessibility="Public" methodKind="Member" name="RegisterModel" uniqueID="RegisterModel():System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.RegisterModel():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConfirmPassword" uniqueID="get_ConfirmPassword():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.get_ConfirmPassword():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Email" uniqueID="get_Email():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.get_Email():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Password" uniqueID="get_Password():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.get_Password():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserName" uniqueID="get_UserName():System.String">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.get_UserName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ConfirmPassword" uniqueID="set_ConfirmPassword(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.set_ConfirmPassword(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Email" uniqueID="set_Email(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.set_Email(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Password" uniqueID="set_Password(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.set_Password(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UserName" uniqueID="set_UserName(System.String):System.Void">
				<signature>Mvc3ToolsUpdateWeb_Default.Models.RegisterModel.set_UserName(System.String):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Linq">
		<class name="IQueryable" uniqueID="System.Linq.IQueryable">
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Linq.IQueryable.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Provider" uniqueID="get_Provider():System.Linq.IQueryProvider">
				<signature>System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider</signature>
			</method>
		</class>
		<class name="Enumerable" uniqueID="System.Linq.Enumerable">
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;):System.Decimal">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Double&gt;):System.Double">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Double&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Int32&gt;):System.Double">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Int32&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Int64&gt;):System.Double">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Int64&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Collections.Generic.IEnumerable&lt;System.Single&gt;):System.Single">
				<signature>System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable&lt;System.Single&gt;):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;):System.Decimal">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Double&gt;):System.Double">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Double&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Int32&gt;):System.Int32">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Int32&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Int64&gt;):System.Int64">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Int64&gt;):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Int64&gt;">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Int64&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Max" uniqueID="Max(System.Collections.Generic.IEnumerable&lt;System.Single&gt;):System.Single">
				<signature>System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable&lt;System.Single&gt;):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;):System.Decimal">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Double&gt;):System.Double">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Double&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Int32&gt;):System.Int32">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Int32&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Int64&gt;):System.Int64">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Int64&gt;):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Int64&gt;">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Int64&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Min" uniqueID="Min(System.Collections.Generic.IEnumerable&lt;System.Single&gt;):System.Single">
				<signature>System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable&lt;System.Single&gt;):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Range" uniqueID="Range(System.Int32;System.Int32):System.Collections.Generic.IEnumerable&lt;System.Int32&gt;">
				<signature>System.Linq.Enumerable.Range(System.Int32;System.Int32):System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RangeIterator" uniqueID="RangeIterator(System.Int32;System.Int32):System.Collections.Generic.IEnumerable&lt;System.Int32&gt;">
				<signature>System.Linq.Enumerable.RangeIterator(System.Int32;System.Int32):System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Single&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="Single&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;;System.Func&lt;MvcMusicStore.Models.Artist;System.Boolean&gt;):MvcMusicStore.Models.Artist">
				<signature>System.Linq.Enumerable.Single&lt;MvcMusicStore.Models.Artist&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Artist&gt;;System.Func&lt;MvcMusicStore.Models.Artist;System.Boolean&gt;):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Single&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Single&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;;System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;):MvcMusicStore.Models.Genre">
				<signature>System.Linq.Enumerable.Single&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;;System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;):System.Decimal">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Decimal&gt;):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Double&gt;):System.Double">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Double&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Int32&gt;):System.Int32">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Int32&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Int64&gt;):System.Int64">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Int64&gt;):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Int64&gt;">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Int64&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Collections.Generic.IEnumerable&lt;System.Single&gt;):System.Single">
				<signature>System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable&lt;System.Single&gt;):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToList&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ToList&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Linq.Enumerable.ToList&lt;MvcMusicStore.Models.Album&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Album&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToList&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ToList&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Linq.Enumerable.ToList&lt;MvcMusicStore.Models.Cart&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Cart&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToList&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ToList&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Linq.Enumerable.ToList&lt;MvcMusicStore.Models.Genre&gt;(System.Collections.Generic.IEnumerable&lt;MvcMusicStore.Models.Genre&gt;):System.Collections.Generic.List&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="Queryable" uniqueID="System.Linq.Queryable">
			<method accessibility="Public" methodKind="Static" name="Any&lt;MvcMusicStore.Models.Order&gt;" uniqueID="Any&lt;MvcMusicStore.Models.Order&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Order&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;&gt;):System.Boolean">
				<signature>System.Linq.Queryable.Any&lt;MvcMusicStore.Models.Order&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Order&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AsQueryable" uniqueID="AsQueryable(System.Collections.IEnumerable):System.Linq.IQueryable">
				<signature>System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable):System.Linq.IQueryable</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Decimal&gt;):System.Decimal">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Decimal&gt;):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Double&gt;):System.Double">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Double&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Int32&gt;):System.Double">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Int32&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Int64&gt;):System.Double">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Int64&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Average" uniqueID="Average(System.Linq.IQueryable&lt;System.Single&gt;):System.Single">
				<signature>System.Linq.Queryable.Average(System.Linq.IQueryable&lt;System.Single&gt;):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OrderByDescending&lt;MvcMusicStore.Models.Album,System.Int32&gt;" uniqueID="OrderByDescending&lt;MvcMusicStore.Models.Album,System.Int32&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;&gt;):System.Linq.IOrderedQueryable&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Linq.Queryable.OrderByDescending&lt;MvcMusicStore.Models.Album,System.Int32&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;&gt;):System.Linq.IOrderedQueryable&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Select&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;" uniqueID="Select&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;&gt;):System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;">
				<signature>System.Linq.Queryable.Select&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;&gt;):System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Select&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;" uniqueID="Select&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;&gt;):System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;">
				<signature>System.Linq.Queryable.Select&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;&gt;):System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Single&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Single&lt;MvcMusicStore.Models.Album&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;&gt;):MvcMusicStore.Models.Album">
				<signature>System.Linq.Queryable.Single&lt;MvcMusicStore.Models.Album&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;&gt;):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Single&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Single&lt;MvcMusicStore.Models.Cart&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;):MvcMusicStore.Models.Cart">
				<signature>System.Linq.Queryable.Single&lt;MvcMusicStore.Models.Cart&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Single&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="Single&lt;MvcMusicStore.Models.Genre&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Genre&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;&gt;):MvcMusicStore.Models.Genre">
				<signature>System.Linq.Queryable.Single&lt;MvcMusicStore.Models.Genre&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Genre&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;&gt;):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SingleOrDefault&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="SingleOrDefault&lt;MvcMusicStore.Models.Cart&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;):MvcMusicStore.Models.Cart">
				<signature>System.Linq.Queryable.SingleOrDefault&lt;MvcMusicStore.Models.Cart&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Decimal&gt;):System.Decimal">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Decimal&gt;):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Double&gt;):System.Double">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Double&gt;):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Int32&gt;):System.Int32">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Int32&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Int64&gt;):System.Int64">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Int64&gt;):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;):System.Nullable&lt;System.Decimal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;):System.Nullable&lt;System.Double&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Int64&gt;">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;):System.Nullable&lt;System.Int64&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;):System.Nullable&lt;System.Single&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sum" uniqueID="Sum(System.Linq.IQueryable&lt;System.Single&gt;):System.Single">
				<signature>System.Linq.Queryable.Sum(System.Linq.IQueryable&lt;System.Single&gt;):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Take&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Take&lt;MvcMusicStore.Models.Album&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Int32):System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Linq.Queryable.Take&lt;MvcMusicStore.Models.Album&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Int32):System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Where&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="Where&lt;MvcMusicStore.Models.Cart&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;):System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Linq.Queryable.Where&lt;MvcMusicStore.Models.Cart&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;):System.Linq.IQueryable&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
	</package>
	<package name="MvcMusicStore.Controllers">
		<class name="CheckoutController" uniqueID="MvcMusicStore.Controllers.CheckoutController">
			<method accessibility="Public" methodKind="Member" name="AddressAndPayment" uniqueID="AddressAndPayment():System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.CheckoutController.AddressAndPayment():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddressAndPayment" uniqueID="AddressAndPayment(System.Web.Mvc.FormCollection):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.CheckoutController.AddressAndPayment(System.Web.Mvc.FormCollection):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CheckoutController" uniqueID="CheckoutController():System.Void">
				<signature>MvcMusicStore.Controllers.CheckoutController.CheckoutController():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Complete" uniqueID="Complete(System.Int32):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.CheckoutController.Complete(System.Int32):System.Web.Mvc.ActionResult</signature>
			</method>
		</class>
		<class name="HomeController" uniqueID="MvcMusicStore.Controllers.HomeController">
			<method accessibility="Private" methodKind="Member" name="GetTopSellingAlbums" uniqueID="GetTopSellingAlbums(System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;">
				<signature>MvcMusicStore.Controllers.HomeController.GetTopSellingAlbums(System.Int32):System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HomeController" uniqueID="HomeController():System.Void">
				<signature>MvcMusicStore.Controllers.HomeController.HomeController():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Index" uniqueID="Index():System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.HomeController.Index():System.Web.Mvc.ActionResult</signature>
			</method>
		</class>
		<class name="ShoppingCartController+&lt;&gt;c__DisplayClass4" uniqueID="MvcMusicStore.Controllers.ShoppingCartController+&lt;&gt;c__DisplayClass4">
			<method accessibility="Public" methodKind="Member" name="ShoppingCartController+&lt;&gt;c__DisplayClass4" uniqueID="ShoppingCartController+&lt;&gt;c__DisplayClass4():System.Void">
				<signature>MvcMusicStore.Controllers.ShoppingCartController+&lt;&gt;c__DisplayClass4.ShoppingCartController+&lt;&gt;c__DisplayClass4():System.Void</signature>
			</method>
		</class>
		<class name="CheckoutController+&lt;&gt;c__DisplayClass0" uniqueID="MvcMusicStore.Controllers.CheckoutController+&lt;&gt;c__DisplayClass0">
			<method accessibility="Public" methodKind="Member" name="CheckoutController+&lt;&gt;c__DisplayClass0" uniqueID="CheckoutController+&lt;&gt;c__DisplayClass0():System.Void">
				<signature>MvcMusicStore.Controllers.CheckoutController+&lt;&gt;c__DisplayClass0.CheckoutController+&lt;&gt;c__DisplayClass0():System.Void</signature>
			</method>
		</class>
		<class name="StoreManagerController" uniqueID="MvcMusicStore.Controllers.StoreManagerController">
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreManagerController.Create():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(MvcMusicStore.Models.Album):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreManagerController.Create(MvcMusicStore.Models.Album):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Delete" uniqueID="Delete(System.Int32):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreManagerController.Delete(System.Int32):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DeleteConfirmed" uniqueID="DeleteConfirmed(System.Int32):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreManagerController.DeleteConfirmed(System.Int32):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Details" uniqueID="Details(System.Int32):System.Web.Mvc.ViewResult">
				<signature>MvcMusicStore.Controllers.StoreManagerController.Details(System.Int32):System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>MvcMusicStore.Controllers.StoreManagerController.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Edit" uniqueID="Edit(MvcMusicStore.Models.Album):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreManagerController.Edit(MvcMusicStore.Models.Album):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Edit" uniqueID="Edit(System.Int32):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreManagerController.Edit(System.Int32):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Index" uniqueID="Index():System.Web.Mvc.ViewResult">
				<signature>MvcMusicStore.Controllers.StoreManagerController.Index():System.Web.Mvc.ViewResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StoreManagerController" uniqueID="StoreManagerController():System.Void">
				<signature>MvcMusicStore.Controllers.StoreManagerController.StoreManagerController():System.Void</signature>
			</method>
		</class>
		<class name="ShoppingCartController" uniqueID="MvcMusicStore.Controllers.ShoppingCartController">
			<method accessibility="Public" methodKind="Member" name="AddToCart" uniqueID="AddToCart(System.Int32):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.ShoppingCartController.AddToCart(System.Int32):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CartSummary" uniqueID="CartSummary():System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.ShoppingCartController.CartSummary():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Index" uniqueID="Index():System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.ShoppingCartController.Index():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveFromCart" uniqueID="RemoveFromCart(System.Int32):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.ShoppingCartController.RemoveFromCart(System.Int32):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ShoppingCartController" uniqueID="ShoppingCartController():System.Void">
				<signature>MvcMusicStore.Controllers.ShoppingCartController.ShoppingCartController():System.Void</signature>
			</method>
		</class>
		<class name="ShoppingCartController+&lt;&gt;c__DisplayClass1" uniqueID="MvcMusicStore.Controllers.ShoppingCartController+&lt;&gt;c__DisplayClass1">
			<method accessibility="Public" methodKind="Member" name="ShoppingCartController+&lt;&gt;c__DisplayClass1" uniqueID="ShoppingCartController+&lt;&gt;c__DisplayClass1():System.Void">
				<signature>MvcMusicStore.Controllers.ShoppingCartController+&lt;&gt;c__DisplayClass1.ShoppingCartController+&lt;&gt;c__DisplayClass1():System.Void</signature>
			</method>
		</class>
		<class name="StoreController" uniqueID="MvcMusicStore.Controllers.StoreController">
			<method accessibility="Public" methodKind="Member" name="Browse" uniqueID="Browse(System.String):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreController.Browse(System.String):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Details" uniqueID="Details(System.Int32):System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreController.Details(System.Int32):System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GenreMenu" uniqueID="GenreMenu():System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreController.GenreMenu():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Index" uniqueID="Index():System.Web.Mvc.ActionResult">
				<signature>MvcMusicStore.Controllers.StoreController.Index():System.Web.Mvc.ActionResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StoreController" uniqueID="StoreController():System.Void">
				<signature>MvcMusicStore.Controllers.StoreController.StoreController():System.Void</signature>
			</method>
		</class>
		<class name="StoreController+&lt;&gt;c__DisplayClass0" uniqueID="MvcMusicStore.Controllers.StoreController+&lt;&gt;c__DisplayClass0">
			<method accessibility="Public" methodKind="Member" name="StoreController+&lt;&gt;c__DisplayClass0" uniqueID="StoreController+&lt;&gt;c__DisplayClass0():System.Void">
				<signature>MvcMusicStore.Controllers.StoreController+&lt;&gt;c__DisplayClass0.StoreController+&lt;&gt;c__DisplayClass0():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.ComponentModel">
		<class name="IComponent" uniqueID="System.ComponentModel.IComponent">
			<method accessibility="Public" methodKind="Member" name="add_Disposed" uniqueID="add_Disposed(System.EventHandler):System.Void">
				<signature>System.ComponentModel.IComponent.add_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Site" uniqueID="get_Site():System.ComponentModel.ISite">
				<signature>System.ComponentModel.IComponent.get_Site():System.ComponentModel.ISite</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Disposed" uniqueID="remove_Disposed(System.EventHandler):System.Void">
				<signature>System.ComponentModel.IComponent.remove_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Site" uniqueID="set_Site(System.ComponentModel.ISite):System.Void">
				<signature>System.ComponentModel.IComponent.set_Site(System.ComponentModel.ISite):System.Void</signature>
			</method>
		</class>
		<class name="INotifyPropertyChanged" uniqueID="System.ComponentModel.INotifyPropertyChanged">
			<method accessibility="Public" methodKind="Member" name="add_PropertyChanged" uniqueID="add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PropertyChanged" uniqueID="remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="IListSource" uniqueID="System.ComponentModel.IListSource">
			<method accessibility="Public" methodKind="Member" name="GetList" uniqueID="GetList():System.Collections.IList">
				<signature>System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContainsListCollection" uniqueID="get_ContainsListCollection():System.Boolean">
				<signature>System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
		</class>
	</package>
	<package name="MvcMusicStore.Models">
		<class name="Album" uniqueID="MvcMusicStore.Models.Album">
			<method accessibility="Public" methodKind="Member" name="Album" uniqueID="Album():System.Void">
				<signature>MvcMusicStore.Models.Album.Album():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AlbumArtUrl" uniqueID="get_AlbumArtUrl():System.String">
				<signature>MvcMusicStore.Models.Album.get_AlbumArtUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AlbumId" uniqueID="get_AlbumId():System.Int32">
				<signature>MvcMusicStore.Models.Album.get_AlbumId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Artist" uniqueID="get_Artist():MvcMusicStore.Models.Artist">
				<signature>MvcMusicStore.Models.Album.get_Artist():MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ArtistId" uniqueID="get_ArtistId():System.Int32">
				<signature>MvcMusicStore.Models.Album.get_ArtistId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Genre" uniqueID="get_Genre():MvcMusicStore.Models.Genre">
				<signature>MvcMusicStore.Models.Album.get_Genre():MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenreId" uniqueID="get_GenreId():System.Int32">
				<signature>MvcMusicStore.Models.Album.get_GenreId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OrderDetails" uniqueID="get_OrderDetails():System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>MvcMusicStore.Models.Album.get_OrderDetails():System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Price" uniqueID="get_Price():System.Decimal">
				<signature>MvcMusicStore.Models.Album.get_Price():System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Title" uniqueID="get_Title():System.String">
				<signature>MvcMusicStore.Models.Album.get_Title():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AlbumArtUrl" uniqueID="set_AlbumArtUrl(System.String):System.Void">
				<signature>MvcMusicStore.Models.Album.set_AlbumArtUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AlbumId" uniqueID="set_AlbumId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Album.set_AlbumId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Artist" uniqueID="set_Artist(MvcMusicStore.Models.Artist):System.Void">
				<signature>MvcMusicStore.Models.Album.set_Artist(MvcMusicStore.Models.Artist):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ArtistId" uniqueID="set_ArtistId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Album.set_ArtistId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Genre" uniqueID="set_Genre(MvcMusicStore.Models.Genre):System.Void">
				<signature>MvcMusicStore.Models.Album.set_Genre(MvcMusicStore.Models.Genre):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_GenreId" uniqueID="set_GenreId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Album.set_GenreId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OrderDetails" uniqueID="set_OrderDetails(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>MvcMusicStore.Models.Album.set_OrderDetails(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Price" uniqueID="set_Price(System.Decimal):System.Void">
				<signature>MvcMusicStore.Models.Album.set_Price(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Title" uniqueID="set_Title(System.String):System.Void">
				<signature>MvcMusicStore.Models.Album.set_Title(System.String):System.Void</signature>
			</method>
		</class>
		<class name="SampleData" uniqueID="MvcMusicStore.Models.SampleData">
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__199" uniqueID="&lt;Seed&gt;b__199(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__199(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__19a" uniqueID="&lt;Seed&gt;b__19a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__19a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__19b" uniqueID="&lt;Seed&gt;b__19b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__19b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__19c" uniqueID="&lt;Seed&gt;b__19c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__19c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__19d" uniqueID="&lt;Seed&gt;b__19d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__19d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__19e" uniqueID="&lt;Seed&gt;b__19e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__19e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__19f" uniqueID="&lt;Seed&gt;b__19f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__19f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a0" uniqueID="&lt;Seed&gt;b__1a0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a1" uniqueID="&lt;Seed&gt;b__1a1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a2" uniqueID="&lt;Seed&gt;b__1a2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a3" uniqueID="&lt;Seed&gt;b__1a3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a4" uniqueID="&lt;Seed&gt;b__1a4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a5" uniqueID="&lt;Seed&gt;b__1a5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a6" uniqueID="&lt;Seed&gt;b__1a6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a7" uniqueID="&lt;Seed&gt;b__1a7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a8" uniqueID="&lt;Seed&gt;b__1a8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1a9" uniqueID="&lt;Seed&gt;b__1a9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1a9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1aa" uniqueID="&lt;Seed&gt;b__1aa(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1aa(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ab" uniqueID="&lt;Seed&gt;b__1ab(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ab(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ac" uniqueID="&lt;Seed&gt;b__1ac(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ac(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ad" uniqueID="&lt;Seed&gt;b__1ad(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ad(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ae" uniqueID="&lt;Seed&gt;b__1ae(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ae(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1af" uniqueID="&lt;Seed&gt;b__1af(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1af(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b0" uniqueID="&lt;Seed&gt;b__1b0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b1" uniqueID="&lt;Seed&gt;b__1b1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b2" uniqueID="&lt;Seed&gt;b__1b2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b3" uniqueID="&lt;Seed&gt;b__1b3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b4" uniqueID="&lt;Seed&gt;b__1b4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b5" uniqueID="&lt;Seed&gt;b__1b5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b6" uniqueID="&lt;Seed&gt;b__1b6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b7" uniqueID="&lt;Seed&gt;b__1b7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b8" uniqueID="&lt;Seed&gt;b__1b8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1b9" uniqueID="&lt;Seed&gt;b__1b9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1b9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ba" uniqueID="&lt;Seed&gt;b__1ba(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ba(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1bb" uniqueID="&lt;Seed&gt;b__1bb(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1bb(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1bc" uniqueID="&lt;Seed&gt;b__1bc(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1bc(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1bd" uniqueID="&lt;Seed&gt;b__1bd(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1bd(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1be" uniqueID="&lt;Seed&gt;b__1be(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1be(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1bf" uniqueID="&lt;Seed&gt;b__1bf(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1bf(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c0" uniqueID="&lt;Seed&gt;b__1c0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c1" uniqueID="&lt;Seed&gt;b__1c1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c2" uniqueID="&lt;Seed&gt;b__1c2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c3" uniqueID="&lt;Seed&gt;b__1c3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c4" uniqueID="&lt;Seed&gt;b__1c4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c5" uniqueID="&lt;Seed&gt;b__1c5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c6" uniqueID="&lt;Seed&gt;b__1c6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c7" uniqueID="&lt;Seed&gt;b__1c7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c8" uniqueID="&lt;Seed&gt;b__1c8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1c9" uniqueID="&lt;Seed&gt;b__1c9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1c9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ca" uniqueID="&lt;Seed&gt;b__1ca(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ca(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1cb" uniqueID="&lt;Seed&gt;b__1cb(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1cb(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1cc" uniqueID="&lt;Seed&gt;b__1cc(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1cc(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1cd" uniqueID="&lt;Seed&gt;b__1cd(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1cd(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ce" uniqueID="&lt;Seed&gt;b__1ce(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ce(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1cf" uniqueID="&lt;Seed&gt;b__1cf(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1cf(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d0" uniqueID="&lt;Seed&gt;b__1d0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d1" uniqueID="&lt;Seed&gt;b__1d1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d2" uniqueID="&lt;Seed&gt;b__1d2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d3" uniqueID="&lt;Seed&gt;b__1d3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d4" uniqueID="&lt;Seed&gt;b__1d4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d5" uniqueID="&lt;Seed&gt;b__1d5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d6" uniqueID="&lt;Seed&gt;b__1d6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d7" uniqueID="&lt;Seed&gt;b__1d7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d8" uniqueID="&lt;Seed&gt;b__1d8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1d9" uniqueID="&lt;Seed&gt;b__1d9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1d9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1da" uniqueID="&lt;Seed&gt;b__1da(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1da(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1db" uniqueID="&lt;Seed&gt;b__1db(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1db(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1dc" uniqueID="&lt;Seed&gt;b__1dc(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1dc(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1dd" uniqueID="&lt;Seed&gt;b__1dd(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1dd(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1de" uniqueID="&lt;Seed&gt;b__1de(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1de(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1df" uniqueID="&lt;Seed&gt;b__1df(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1df(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e0" uniqueID="&lt;Seed&gt;b__1e0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e1" uniqueID="&lt;Seed&gt;b__1e1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e2" uniqueID="&lt;Seed&gt;b__1e2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e3" uniqueID="&lt;Seed&gt;b__1e3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e4" uniqueID="&lt;Seed&gt;b__1e4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e5" uniqueID="&lt;Seed&gt;b__1e5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e6" uniqueID="&lt;Seed&gt;b__1e6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e7" uniqueID="&lt;Seed&gt;b__1e7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e8" uniqueID="&lt;Seed&gt;b__1e8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1e9" uniqueID="&lt;Seed&gt;b__1e9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1e9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ea" uniqueID="&lt;Seed&gt;b__1ea(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ea(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1eb" uniqueID="&lt;Seed&gt;b__1eb(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1eb(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ec" uniqueID="&lt;Seed&gt;b__1ec(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ec(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ed" uniqueID="&lt;Seed&gt;b__1ed(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ed(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ee" uniqueID="&lt;Seed&gt;b__1ee(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ee(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ef" uniqueID="&lt;Seed&gt;b__1ef(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ef(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f0" uniqueID="&lt;Seed&gt;b__1f0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f1" uniqueID="&lt;Seed&gt;b__1f1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f2" uniqueID="&lt;Seed&gt;b__1f2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f3" uniqueID="&lt;Seed&gt;b__1f3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f4" uniqueID="&lt;Seed&gt;b__1f4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f5" uniqueID="&lt;Seed&gt;b__1f5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f6" uniqueID="&lt;Seed&gt;b__1f6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f7" uniqueID="&lt;Seed&gt;b__1f7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f8" uniqueID="&lt;Seed&gt;b__1f8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1f9" uniqueID="&lt;Seed&gt;b__1f9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1f9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1fa" uniqueID="&lt;Seed&gt;b__1fa(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1fa(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1fb" uniqueID="&lt;Seed&gt;b__1fb(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1fb(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1fc" uniqueID="&lt;Seed&gt;b__1fc(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1fc(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1fd" uniqueID="&lt;Seed&gt;b__1fd(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1fd(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1fe" uniqueID="&lt;Seed&gt;b__1fe(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1fe(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__1ff" uniqueID="&lt;Seed&gt;b__1ff(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__1ff(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__200" uniqueID="&lt;Seed&gt;b__200(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__200(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__201" uniqueID="&lt;Seed&gt;b__201(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__201(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__202" uniqueID="&lt;Seed&gt;b__202(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__202(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__203" uniqueID="&lt;Seed&gt;b__203(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__203(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__204" uniqueID="&lt;Seed&gt;b__204(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__204(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__205" uniqueID="&lt;Seed&gt;b__205(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__205(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__206" uniqueID="&lt;Seed&gt;b__206(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__206(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__207" uniqueID="&lt;Seed&gt;b__207(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__207(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__208" uniqueID="&lt;Seed&gt;b__208(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__208(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__209" uniqueID="&lt;Seed&gt;b__209(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__209(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__20a" uniqueID="&lt;Seed&gt;b__20a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__20a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__20b" uniqueID="&lt;Seed&gt;b__20b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__20b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__20c" uniqueID="&lt;Seed&gt;b__20c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__20c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__20d" uniqueID="&lt;Seed&gt;b__20d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__20d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__20e" uniqueID="&lt;Seed&gt;b__20e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__20e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__20f" uniqueID="&lt;Seed&gt;b__20f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__20f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__210" uniqueID="&lt;Seed&gt;b__210(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__210(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__211" uniqueID="&lt;Seed&gt;b__211(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__211(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__212" uniqueID="&lt;Seed&gt;b__212(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__212(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__213" uniqueID="&lt;Seed&gt;b__213(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__213(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__214" uniqueID="&lt;Seed&gt;b__214(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__214(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__215" uniqueID="&lt;Seed&gt;b__215(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__215(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__216" uniqueID="&lt;Seed&gt;b__216(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__216(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__217" uniqueID="&lt;Seed&gt;b__217(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__217(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__218" uniqueID="&lt;Seed&gt;b__218(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__218(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__219" uniqueID="&lt;Seed&gt;b__219(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__219(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__21a" uniqueID="&lt;Seed&gt;b__21a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__21a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__21b" uniqueID="&lt;Seed&gt;b__21b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__21b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__21c" uniqueID="&lt;Seed&gt;b__21c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__21c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__21d" uniqueID="&lt;Seed&gt;b__21d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__21d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__21e" uniqueID="&lt;Seed&gt;b__21e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__21e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__21f" uniqueID="&lt;Seed&gt;b__21f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__21f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__220" uniqueID="&lt;Seed&gt;b__220(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__220(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__221" uniqueID="&lt;Seed&gt;b__221(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__221(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__222" uniqueID="&lt;Seed&gt;b__222(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__222(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__223" uniqueID="&lt;Seed&gt;b__223(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__223(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__224" uniqueID="&lt;Seed&gt;b__224(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__224(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__225" uniqueID="&lt;Seed&gt;b__225(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__225(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__226" uniqueID="&lt;Seed&gt;b__226(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__226(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__227" uniqueID="&lt;Seed&gt;b__227(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__227(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__228" uniqueID="&lt;Seed&gt;b__228(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__228(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__229" uniqueID="&lt;Seed&gt;b__229(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__229(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__22a" uniqueID="&lt;Seed&gt;b__22a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__22a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__22b" uniqueID="&lt;Seed&gt;b__22b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__22b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__22c" uniqueID="&lt;Seed&gt;b__22c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__22c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__22d" uniqueID="&lt;Seed&gt;b__22d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__22d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__22e" uniqueID="&lt;Seed&gt;b__22e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__22e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__22f" uniqueID="&lt;Seed&gt;b__22f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__22f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__230" uniqueID="&lt;Seed&gt;b__230(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__230(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__231" uniqueID="&lt;Seed&gt;b__231(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__231(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__232" uniqueID="&lt;Seed&gt;b__232(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__232(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__233" uniqueID="&lt;Seed&gt;b__233(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__233(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__234" uniqueID="&lt;Seed&gt;b__234(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__234(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__235" uniqueID="&lt;Seed&gt;b__235(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__235(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__236" uniqueID="&lt;Seed&gt;b__236(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__236(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__237" uniqueID="&lt;Seed&gt;b__237(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__237(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__238" uniqueID="&lt;Seed&gt;b__238(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__238(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__239" uniqueID="&lt;Seed&gt;b__239(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__239(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__23a" uniqueID="&lt;Seed&gt;b__23a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__23a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__23b" uniqueID="&lt;Seed&gt;b__23b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__23b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__23c" uniqueID="&lt;Seed&gt;b__23c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__23c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__23d" uniqueID="&lt;Seed&gt;b__23d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__23d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__23e" uniqueID="&lt;Seed&gt;b__23e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__23e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__23f" uniqueID="&lt;Seed&gt;b__23f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__23f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__240" uniqueID="&lt;Seed&gt;b__240(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__240(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__241" uniqueID="&lt;Seed&gt;b__241(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__241(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__242" uniqueID="&lt;Seed&gt;b__242(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__242(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__243" uniqueID="&lt;Seed&gt;b__243(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__243(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__244" uniqueID="&lt;Seed&gt;b__244(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__244(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__245" uniqueID="&lt;Seed&gt;b__245(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__245(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__246" uniqueID="&lt;Seed&gt;b__246(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__246(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__247" uniqueID="&lt;Seed&gt;b__247(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__247(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__248" uniqueID="&lt;Seed&gt;b__248(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__248(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__249" uniqueID="&lt;Seed&gt;b__249(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__249(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__24a" uniqueID="&lt;Seed&gt;b__24a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__24a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__24b" uniqueID="&lt;Seed&gt;b__24b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__24b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__24c" uniqueID="&lt;Seed&gt;b__24c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__24c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__24d" uniqueID="&lt;Seed&gt;b__24d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__24d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__24e" uniqueID="&lt;Seed&gt;b__24e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__24e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__24f" uniqueID="&lt;Seed&gt;b__24f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__24f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__250" uniqueID="&lt;Seed&gt;b__250(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__250(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__251" uniqueID="&lt;Seed&gt;b__251(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__251(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__252" uniqueID="&lt;Seed&gt;b__252(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__252(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__253" uniqueID="&lt;Seed&gt;b__253(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__253(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__254" uniqueID="&lt;Seed&gt;b__254(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__254(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__255" uniqueID="&lt;Seed&gt;b__255(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__255(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__256" uniqueID="&lt;Seed&gt;b__256(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__256(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__257" uniqueID="&lt;Seed&gt;b__257(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__257(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__258" uniqueID="&lt;Seed&gt;b__258(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__258(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__259" uniqueID="&lt;Seed&gt;b__259(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__259(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__25a" uniqueID="&lt;Seed&gt;b__25a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__25a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__25b" uniqueID="&lt;Seed&gt;b__25b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__25b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__25c" uniqueID="&lt;Seed&gt;b__25c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__25c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__25d" uniqueID="&lt;Seed&gt;b__25d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__25d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__25e" uniqueID="&lt;Seed&gt;b__25e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__25e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__25f" uniqueID="&lt;Seed&gt;b__25f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__25f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__260" uniqueID="&lt;Seed&gt;b__260(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__260(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__261" uniqueID="&lt;Seed&gt;b__261(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__261(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__262" uniqueID="&lt;Seed&gt;b__262(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__262(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__263" uniqueID="&lt;Seed&gt;b__263(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__263(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__264" uniqueID="&lt;Seed&gt;b__264(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__264(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__265" uniqueID="&lt;Seed&gt;b__265(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__265(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__266" uniqueID="&lt;Seed&gt;b__266(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__266(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__267" uniqueID="&lt;Seed&gt;b__267(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__267(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__268" uniqueID="&lt;Seed&gt;b__268(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__268(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__269" uniqueID="&lt;Seed&gt;b__269(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__269(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__26a" uniqueID="&lt;Seed&gt;b__26a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__26a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__26b" uniqueID="&lt;Seed&gt;b__26b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__26b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__26c" uniqueID="&lt;Seed&gt;b__26c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__26c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__26d" uniqueID="&lt;Seed&gt;b__26d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__26d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__26e" uniqueID="&lt;Seed&gt;b__26e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__26e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__26f" uniqueID="&lt;Seed&gt;b__26f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__26f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__270" uniqueID="&lt;Seed&gt;b__270(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__270(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__271" uniqueID="&lt;Seed&gt;b__271(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__271(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__272" uniqueID="&lt;Seed&gt;b__272(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__272(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__273" uniqueID="&lt;Seed&gt;b__273(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__273(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__274" uniqueID="&lt;Seed&gt;b__274(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__274(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__275" uniqueID="&lt;Seed&gt;b__275(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__275(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__276" uniqueID="&lt;Seed&gt;b__276(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__276(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__277" uniqueID="&lt;Seed&gt;b__277(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__277(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__278" uniqueID="&lt;Seed&gt;b__278(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__278(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__279" uniqueID="&lt;Seed&gt;b__279(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__279(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__27a" uniqueID="&lt;Seed&gt;b__27a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__27a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__27b" uniqueID="&lt;Seed&gt;b__27b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__27b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__27c" uniqueID="&lt;Seed&gt;b__27c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__27c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__27d" uniqueID="&lt;Seed&gt;b__27d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__27d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__27e" uniqueID="&lt;Seed&gt;b__27e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__27e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__27f" uniqueID="&lt;Seed&gt;b__27f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__27f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__280" uniqueID="&lt;Seed&gt;b__280(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__280(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__281" uniqueID="&lt;Seed&gt;b__281(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__281(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__282" uniqueID="&lt;Seed&gt;b__282(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__282(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__283" uniqueID="&lt;Seed&gt;b__283(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__283(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__284" uniqueID="&lt;Seed&gt;b__284(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__284(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__285" uniqueID="&lt;Seed&gt;b__285(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__285(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__286" uniqueID="&lt;Seed&gt;b__286(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__286(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__287" uniqueID="&lt;Seed&gt;b__287(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__287(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__288" uniqueID="&lt;Seed&gt;b__288(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__288(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__289" uniqueID="&lt;Seed&gt;b__289(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__289(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__28a" uniqueID="&lt;Seed&gt;b__28a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__28a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__28b" uniqueID="&lt;Seed&gt;b__28b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__28b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__28c" uniqueID="&lt;Seed&gt;b__28c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__28c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__28d" uniqueID="&lt;Seed&gt;b__28d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__28d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__28e" uniqueID="&lt;Seed&gt;b__28e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__28e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__28f" uniqueID="&lt;Seed&gt;b__28f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__28f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__290" uniqueID="&lt;Seed&gt;b__290(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__290(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__291" uniqueID="&lt;Seed&gt;b__291(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__291(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__292" uniqueID="&lt;Seed&gt;b__292(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__292(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__293" uniqueID="&lt;Seed&gt;b__293(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__293(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__294" uniqueID="&lt;Seed&gt;b__294(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__294(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__295" uniqueID="&lt;Seed&gt;b__295(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__295(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__296" uniqueID="&lt;Seed&gt;b__296(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__296(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__297" uniqueID="&lt;Seed&gt;b__297(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__297(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__298" uniqueID="&lt;Seed&gt;b__298(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__298(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__299" uniqueID="&lt;Seed&gt;b__299(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__299(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__29a" uniqueID="&lt;Seed&gt;b__29a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__29a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__29b" uniqueID="&lt;Seed&gt;b__29b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__29b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__29c" uniqueID="&lt;Seed&gt;b__29c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__29c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__29d" uniqueID="&lt;Seed&gt;b__29d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__29d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__29e" uniqueID="&lt;Seed&gt;b__29e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__29e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__29f" uniqueID="&lt;Seed&gt;b__29f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__29f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a0" uniqueID="&lt;Seed&gt;b__2a0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a1" uniqueID="&lt;Seed&gt;b__2a1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a2" uniqueID="&lt;Seed&gt;b__2a2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a3" uniqueID="&lt;Seed&gt;b__2a3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a4" uniqueID="&lt;Seed&gt;b__2a4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a5" uniqueID="&lt;Seed&gt;b__2a5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a6" uniqueID="&lt;Seed&gt;b__2a6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a7" uniqueID="&lt;Seed&gt;b__2a7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a8" uniqueID="&lt;Seed&gt;b__2a8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2a9" uniqueID="&lt;Seed&gt;b__2a9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2a9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2aa" uniqueID="&lt;Seed&gt;b__2aa(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2aa(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ab" uniqueID="&lt;Seed&gt;b__2ab(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ab(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ac" uniqueID="&lt;Seed&gt;b__2ac(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ac(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ad" uniqueID="&lt;Seed&gt;b__2ad(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ad(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ae" uniqueID="&lt;Seed&gt;b__2ae(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ae(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2af" uniqueID="&lt;Seed&gt;b__2af(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2af(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b0" uniqueID="&lt;Seed&gt;b__2b0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b1" uniqueID="&lt;Seed&gt;b__2b1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b2" uniqueID="&lt;Seed&gt;b__2b2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b3" uniqueID="&lt;Seed&gt;b__2b3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b4" uniqueID="&lt;Seed&gt;b__2b4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b5" uniqueID="&lt;Seed&gt;b__2b5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b6" uniqueID="&lt;Seed&gt;b__2b6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b7" uniqueID="&lt;Seed&gt;b__2b7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b8" uniqueID="&lt;Seed&gt;b__2b8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2b9" uniqueID="&lt;Seed&gt;b__2b9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2b9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ba" uniqueID="&lt;Seed&gt;b__2ba(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ba(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2bb" uniqueID="&lt;Seed&gt;b__2bb(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2bb(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2bc" uniqueID="&lt;Seed&gt;b__2bc(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2bc(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2bd" uniqueID="&lt;Seed&gt;b__2bd(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2bd(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2be" uniqueID="&lt;Seed&gt;b__2be(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2be(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2bf" uniqueID="&lt;Seed&gt;b__2bf(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2bf(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c0" uniqueID="&lt;Seed&gt;b__2c0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c1" uniqueID="&lt;Seed&gt;b__2c1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c2" uniqueID="&lt;Seed&gt;b__2c2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c3" uniqueID="&lt;Seed&gt;b__2c3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c4" uniqueID="&lt;Seed&gt;b__2c4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c5" uniqueID="&lt;Seed&gt;b__2c5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c6" uniqueID="&lt;Seed&gt;b__2c6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c7" uniqueID="&lt;Seed&gt;b__2c7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c8" uniqueID="&lt;Seed&gt;b__2c8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2c9" uniqueID="&lt;Seed&gt;b__2c9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2c9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ca" uniqueID="&lt;Seed&gt;b__2ca(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ca(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2cb" uniqueID="&lt;Seed&gt;b__2cb(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2cb(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2cc" uniqueID="&lt;Seed&gt;b__2cc(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2cc(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2cd" uniqueID="&lt;Seed&gt;b__2cd(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2cd(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ce" uniqueID="&lt;Seed&gt;b__2ce(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ce(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2cf" uniqueID="&lt;Seed&gt;b__2cf(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2cf(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d0" uniqueID="&lt;Seed&gt;b__2d0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d1" uniqueID="&lt;Seed&gt;b__2d1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d2" uniqueID="&lt;Seed&gt;b__2d2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d3" uniqueID="&lt;Seed&gt;b__2d3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d4" uniqueID="&lt;Seed&gt;b__2d4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d5" uniqueID="&lt;Seed&gt;b__2d5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d6" uniqueID="&lt;Seed&gt;b__2d6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d7" uniqueID="&lt;Seed&gt;b__2d7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d8" uniqueID="&lt;Seed&gt;b__2d8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2d9" uniqueID="&lt;Seed&gt;b__2d9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2d9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2da" uniqueID="&lt;Seed&gt;b__2da(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2da(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2db" uniqueID="&lt;Seed&gt;b__2db(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2db(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2dc" uniqueID="&lt;Seed&gt;b__2dc(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2dc(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2dd" uniqueID="&lt;Seed&gt;b__2dd(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2dd(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2de" uniqueID="&lt;Seed&gt;b__2de(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2de(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2df" uniqueID="&lt;Seed&gt;b__2df(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2df(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e0" uniqueID="&lt;Seed&gt;b__2e0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e1" uniqueID="&lt;Seed&gt;b__2e1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e2" uniqueID="&lt;Seed&gt;b__2e2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e3" uniqueID="&lt;Seed&gt;b__2e3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e4" uniqueID="&lt;Seed&gt;b__2e4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e5" uniqueID="&lt;Seed&gt;b__2e5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e6" uniqueID="&lt;Seed&gt;b__2e6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e7" uniqueID="&lt;Seed&gt;b__2e7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e8" uniqueID="&lt;Seed&gt;b__2e8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2e9" uniqueID="&lt;Seed&gt;b__2e9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2e9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ea" uniqueID="&lt;Seed&gt;b__2ea(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ea(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2eb" uniqueID="&lt;Seed&gt;b__2eb(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2eb(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ec" uniqueID="&lt;Seed&gt;b__2ec(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ec(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ed" uniqueID="&lt;Seed&gt;b__2ed(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ed(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ee" uniqueID="&lt;Seed&gt;b__2ee(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ee(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ef" uniqueID="&lt;Seed&gt;b__2ef(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ef(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f0" uniqueID="&lt;Seed&gt;b__2f0(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f0(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f1" uniqueID="&lt;Seed&gt;b__2f1(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f1(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f2" uniqueID="&lt;Seed&gt;b__2f2(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f2(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f3" uniqueID="&lt;Seed&gt;b__2f3(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f3(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f4" uniqueID="&lt;Seed&gt;b__2f4(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f4(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f5" uniqueID="&lt;Seed&gt;b__2f5(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f5(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f6" uniqueID="&lt;Seed&gt;b__2f6(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f6(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f7" uniqueID="&lt;Seed&gt;b__2f7(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f7(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f8" uniqueID="&lt;Seed&gt;b__2f8(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f8(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2f9" uniqueID="&lt;Seed&gt;b__2f9(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2f9(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2fa" uniqueID="&lt;Seed&gt;b__2fa(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2fa(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2fb" uniqueID="&lt;Seed&gt;b__2fb(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2fb(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2fc" uniqueID="&lt;Seed&gt;b__2fc(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2fc(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2fd" uniqueID="&lt;Seed&gt;b__2fd(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2fd(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2fe" uniqueID="&lt;Seed&gt;b__2fe(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2fe(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__2ff" uniqueID="&lt;Seed&gt;b__2ff(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__2ff(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__300" uniqueID="&lt;Seed&gt;b__300(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__300(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__301" uniqueID="&lt;Seed&gt;b__301(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__301(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__302" uniqueID="&lt;Seed&gt;b__302(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__302(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__303" uniqueID="&lt;Seed&gt;b__303(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__303(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__304" uniqueID="&lt;Seed&gt;b__304(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__304(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__305" uniqueID="&lt;Seed&gt;b__305(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__305(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__306" uniqueID="&lt;Seed&gt;b__306(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__306(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__307" uniqueID="&lt;Seed&gt;b__307(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__307(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__308" uniqueID="&lt;Seed&gt;b__308(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__308(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__309" uniqueID="&lt;Seed&gt;b__309(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__309(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__30a" uniqueID="&lt;Seed&gt;b__30a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__30a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__30b" uniqueID="&lt;Seed&gt;b__30b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__30b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__30c" uniqueID="&lt;Seed&gt;b__30c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__30c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__30d" uniqueID="&lt;Seed&gt;b__30d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__30d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__30e" uniqueID="&lt;Seed&gt;b__30e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__30e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__30f" uniqueID="&lt;Seed&gt;b__30f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__30f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__310" uniqueID="&lt;Seed&gt;b__310(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__310(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__311" uniqueID="&lt;Seed&gt;b__311(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__311(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__312" uniqueID="&lt;Seed&gt;b__312(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__312(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__313" uniqueID="&lt;Seed&gt;b__313(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__313(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__314" uniqueID="&lt;Seed&gt;b__314(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__314(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__315" uniqueID="&lt;Seed&gt;b__315(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__315(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__316" uniqueID="&lt;Seed&gt;b__316(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__316(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__317" uniqueID="&lt;Seed&gt;b__317(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__317(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__318" uniqueID="&lt;Seed&gt;b__318(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__318(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__319" uniqueID="&lt;Seed&gt;b__319(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__319(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__31a" uniqueID="&lt;Seed&gt;b__31a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__31a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__31b" uniqueID="&lt;Seed&gt;b__31b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__31b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__31c" uniqueID="&lt;Seed&gt;b__31c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__31c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__31d" uniqueID="&lt;Seed&gt;b__31d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__31d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__31e" uniqueID="&lt;Seed&gt;b__31e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__31e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__31f" uniqueID="&lt;Seed&gt;b__31f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__31f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__320" uniqueID="&lt;Seed&gt;b__320(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__320(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__321" uniqueID="&lt;Seed&gt;b__321(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__321(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__322" uniqueID="&lt;Seed&gt;b__322(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__322(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__323" uniqueID="&lt;Seed&gt;b__323(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__323(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__324" uniqueID="&lt;Seed&gt;b__324(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__324(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__325" uniqueID="&lt;Seed&gt;b__325(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__325(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__326" uniqueID="&lt;Seed&gt;b__326(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__326(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__327" uniqueID="&lt;Seed&gt;b__327(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__327(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__328" uniqueID="&lt;Seed&gt;b__328(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__328(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__329" uniqueID="&lt;Seed&gt;b__329(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__329(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__32a" uniqueID="&lt;Seed&gt;b__32a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__32a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__32b" uniqueID="&lt;Seed&gt;b__32b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__32b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__32c" uniqueID="&lt;Seed&gt;b__32c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__32c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__32d" uniqueID="&lt;Seed&gt;b__32d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__32d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__32e" uniqueID="&lt;Seed&gt;b__32e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__32e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__32f" uniqueID="&lt;Seed&gt;b__32f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__32f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__330" uniqueID="&lt;Seed&gt;b__330(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__330(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__331" uniqueID="&lt;Seed&gt;b__331(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__331(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__332" uniqueID="&lt;Seed&gt;b__332(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__332(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__333" uniqueID="&lt;Seed&gt;b__333(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__333(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__334" uniqueID="&lt;Seed&gt;b__334(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__334(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__335" uniqueID="&lt;Seed&gt;b__335(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__335(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__336" uniqueID="&lt;Seed&gt;b__336(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__336(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__337" uniqueID="&lt;Seed&gt;b__337(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__337(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__338" uniqueID="&lt;Seed&gt;b__338(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__338(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__339" uniqueID="&lt;Seed&gt;b__339(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__339(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__33a" uniqueID="&lt;Seed&gt;b__33a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__33a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__33b" uniqueID="&lt;Seed&gt;b__33b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__33b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__33c" uniqueID="&lt;Seed&gt;b__33c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__33c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__33d" uniqueID="&lt;Seed&gt;b__33d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__33d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__33e" uniqueID="&lt;Seed&gt;b__33e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__33e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__33f" uniqueID="&lt;Seed&gt;b__33f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__33f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__340" uniqueID="&lt;Seed&gt;b__340(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__340(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__341" uniqueID="&lt;Seed&gt;b__341(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__341(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__342" uniqueID="&lt;Seed&gt;b__342(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__342(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__343" uniqueID="&lt;Seed&gt;b__343(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__343(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__344" uniqueID="&lt;Seed&gt;b__344(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__344(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__345" uniqueID="&lt;Seed&gt;b__345(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__345(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__346" uniqueID="&lt;Seed&gt;b__346(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__346(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__347" uniqueID="&lt;Seed&gt;b__347(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__347(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__348" uniqueID="&lt;Seed&gt;b__348(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__348(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__349" uniqueID="&lt;Seed&gt;b__349(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__349(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__34a" uniqueID="&lt;Seed&gt;b__34a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__34a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__34b" uniqueID="&lt;Seed&gt;b__34b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__34b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__34c" uniqueID="&lt;Seed&gt;b__34c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__34c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__34d" uniqueID="&lt;Seed&gt;b__34d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__34d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__34e" uniqueID="&lt;Seed&gt;b__34e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__34e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__34f" uniqueID="&lt;Seed&gt;b__34f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__34f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__350" uniqueID="&lt;Seed&gt;b__350(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__350(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__351" uniqueID="&lt;Seed&gt;b__351(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__351(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__352" uniqueID="&lt;Seed&gt;b__352(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__352(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__353" uniqueID="&lt;Seed&gt;b__353(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__353(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__354" uniqueID="&lt;Seed&gt;b__354(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__354(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__355" uniqueID="&lt;Seed&gt;b__355(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__355(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__356" uniqueID="&lt;Seed&gt;b__356(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__356(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__357" uniqueID="&lt;Seed&gt;b__357(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__357(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__358" uniqueID="&lt;Seed&gt;b__358(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__358(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__359" uniqueID="&lt;Seed&gt;b__359(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__359(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__35a" uniqueID="&lt;Seed&gt;b__35a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__35a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__35b" uniqueID="&lt;Seed&gt;b__35b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__35b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__35c" uniqueID="&lt;Seed&gt;b__35c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__35c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__35d" uniqueID="&lt;Seed&gt;b__35d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__35d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__35e" uniqueID="&lt;Seed&gt;b__35e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__35e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__35f" uniqueID="&lt;Seed&gt;b__35f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__35f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__360" uniqueID="&lt;Seed&gt;b__360(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__360(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__361" uniqueID="&lt;Seed&gt;b__361(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__361(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__362" uniqueID="&lt;Seed&gt;b__362(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__362(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__363" uniqueID="&lt;Seed&gt;b__363(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__363(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__364" uniqueID="&lt;Seed&gt;b__364(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__364(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__365" uniqueID="&lt;Seed&gt;b__365(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__365(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__366" uniqueID="&lt;Seed&gt;b__366(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__366(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__367" uniqueID="&lt;Seed&gt;b__367(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__367(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__368" uniqueID="&lt;Seed&gt;b__368(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__368(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__369" uniqueID="&lt;Seed&gt;b__369(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__369(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__36a" uniqueID="&lt;Seed&gt;b__36a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__36a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__36b" uniqueID="&lt;Seed&gt;b__36b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__36b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__36c" uniqueID="&lt;Seed&gt;b__36c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__36c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__36d" uniqueID="&lt;Seed&gt;b__36d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__36d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__36e" uniqueID="&lt;Seed&gt;b__36e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__36e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__36f" uniqueID="&lt;Seed&gt;b__36f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__36f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__370" uniqueID="&lt;Seed&gt;b__370(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__370(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__371" uniqueID="&lt;Seed&gt;b__371(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__371(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__372" uniqueID="&lt;Seed&gt;b__372(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__372(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__373" uniqueID="&lt;Seed&gt;b__373(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__373(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__374" uniqueID="&lt;Seed&gt;b__374(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__374(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__375" uniqueID="&lt;Seed&gt;b__375(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__375(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__376" uniqueID="&lt;Seed&gt;b__376(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__376(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__377" uniqueID="&lt;Seed&gt;b__377(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__377(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__378" uniqueID="&lt;Seed&gt;b__378(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__378(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__379" uniqueID="&lt;Seed&gt;b__379(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__379(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__37a" uniqueID="&lt;Seed&gt;b__37a(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__37a(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__37b" uniqueID="&lt;Seed&gt;b__37b(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__37b(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__37c" uniqueID="&lt;Seed&gt;b__37c(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__37c(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__37d" uniqueID="&lt;Seed&gt;b__37d(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__37d(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__37e" uniqueID="&lt;Seed&gt;b__37e(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__37e(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__37f" uniqueID="&lt;Seed&gt;b__37f(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__37f(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__380" uniqueID="&lt;Seed&gt;b__380(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__380(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__381" uniqueID="&lt;Seed&gt;b__381(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__381(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__382" uniqueID="&lt;Seed&gt;b__382(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__382(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__383" uniqueID="&lt;Seed&gt;b__383(MvcMusicStore.Models.Genre):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__383(MvcMusicStore.Models.Genre):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Seed&gt;b__384" uniqueID="&lt;Seed&gt;b__384(MvcMusicStore.Models.Artist):System.Boolean">
				<signature>MvcMusicStore.Models.SampleData.&lt;Seed&gt;b__384(MvcMusicStore.Models.Artist):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SampleData" uniqueID="SampleData():System.Void">
				<signature>MvcMusicStore.Models.SampleData.SampleData():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Seed" uniqueID="Seed(MvcMusicStore.Models.MusicStoreEntities):System.Void">
				<signature>MvcMusicStore.Models.SampleData.Seed(MvcMusicStore.Models.MusicStoreEntities):System.Void</signature>
			</method>
		</class>
		<class name="Artist" uniqueID="MvcMusicStore.Models.Artist">
			<method accessibility="Public" methodKind="Member" name="Artist" uniqueID="Artist():System.Void">
				<signature>MvcMusicStore.Models.Artist.Artist():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ArtistId" uniqueID="get_ArtistId():System.Int32">
				<signature>MvcMusicStore.Models.Artist.get_ArtistId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>MvcMusicStore.Models.Artist.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ArtistId" uniqueID="set_ArtistId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Artist.set_ArtistId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>MvcMusicStore.Models.Artist.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="Genre" uniqueID="MvcMusicStore.Models.Genre">
			<method accessibility="Public" methodKind="Member" name="Genre" uniqueID="Genre():System.Void">
				<signature>MvcMusicStore.Models.Genre.Genre():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Albums" uniqueID="get_Albums():System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;">
				<signature>MvcMusicStore.Models.Genre.get_Albums():System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Description" uniqueID="get_Description():System.String">
				<signature>MvcMusicStore.Models.Genre.get_Description():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenreId" uniqueID="get_GenreId():System.Int32">
				<signature>MvcMusicStore.Models.Genre.get_GenreId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>MvcMusicStore.Models.Genre.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Albums" uniqueID="set_Albums(System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>MvcMusicStore.Models.Genre.set_Albums(System.Collections.Generic.List&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Description" uniqueID="set_Description(System.String):System.Void">
				<signature>MvcMusicStore.Models.Genre.set_Description(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_GenreId" uniqueID="set_GenreId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Genre.set_GenreId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>MvcMusicStore.Models.Genre.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="MusicStoreEntities" uniqueID="MvcMusicStore.Models.MusicStoreEntities">
			<method accessibility="Public" methodKind="Member" name="MusicStoreEntities" uniqueID="MusicStoreEntities():System.Void">
				<signature>MvcMusicStore.Models.MusicStoreEntities.MusicStoreEntities():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Albums" uniqueID="get_Albums():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;">
				<signature>MvcMusicStore.Models.MusicStoreEntities.get_Albums():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Artists" uniqueID="get_Artists():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>MvcMusicStore.Models.MusicStoreEntities.get_Artists():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Carts" uniqueID="get_Carts():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>MvcMusicStore.Models.MusicStoreEntities.get_Carts():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Genres" uniqueID="get_Genres():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>MvcMusicStore.Models.MusicStoreEntities.get_Genres():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OrderDetails" uniqueID="get_OrderDetails():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>MvcMusicStore.Models.MusicStoreEntities.get_OrderDetails():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Orders" uniqueID="get_Orders():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;">
				<signature>MvcMusicStore.Models.MusicStoreEntities.get_Orders():System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Albums" uniqueID="set_Albums(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>MvcMusicStore.Models.MusicStoreEntities.set_Albums(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Artists" uniqueID="set_Artists(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>MvcMusicStore.Models.MusicStoreEntities.set_Artists(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Carts" uniqueID="set_Carts(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>MvcMusicStore.Models.MusicStoreEntities.set_Carts(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Genres" uniqueID="set_Genres(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>MvcMusicStore.Models.MusicStoreEntities.set_Genres(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OrderDetails" uniqueID="set_OrderDetails(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>MvcMusicStore.Models.MusicStoreEntities.set_OrderDetails(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Orders" uniqueID="set_Orders(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>MvcMusicStore.Models.MusicStoreEntities.set_Orders(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Cart" uniqueID="MvcMusicStore.Models.Cart">
			<method accessibility="Public" methodKind="Member" name="Cart" uniqueID="Cart():System.Void">
				<signature>MvcMusicStore.Models.Cart.Cart():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Album" uniqueID="get_Album():MvcMusicStore.Models.Album">
				<signature>MvcMusicStore.Models.Cart.get_Album():MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AlbumId" uniqueID="get_AlbumId():System.Int32">
				<signature>MvcMusicStore.Models.Cart.get_AlbumId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CartId" uniqueID="get_CartId():System.String">
				<signature>MvcMusicStore.Models.Cart.get_CartId():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>MvcMusicStore.Models.Cart.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DateCreated" uniqueID="get_DateCreated():System.DateTime">
				<signature>MvcMusicStore.Models.Cart.get_DateCreated():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RecordId" uniqueID="get_RecordId():System.Int32">
				<signature>MvcMusicStore.Models.Cart.get_RecordId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Album" uniqueID="set_Album(MvcMusicStore.Models.Album):System.Void">
				<signature>MvcMusicStore.Models.Cart.set_Album(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AlbumId" uniqueID="set_AlbumId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Cart.set_AlbumId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CartId" uniqueID="set_CartId(System.String):System.Void">
				<signature>MvcMusicStore.Models.Cart.set_CartId(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Count" uniqueID="set_Count(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Cart.set_Count(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DateCreated" uniqueID="set_DateCreated(System.DateTime):System.Void">
				<signature>MvcMusicStore.Models.Cart.set_DateCreated(System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RecordId" uniqueID="set_RecordId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Cart.set_RecordId(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="SampleData+&lt;&gt;c__DisplayClass571" uniqueID="MvcMusicStore.Models.SampleData+&lt;&gt;c__DisplayClass571">
			<method accessibility="Public" methodKind="Member" name="&lt;Seed&gt;b__198" uniqueID="&lt;Seed&gt;b__198(MvcMusicStore.Models.Album):System.Void">
				<signature>MvcMusicStore.Models.SampleData+&lt;&gt;c__DisplayClass571.&lt;Seed&gt;b__198(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SampleData+&lt;&gt;c__DisplayClass571" uniqueID="SampleData+&lt;&gt;c__DisplayClass571():System.Void">
				<signature>MvcMusicStore.Models.SampleData+&lt;&gt;c__DisplayClass571.SampleData+&lt;&gt;c__DisplayClass571():System.Void</signature>
			</method>
		</class>
		<class name="ShoppingCart+&lt;&gt;c__DisplayClass3" uniqueID="MvcMusicStore.Models.ShoppingCart+&lt;&gt;c__DisplayClass3">
			<method accessibility="Public" methodKind="Member" name="ShoppingCart+&lt;&gt;c__DisplayClass3" uniqueID="ShoppingCart+&lt;&gt;c__DisplayClass3():System.Void">
				<signature>MvcMusicStore.Models.ShoppingCart+&lt;&gt;c__DisplayClass3.ShoppingCart+&lt;&gt;c__DisplayClass3():System.Void</signature>
			</method>
		</class>
		<class name="Order" uniqueID="MvcMusicStore.Models.Order">
			<method accessibility="Public" methodKind="Member" name="Order" uniqueID="Order():System.Void">
				<signature>MvcMusicStore.Models.Order.Order():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Address" uniqueID="get_Address():System.String">
				<signature>MvcMusicStore.Models.Order.get_Address():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_City" uniqueID="get_City():System.String">
				<signature>MvcMusicStore.Models.Order.get_City():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Country" uniqueID="get_Country():System.String">
				<signature>MvcMusicStore.Models.Order.get_Country():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Email" uniqueID="get_Email():System.String">
				<signature>MvcMusicStore.Models.Order.get_Email():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FirstName" uniqueID="get_FirstName():System.String">
				<signature>MvcMusicStore.Models.Order.get_FirstName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LastName" uniqueID="get_LastName():System.String">
				<signature>MvcMusicStore.Models.Order.get_LastName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OrderDate" uniqueID="get_OrderDate():System.DateTime">
				<signature>MvcMusicStore.Models.Order.get_OrderDate():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OrderDetails" uniqueID="get_OrderDetails():System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>MvcMusicStore.Models.Order.get_OrderDetails():System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OrderId" uniqueID="get_OrderId():System.Int32">
				<signature>MvcMusicStore.Models.Order.get_OrderId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Phone" uniqueID="get_Phone():System.String">
				<signature>MvcMusicStore.Models.Order.get_Phone():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PostalCode" uniqueID="get_PostalCode():System.String">
				<signature>MvcMusicStore.Models.Order.get_PostalCode():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_State" uniqueID="get_State():System.String">
				<signature>MvcMusicStore.Models.Order.get_State():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Total" uniqueID="get_Total():System.Decimal">
				<signature>MvcMusicStore.Models.Order.get_Total():System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Username" uniqueID="get_Username():System.String">
				<signature>MvcMusicStore.Models.Order.get_Username():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Address" uniqueID="set_Address(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_Address(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_City" uniqueID="set_City(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_City(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Country" uniqueID="set_Country(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_Country(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Email" uniqueID="set_Email(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_Email(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_FirstName" uniqueID="set_FirstName(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_FirstName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LastName" uniqueID="set_LastName(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_LastName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OrderDate" uniqueID="set_OrderDate(System.DateTime):System.Void">
				<signature>MvcMusicStore.Models.Order.set_OrderDate(System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OrderDetails" uniqueID="set_OrderDetails(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>MvcMusicStore.Models.Order.set_OrderDetails(System.Collections.Generic.List&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OrderId" uniqueID="set_OrderId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.Order.set_OrderId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Phone" uniqueID="set_Phone(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_Phone(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PostalCode" uniqueID="set_PostalCode(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_PostalCode(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_State" uniqueID="set_State(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_State(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Total" uniqueID="set_Total(System.Decimal):System.Void">
				<signature>MvcMusicStore.Models.Order.set_Total(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Username" uniqueID="set_Username(System.String):System.Void">
				<signature>MvcMusicStore.Models.Order.set_Username(System.String):System.Void</signature>
			</method>
		</class>
		<class name="OrderDetail" uniqueID="MvcMusicStore.Models.OrderDetail">
			<method accessibility="Public" methodKind="Member" name="OrderDetail" uniqueID="OrderDetail():System.Void">
				<signature>MvcMusicStore.Models.OrderDetail.OrderDetail():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Album" uniqueID="get_Album():MvcMusicStore.Models.Album">
				<signature>MvcMusicStore.Models.OrderDetail.get_Album():MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AlbumId" uniqueID="get_AlbumId():System.Int32">
				<signature>MvcMusicStore.Models.OrderDetail.get_AlbumId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Order" uniqueID="get_Order():MvcMusicStore.Models.Order">
				<signature>MvcMusicStore.Models.OrderDetail.get_Order():MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OrderDetailId" uniqueID="get_OrderDetailId():System.Int32">
				<signature>MvcMusicStore.Models.OrderDetail.get_OrderDetailId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OrderId" uniqueID="get_OrderId():System.Int32">
				<signature>MvcMusicStore.Models.OrderDetail.get_OrderId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Quantity" uniqueID="get_Quantity():System.Int32">
				<signature>MvcMusicStore.Models.OrderDetail.get_Quantity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnitPrice" uniqueID="get_UnitPrice():System.Decimal">
				<signature>MvcMusicStore.Models.OrderDetail.get_UnitPrice():System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Album" uniqueID="set_Album(MvcMusicStore.Models.Album):System.Void">
				<signature>MvcMusicStore.Models.OrderDetail.set_Album(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AlbumId" uniqueID="set_AlbumId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.OrderDetail.set_AlbumId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Order" uniqueID="set_Order(MvcMusicStore.Models.Order):System.Void">
				<signature>MvcMusicStore.Models.OrderDetail.set_Order(MvcMusicStore.Models.Order):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OrderDetailId" uniqueID="set_OrderDetailId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.OrderDetail.set_OrderDetailId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OrderId" uniqueID="set_OrderId(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.OrderDetail.set_OrderId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Quantity" uniqueID="set_Quantity(System.Int32):System.Void">
				<signature>MvcMusicStore.Models.OrderDetail.set_Quantity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UnitPrice" uniqueID="set_UnitPrice(System.Decimal):System.Void">
				<signature>MvcMusicStore.Models.OrderDetail.set_UnitPrice(System.Decimal):System.Void</signature>
			</method>
		</class>
		<class name="ShoppingCart" uniqueID="MvcMusicStore.Models.ShoppingCart">
			<method accessibility="Public" methodKind="Static" name="GetCart" uniqueID="GetCart(System.Web.HttpContextBase):MvcMusicStore.Models.ShoppingCart">
				<signature>MvcMusicStore.Models.ShoppingCart.GetCart(System.Web.HttpContextBase):MvcMusicStore.Models.ShoppingCart</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCart" uniqueID="GetCart(System.Web.Mvc.Controller):MvcMusicStore.Models.ShoppingCart">
				<signature>MvcMusicStore.Models.ShoppingCart.GetCart(System.Web.Mvc.Controller):MvcMusicStore.Models.ShoppingCart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddToCart" uniqueID="AddToCart(MvcMusicStore.Models.Album):System.Void">
				<signature>MvcMusicStore.Models.ShoppingCart.AddToCart(MvcMusicStore.Models.Album):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateOrder" uniqueID="CreateOrder(MvcMusicStore.Models.Order):System.Int32">
				<signature>MvcMusicStore.Models.ShoppingCart.CreateOrder(MvcMusicStore.Models.Order):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EmptyCart" uniqueID="EmptyCart():System.Void">
				<signature>MvcMusicStore.Models.ShoppingCart.EmptyCart():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCartId" uniqueID="GetCartId(System.Web.HttpContextBase):System.String">
				<signature>MvcMusicStore.Models.ShoppingCart.GetCartId(System.Web.HttpContextBase):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCartItems" uniqueID="GetCartItems():System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>MvcMusicStore.Models.ShoppingCart.GetCartItems():System.Collections.Generic.List&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCount" uniqueID="GetCount():System.Int32">
				<signature>MvcMusicStore.Models.ShoppingCart.GetCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTotal" uniqueID="GetTotal():System.Decimal">
				<signature>MvcMusicStore.Models.ShoppingCart.GetTotal():System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MigrateCart" uniqueID="MigrateCart(System.String):System.Void">
				<signature>MvcMusicStore.Models.ShoppingCart.MigrateCart(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveFromCart" uniqueID="RemoveFromCart(System.Int32):System.Int32">
				<signature>MvcMusicStore.Models.ShoppingCart.RemoveFromCart(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ShoppingCart" uniqueID="ShoppingCart():System.Void">
				<signature>MvcMusicStore.Models.ShoppingCart.ShoppingCart():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ShoppingCartId" uniqueID="get_ShoppingCartId():System.String">
				<signature>MvcMusicStore.Models.ShoppingCart.get_ShoppingCartId():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_ShoppingCartId" uniqueID="set_ShoppingCartId(System.String):System.Void">
				<signature>MvcMusicStore.Models.ShoppingCart.set_ShoppingCartId(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ShoppingCart+&lt;&gt;c__DisplayClass1" uniqueID="MvcMusicStore.Models.ShoppingCart+&lt;&gt;c__DisplayClass1">
			<method accessibility="Public" methodKind="Member" name="ShoppingCart+&lt;&gt;c__DisplayClass1" uniqueID="ShoppingCart+&lt;&gt;c__DisplayClass1():System.Void">
				<signature>MvcMusicStore.Models.ShoppingCart+&lt;&gt;c__DisplayClass1.ShoppingCart+&lt;&gt;c__DisplayClass1():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="MvcMusicStore">
		<class name="MvcApplication" uniqueID="MvcMusicStore.MvcApplication">
			<method accessibility="Public" methodKind="Static" name="RegisterGlobalFilters" uniqueID="RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection):System.Void">
				<signature>MvcMusicStore.MvcApplication.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterRoutes" uniqueID="RegisterRoutes(System.Web.Routing.RouteCollection):System.Void">
				<signature>MvcMusicStore.MvcApplication.RegisterRoutes(System.Web.Routing.RouteCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Application_Start" uniqueID="Application_Start():System.Void">
				<signature>MvcMusicStore.MvcApplication.Application_Start():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MvcApplication" uniqueID="MvcApplication():System.Void">
				<signature>MvcMusicStore.MvcApplication.MvcApplication():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Data.Entity.Infrastructure">
		<class name="DbQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Entity.Infrastructure.DbQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Entity.Infrastructure.DbQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="DbQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.DbQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_ElementType" uniqueID="System.Linq.IQueryable.get_ElementType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Linq.IQueryable.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Expression" uniqueID="System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Provider" uniqueID="System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Artist&gt;.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
		</class>
		<class name="IObjectContextAdapter" uniqueID="System.Data.Entity.Infrastructure.IObjectContextAdapter">
			<method accessibility="Public" methodKind="Member" name="get_ObjectContext" uniqueID="get_ObjectContext():System.Data.Objects.ObjectContext">
				<signature>System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext():System.Data.Objects.ObjectContext</signature>
			</method>
		</class>
		<class name="DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;):System.Data.Entity.Infrastructure.DbEntityEntry">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.op_Implicit(System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;):System.Data.Entity.Infrastructure.DbEntityEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Collection" uniqueID="Collection(System.String):System.Data.Entity.Infrastructure.DbCollectionEntry">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.Collection(System.String):System.Data.Entity.Infrastructure.DbCollectionEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ComplexProperty" uniqueID="ComplexProperty(System.String):System.Data.Entity.Infrastructure.DbComplexPropertyEntry">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.ComplexProperty(System.String):System.Data.Entity.Infrastructure.DbComplexPropertyEntry</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;" uniqueID="DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalEntityEntry):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalEntityEntry):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.Equals(System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDatabaseValues" uniqueID="GetDatabaseValues():System.Data.Entity.Infrastructure.DbPropertyValues">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.GetDatabaseValues():System.Data.Entity.Infrastructure.DbPropertyValues</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValidationResult" uniqueID="GetValidationResult():System.Data.Entity.Validation.DbEntityValidationResult">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.GetValidationResult():System.Data.Entity.Validation.DbEntityValidationResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Member" uniqueID="Member(System.String):System.Data.Entity.Infrastructure.DbMemberEntry">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.Member(System.String):System.Data.Entity.Infrastructure.DbMemberEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Property" uniqueID="Property(System.String):System.Data.Entity.Infrastructure.DbPropertyEntry">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.Property(System.String):System.Data.Entity.Infrastructure.DbPropertyEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reference" uniqueID="Reference(System.String):System.Data.Entity.Infrastructure.DbReferenceEntry">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.Reference(System.String):System.Data.Entity.Infrastructure.DbReferenceEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reload" uniqueID="Reload():System.Void">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.Reload():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentValues" uniqueID="get_CurrentValues():System.Data.Entity.Infrastructure.DbPropertyValues">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.get_CurrentValues():System.Data.Entity.Infrastructure.DbPropertyValues</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Entity" uniqueID="get_Entity():MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.get_Entity():MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OriginalValues" uniqueID="get_OriginalValues():System.Data.Entity.Infrastructure.DbPropertyValues">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.get_OriginalValues():System.Data.Entity.Infrastructure.DbPropertyValues</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_State" uniqueID="get_State():System.Data.EntityState">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.get_State():System.Data.EntityState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_State" uniqueID="set_State(System.Data.EntityState):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;.set_State(System.Data.EntityState):System.Void</signature>
			</method>
		</class>
		<class name="DbQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Entity.Infrastructure.DbQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Entity.Infrastructure.DbQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="DbQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.DbQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_ElementType" uniqueID="System.Linq.IQueryable.get_ElementType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.System.Linq.IQueryable.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Expression" uniqueID="System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Provider" uniqueID="System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Album&gt;.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
		</class>
		<class name="DbQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Entity.Infrastructure.DbQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Entity.Infrastructure.DbQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="DbQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.DbQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_ElementType" uniqueID="System.Linq.IQueryable.get_ElementType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Linq.IQueryable.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Expression" uniqueID="System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Provider" uniqueID="System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Cart&gt;.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
		<class name="DbQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Entity.Infrastructure.DbQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Entity.Infrastructure.DbQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="DbQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.DbQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_ElementType" uniqueID="System.Linq.IQueryable.get_ElementType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Linq.IQueryable.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Expression" uniqueID="System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Provider" uniqueID="System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Genre&gt;.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="DbQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Entity.Infrastructure.DbQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Entity.Infrastructure.DbQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="DbQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.DbQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_ElementType" uniqueID="System.Linq.IQueryable.get_ElementType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.System.Linq.IQueryable.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Expression" uniqueID="System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Provider" uniqueID="System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.Order&gt;.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
		</class>
		<class name="DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Entity.Infrastructure.DbQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.op_Implicit(System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Entity.Infrastructure.DbQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Include(System.String):System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.IEnumerable&lt;TResult&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_ElementType" uniqueID="System.Linq.IQueryable.get_ElementType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Linq.IQueryable.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Expression" uniqueID="System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Provider" uniqueID="System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Infrastructure.DbQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
		</class>
		<class name="DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;.get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery</signature>
			</method>
		</class>
		<class name="DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;.get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery</signature>
			</method>
		</class>
		<class name="DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;.get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery</signature>
			</method>
		</class>
		<class name="DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;.get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery</signature>
			</method>
		</class>
		<class name="DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;.get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery</signature>
			</method>
		</class>
		<class name="DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.AsNoTracking():System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.InternalSqlQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery">
				<signature>System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.get_InternalQuery():System.Data.Entity.Internal.InternalSqlQuery</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.Services">
		<class name="WebMethodAttribute" uniqueID="System.Web.Services.WebMethodAttribute">
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute():System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute(System.Boolean):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption;System.Int32):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption;System.Int32;System.Boolean):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BufferResponse" uniqueID="get_BufferResponse():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_BufferResponse():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_BufferResponseSpecified" uniqueID="get_BufferResponseSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_BufferResponseSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CacheDuration" uniqueID="get_CacheDuration():System.Int32">
				<signature>System.Web.Services.WebMethodAttribute.get_CacheDuration():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CacheDurationSpecified" uniqueID="get_CacheDurationSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_CacheDurationSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Description" uniqueID="get_Description():System.String">
				<signature>System.Web.Services.WebMethodAttribute.get_Description():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DescriptionSpecified" uniqueID="get_DescriptionSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_DescriptionSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableSession" uniqueID="get_EnableSession():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_EnableSession():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EnableSessionSpecified" uniqueID="get_EnableSessionSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_EnableSessionSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MessageName" uniqueID="get_MessageName():System.String">
				<signature>System.Web.Services.WebMethodAttribute.get_MessageName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MessageNameSpecified" uniqueID="get_MessageNameSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_MessageNameSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TransactionEnabled" uniqueID="get_TransactionEnabled():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_TransactionEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TransactionOption" uniqueID="get_TransactionOption():System.EnterpriseServices.TransactionOption">
				<signature>System.Web.Services.WebMethodAttribute.get_TransactionOption():System.EnterpriseServices.TransactionOption</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TransactionOptionSpecified" uniqueID="get_TransactionOptionSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_TransactionOptionSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BufferResponse" uniqueID="set_BufferResponse(System.Boolean):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_BufferResponse(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CacheDuration" uniqueID="set_CacheDuration(System.Int32):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_CacheDuration(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Description" uniqueID="set_Description(System.String):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_Description(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableSession" uniqueID="set_EnableSession(System.Boolean):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_EnableSession(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MessageName" uniqueID="set_MessageName(System.String):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_MessageName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TransactionOption" uniqueID="set_TransactionOption(System.EnterpriseServices.TransactionOption):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_TransactionOption(System.EnterpriseServices.TransactionOption):System.Void</signature>
			</method>
		</class>
		<class name="WebServiceAttribute" uniqueID="System.Web.Services.WebServiceAttribute">
			<method accessibility="Public" methodKind="Member" name="WebServiceAttribute" uniqueID="WebServiceAttribute():System.Void">
				<signature>System.Web.Services.WebServiceAttribute.WebServiceAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Description" uniqueID="get_Description():System.String">
				<signature>System.Web.Services.WebServiceAttribute.get_Description():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Web.Services.WebServiceAttribute.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Web.Services.WebServiceAttribute.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Description" uniqueID="set_Description(System.String):System.Void">
				<signature>System.Web.Services.WebServiceAttribute.set_Description(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Web.Services.WebServiceAttribute.set_Name(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Namespace" uniqueID="set_Namespace(System.String):System.Void">
				<signature>System.Web.Services.WebServiceAttribute.set_Namespace(System.String):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Data.Entity">
		<class name="DbContext" uniqueID="System.Data.Entity.DbContext">
			<method accessibility="Protected" methodKind="Member" name="CallOnModelCreating" uniqueID="CallOnModelCreating(System.Data.Entity.DbModelBuilder):System.Void">
				<signature>System.Data.Entity.DbContext.CallOnModelCreating(System.Data.Entity.DbModelBuilder):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CallValidateEntity" uniqueID="CallValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry;System.Collections.Generic.IDictionary&lt;System.Object;System.Object&gt;):System.Data.Entity.Validation.DbEntityValidationResult">
				<signature>System.Data.Entity.DbContext.CallValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry;System.Collections.Generic.IDictionary&lt;System.Object;System.Object&gt;):System.Data.Entity.Validation.DbEntityValidationResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbContext" uniqueID="DbContext():System.Void">
				<signature>System.Data.Entity.DbContext.DbContext():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DbContext" uniqueID="DbContext(System.Data.Common.DbConnection;System.Boolean):System.Void">
				<signature>System.Data.Entity.DbContext.DbContext(System.Data.Common.DbConnection;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DbContext" uniqueID="DbContext(System.Data.Common.DbConnection;System.Data.Entity.Infrastructure.DbCompiledModel;System.Boolean):System.Void">
				<signature>System.Data.Entity.DbContext.DbContext(System.Data.Common.DbConnection;System.Data.Entity.Infrastructure.DbCompiledModel;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbContext" uniqueID="DbContext(System.Data.Entity.Infrastructure.DbCompiledModel):System.Void">
				<signature>System.Data.Entity.DbContext.DbContext(System.Data.Entity.Infrastructure.DbCompiledModel):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DbContext" uniqueID="DbContext(System.Data.Objects.ObjectContext;System.Boolean):System.Void">
				<signature>System.Data.Entity.DbContext.DbContext(System.Data.Objects.ObjectContext;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DbContext" uniqueID="DbContext(System.String):System.Void">
				<signature>System.Data.Entity.DbContext.DbContext(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DbContext" uniqueID="DbContext(System.String;System.Data.Entity.Infrastructure.DbCompiledModel):System.Void">
				<signature>System.Data.Entity.DbContext.DbContext(System.String;System.Data.Entity.Infrastructure.DbCompiledModel):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DiscoverAndInitializeSets" uniqueID="DiscoverAndInitializeSets():System.Void">
				<signature>System.Data.Entity.DbContext.DiscoverAndInitializeSets():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Entity.DbContext.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Data.Entity.DbContext.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Entry" uniqueID="Entry(System.Object):System.Data.Entity.Infrastructure.DbEntityEntry">
				<signature>System.Data.Entity.DbContext.Entry(System.Object):System.Data.Entity.Infrastructure.DbEntityEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Entry&lt;MvcMusicStore.Models.Album&gt;" uniqueID="Entry&lt;MvcMusicStore.Models.Album&gt;(MvcMusicStore.Models.Album):System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.DbContext.Entry&lt;MvcMusicStore.Models.Album&gt;(MvcMusicStore.Models.Album):System.Data.Entity.Infrastructure.DbEntityEntry&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.DbContext.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.DbContext.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.DbContext.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValidationErrors" uniqueID="GetValidationErrors():System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;">
				<signature>System.Data.Entity.DbContext.GetValidationErrors():System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Validation.DbEntityValidationResult&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeLazyInternalContext" uniqueID="InitializeLazyInternalContext(System.Data.Entity.Internal.IInternalConnection;System.Data.Entity.Infrastructure.DbCompiledModel):System.Void">
				<signature>System.Data.Entity.DbContext.InitializeLazyInternalContext(System.Data.Entity.Internal.IInternalConnection;System.Data.Entity.Infrastructure.DbCompiledModel):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnModelCreating" uniqueID="OnModelCreating(System.Data.Entity.DbModelBuilder):System.Void">
				<signature>System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SaveChanges" uniqueID="SaveChanges():System.Int32">
				<signature>System.Data.Entity.DbContext.SaveChanges():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Set" uniqueID="Set(System.Type):System.Data.Entity.DbSet">
				<signature>System.Data.Entity.DbContext.Set(System.Type):System.Data.Entity.DbSet</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldValidateEntity" uniqueID="ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry):System.Boolean">
				<signature>System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext" uniqueID="System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext():System.Data.Objects.ObjectContext">
				<signature>System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext():System.Data.Objects.ObjectContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.DbContext.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateEntity" uniqueID="ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry;System.Collections.Generic.IDictionary&lt;System.Object;System.Object&gt;):System.Data.Entity.Validation.DbEntityValidationResult">
				<signature>System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry;System.Collections.Generic.IDictionary&lt;System.Object;System.Object&gt;):System.Data.Entity.Validation.DbEntityValidationResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ChangeTracker" uniqueID="get_ChangeTracker():System.Data.Entity.Infrastructure.DbChangeTracker">
				<signature>System.Data.Entity.DbContext.get_ChangeTracker():System.Data.Entity.Infrastructure.DbChangeTracker</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Configuration" uniqueID="get_Configuration():System.Data.Entity.Infrastructure.DbContextConfiguration">
				<signature>System.Data.Entity.DbContext.get_Configuration():System.Data.Entity.Infrastructure.DbContextConfiguration</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Database" uniqueID="get_Database():System.Data.Entity.Database">
				<signature>System.Data.Entity.DbContext.get_Database():System.Data.Entity.Database</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.DbContext.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
		</class>
		<class name="IDatabaseInitializer&lt;MvcMusicStore.Models.MusicStoreEntities&gt;" uniqueID="System.Data.Entity.IDatabaseInitializer&lt;MvcMusicStore.Models.MusicStoreEntities&gt;">
			<method accessibility="Public" methodKind="Member" name="InitializeDatabase" uniqueID="InitializeDatabase(MvcMusicStore.Models.MusicStoreEntities):System.Void">
				<signature>System.Data.Entity.IDatabaseInitializer&lt;MvcMusicStore.Models.MusicStoreEntities&gt;.InitializeDatabase(MvcMusicStore.Models.MusicStoreEntities):System.Void</signature>
			</method>
		</class>
		<class name="DropCreateDatabaseIfModelChanges&lt;MvcMusicStore.Models.MusicStoreEntities&gt;" uniqueID="System.Data.Entity.DropCreateDatabaseIfModelChanges&lt;MvcMusicStore.Models.MusicStoreEntities&gt;">
			<method accessibility="Public" methodKind="Member" name="DropCreateDatabaseIfModelChanges&lt;MvcMusicStore.Models.MusicStoreEntities&gt;" uniqueID="DropCreateDatabaseIfModelChanges&lt;MvcMusicStore.Models.MusicStoreEntities&gt;():System.Void">
				<signature>System.Data.Entity.DropCreateDatabaseIfModelChanges&lt;MvcMusicStore.Models.MusicStoreEntities&gt;.DropCreateDatabaseIfModelChanges&lt;MvcMusicStore.Models.MusicStoreEntities&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InitializeDatabase" uniqueID="InitializeDatabase(MvcMusicStore.Models.MusicStoreEntities):System.Void">
				<signature>System.Data.Entity.DropCreateDatabaseIfModelChanges&lt;MvcMusicStore.Models.MusicStoreEntities&gt;.InitializeDatabase(MvcMusicStore.Models.MusicStoreEntities):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Seed" uniqueID="Seed(MvcMusicStore.Models.MusicStoreEntities):System.Void">
				<signature>System.Data.Entity.DropCreateDatabaseIfModelChanges&lt;MvcMusicStore.Models.MusicStoreEntities&gt;.Seed(MvcMusicStore.Models.MusicStoreEntities):System.Void</signature>
			</method>
		</class>
		<class name="IDbSet&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Album&gt;.Add(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Album&gt;.Attach(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Album&gt;.Create():MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Album&gt;.Find(System.Object[]):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Album&gt;.Remove(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Album&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
		</class>
		<class name="IDbSet&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Artist&gt;.Add(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Artist&gt;.Attach(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Artist&gt;.Create():MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Artist&gt;.Find(System.Object[]):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Artist&gt;.Remove(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Artist&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
		</class>
		<class name="Database" uniqueID="System.Data.Entity.Database">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.Entity.Database.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateEmptyObjectContext" uniqueID="CreateEmptyObjectContext(System.Data.Common.DbConnection):System.Data.Objects.ObjectContext">
				<signature>System.Data.Entity.Database.CreateEmptyObjectContext(System.Data.Common.DbConnection):System.Data.Objects.ObjectContext</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Delete" uniqueID="Delete(System.Data.Common.DbConnection):System.Boolean">
				<signature>System.Data.Entity.Database.Delete(System.Data.Common.DbConnection):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Delete" uniqueID="Delete(System.String):System.Boolean">
				<signature>System.Data.Entity.Database.Delete(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Exists" uniqueID="Exists(System.Data.Common.DbConnection):System.Boolean">
				<signature>System.Data.Entity.Database.Exists(System.Data.Common.DbConnection):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Exists" uniqueID="Exists(System.String):System.Boolean">
				<signature>System.Data.Entity.Database.Exists(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PerformDatabaseOp" uniqueID="PerformDatabaseOp(System.Data.Common.DbConnection;System.Func&lt;System.Data.Objects.ObjectContext;System.Boolean&gt;):System.Boolean">
				<signature>System.Data.Entity.Database.PerformDatabaseOp(System.Data.Common.DbConnection;System.Func&lt;System.Data.Objects.ObjectContext;System.Boolean&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PerformDatabaseOp" uniqueID="PerformDatabaseOp(System.Data.Entity.Internal.LazyInternalConnection;System.Func&lt;System.Data.Objects.ObjectContext;System.Boolean&gt;):System.Boolean">
				<signature>System.Data.Entity.Database.PerformDatabaseOp(System.Data.Entity.Internal.LazyInternalConnection;System.Func&lt;System.Data.Objects.ObjectContext;System.Boolean&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetInitializer&lt;MvcMusicStore.Models.MusicStoreEntities&gt;" uniqueID="SetInitializer&lt;MvcMusicStore.Models.MusicStoreEntities&gt;(System.Data.Entity.IDatabaseInitializer&lt;MvcMusicStore.Models.MusicStoreEntities&gt;):System.Void">
				<signature>System.Data.Entity.Database.SetInitializer&lt;MvcMusicStore.Models.MusicStoreEntities&gt;(System.Data.Entity.IDatabaseInitializer&lt;MvcMusicStore.Models.MusicStoreEntities&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_DefaultConnectionFactory" uniqueID="get_DefaultConnectionFactory():System.Data.Entity.Infrastructure.IDbConnectionFactory">
				<signature>System.Data.Entity.Database.get_DefaultConnectionFactory():System.Data.Entity.Infrastructure.IDbConnectionFactory</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_DefaultConnectionFactory" uniqueID="set_DefaultConnectionFactory(System.Data.Entity.Infrastructure.IDbConnectionFactory):System.Void">
				<signature>System.Data.Entity.Database.set_DefaultConnectionFactory(System.Data.Entity.Infrastructure.IDbConnectionFactory):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;get_InitializerDelegate&gt;b__4" uniqueID="&lt;get_InitializerDelegate&gt;b__4(System.Type):System.Data.Entity.Internal.InitializerLockPair">
				<signature>System.Data.Entity.Database.&lt;get_InitializerDelegate&gt;b__4(System.Type):System.Data.Entity.Internal.InitializerLockPair</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompatibleWithModel" uniqueID="CompatibleWithModel(System.Boolean):System.Boolean">
				<signature>System.Data.Entity.Database.CompatibleWithModel(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():System.Void">
				<signature>System.Data.Entity.Database.Create():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateIfNotExists" uniqueID="CreateIfNotExists():System.Boolean">
				<signature>System.Data.Entity.Database.CreateIfNotExists():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Database" uniqueID="Database(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Database.Database(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Delete" uniqueID="Delete():System.Boolean">
				<signature>System.Data.Entity.Database.Delete():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.Database.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSqlCommand" uniqueID="ExecuteSqlCommand(System.String;System.Object[]):System.Int32">
				<signature>System.Data.Entity.Database.ExecuteSqlCommand(System.String;System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists():System.Boolean">
				<signature>System.Data.Entity.Database.Exists():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.Database.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.Database.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Boolean):System.Void">
				<signature>System.Data.Entity.Database.Initialize(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlQuery" uniqueID="SqlQuery(System.Type;System.String;System.Object[]):System.Collections.IEnumerable">
				<signature>System.Data.Entity.Database.SqlQuery(System.Type;System.String;System.Object[]):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Database.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Connection" uniqueID="get_Connection():System.Data.Common.DbConnection">
				<signature>System.Data.Entity.Database.get_Connection():System.Data.Common.DbConnection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InitializerDelegate" uniqueID="get_InitializerDelegate():System.Action&lt;System.Data.Entity.DbContext&gt;">
				<signature>System.Data.Entity.Database.get_InitializerDelegate():System.Action&lt;System.Data.Entity.DbContext&gt;</signature>
			</method>
		</class>
		<class name="DbExtensions" uniqueID="System.Data.Entity.DbExtensions">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.Entity.DbExtensions.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AsNoTracking" uniqueID="AsNoTracking(System.Linq.IQueryable):System.Linq.IQueryable">
				<signature>System.Data.Entity.DbExtensions.AsNoTracking(System.Linq.IQueryable):System.Linq.IQueryable</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Include" uniqueID="Include(System.Linq.IQueryable;System.String):System.Linq.IQueryable">
				<signature>System.Data.Entity.DbExtensions.Include(System.Linq.IQueryable;System.String):System.Linq.IQueryable</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Include&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;" uniqueID="Include&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;&gt;):System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.DbExtensions.Include&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;&gt;):System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Include&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;" uniqueID="Include&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;&gt;):System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.DbExtensions.Include&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;(System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;;System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;&gt;):System.Linq.IQueryable&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Load" uniqueID="Load(System.Linq.IQueryable):System.Void">
				<signature>System.Data.Entity.DbExtensions.Load(System.Linq.IQueryable):System.Void</signature>
			</method>
		</class>
		<class name="DbSet&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;):System.Data.Entity.DbSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;):System.Data.Entity.DbSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.Add(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.Attach(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.Create():MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSet&lt;MvcMusicStore.Models.Album&gt;" uniqueID="DbSet&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.DbSet&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.Find(System.Object[]):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.Remove(MvcMusicStore.Models.Album):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlQuery" uniqueID="SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet" uniqueID="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Album&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
		</class>
		<class name="DbSet&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Entity.DbSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Entity.DbSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.Add(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.Attach(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.Create():MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSet&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="DbSet&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.DbSet&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.Find(System.Object[]):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.Remove(MvcMusicStore.Models.Artist):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlQuery" uniqueID="SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet" uniqueID="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Artist&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
		</class>
		<class name="IDbSet&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Cart&gt;.Add(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Cart&gt;.Attach(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Cart&gt;.Create():MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Cart&gt;.Find(System.Object[]):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Cart&gt;.Remove(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Cart&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
		<class name="DbSet&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Entity.DbSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Entity.DbSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.Add(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.Attach(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.Create():MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSet&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="DbSet&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.DbSet&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.Find(System.Object[]):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.Remove(MvcMusicStore.Models.Cart):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlQuery" uniqueID="SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet" uniqueID="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Cart&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
		<class name="IDbSet&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Genre&gt;.Add(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Genre&gt;.Attach(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Genre&gt;.Create():MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Genre&gt;.Find(System.Object[]):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Genre&gt;.Remove(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Genre&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="DbSet&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Entity.DbSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Entity.DbSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.Add(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.Attach(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.Create():MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSet&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="DbSet&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.DbSet&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.Find(System.Object[]):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.Remove(MvcMusicStore.Models.Genre):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlQuery" uniqueID="SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet" uniqueID="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Genre&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="IDbSet&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Add(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Attach(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Create():MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Find(System.Object[]):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Remove(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
		</class>
		<class name="IDbSet&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Order&gt;.Add(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Order&gt;.Attach(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Order&gt;.Create():MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Order&gt;.Find(System.Object[]):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Order&gt;.Remove(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.IDbSet&lt;MvcMusicStore.Models.Order&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
		</class>
		<class name="DbSet&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;):System.Data.Entity.DbSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;):System.Data.Entity.DbSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.Add(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.Attach(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.Create():MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSet&lt;MvcMusicStore.Models.Order&gt;" uniqueID="DbSet&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.DbSet&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.Find(System.Object[]):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.Remove(MvcMusicStore.Models.Order):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlQuery" uniqueID="SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet" uniqueID="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.Order&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
		</class>
		<class name="DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Entity.DbSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.op_Implicit(System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Entity.DbSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Add(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Attach(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Create():MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Find(System.Object[]):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Remove(MvcMusicStore.Models.OrderDetail):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlQuery" uniqueID="SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.SqlQuery(System.String;System.Object[]):System.Data.Entity.Infrastructure.DbSqlQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet" uniqueID="System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.DbSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
		</class>
	</package>
	<package name="System.Web">
		<class name="IHttpHandler" uniqueID="System.Web.IHttpHandler">
			<method accessibility="Public" methodKind="Member" name="ProcessRequest" uniqueID="ProcessRequest(System.Web.HttpContext):System.Void">
				<signature>System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReusable" uniqueID="get_IsReusable():System.Boolean">
				<signature>System.Web.IHttpHandler.get_IsReusable():System.Boolean</signature>
			</method>
		</class>
		<class name="IHttpAsyncHandler" uniqueID="System.Web.IHttpAsyncHandler">
			<method accessibility="Public" methodKind="Member" name="BeginProcessRequest" uniqueID="BeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndProcessRequest" uniqueID="EndProcessRequest(System.IAsyncResult):System.Void">
				<signature>System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult):System.Void</signature>
			</method>
		</class>
		<class name="HttpApplication+AsyncAppEventHandlersTable" uniqueID="System.Web.HttpApplication+AsyncAppEventHandlersTable">
			<method accessibility="Protected" methodKind="Member" name="AddHandler" uniqueID="AddHandler(System.Object;System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object;System.Web.RequestNotification;System.Boolean;System.Web.HttpApplication):System.Void">
				<signature>System.Web.HttpApplication+AsyncAppEventHandlersTable.AddHandler(System.Object;System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object;System.Web.RequestNotification;System.Boolean;System.Web.HttpApplication):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpApplication+AsyncAppEventHandlersTable" uniqueID="HttpApplication+AsyncAppEventHandlersTable():System.Void">
				<signature>System.Web.HttpApplication+AsyncAppEventHandlersTable.HttpApplication+AsyncAppEventHandlersTable():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Object):System.Web.HttpApplication+AsyncAppEventHandler">
				<signature>System.Web.HttpApplication+AsyncAppEventHandlersTable.get_Item(System.Object):System.Web.HttpApplication+AsyncAppEventHandler</signature>
			</method>
		</class>
		<class name="IRequestCompletedNotifier" uniqueID="System.Web.IRequestCompletedNotifier">
			<method accessibility="Public" methodKind="Member" name="get_IsRequestCompleted" uniqueID="get_IsRequestCompleted():System.Boolean">
				<signature>System.Web.IRequestCompletedNotifier.get_IsRequestCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="HttpApplication" uniqueID="System.Web.HttpApplication">
			<method accessibility="Private" methodKind="Static" name="&lt;GetConfigInfoForDynamicModules&gt;b__0" uniqueID="&lt;GetConfigInfoForDynamicModules&gt;b__0(System.Web.DynamicModuleRegistryEntry):System.Web.ModuleConfigurationInfo">
				<signature>System.Web.HttpApplication.&lt;GetConfigInfoForDynamicModules&gt;b__0(System.Web.DynamicModuleRegistryEntry):System.Web.ModuleConfigurationInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.HttpApplication.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentWindowsIdentityWithAssert" uniqueID="GetCurrentWindowsIdentityWithAssert():System.Security.Principal.WindowsIdentity">
				<signature>System.Web.HttpApplication.GetCurrentWindowsIdentityWithAssert():System.Security.Principal.WindowsIdentity</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFallbackCulture" uniqueID="GetFallbackCulture(System.String):System.String">
				<signature>System.Web.HttpApplication.GetFallbackCulture(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterModule" uniqueID="RegisterModule(System.Type):System.Void">
				<signature>System.Web.HttpApplication.RegisterModule(System.Type):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegisterModuleInternal" uniqueID="RegisterModuleInternal(System.Type):System.Void">
				<signature>System.Web.HttpApplication.RegisterModuleInternal(System.Type):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetCurrentPrincipalWithAssert" uniqueID="SetCurrentPrincipalWithAssert(System.Security.Principal.IPrincipal):System.Void">
				<signature>System.Web.HttpApplication.SetCurrentPrincipalWithAssert(System.Security.Principal.IPrincipal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_IntegratedModuleList" uniqueID="get_IntegratedModuleList():System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Web.HttpApplication.get_IntegratedModuleList():System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AcquireNotifcationContextLock" uniqueID="AcquireNotifcationContextLock(System.Boolean):System.Void">
				<signature>System.Web.HttpApplication.AcquireNotifcationContextLock(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddEventMapping" uniqueID="AddEventMapping(System.String;System.Web.RequestNotification;System.Boolean;System.Web.HttpApplication+IExecutionStep):System.Void">
				<signature>System.Web.HttpApplication.AddEventMapping(System.String;System.Web.RequestNotification;System.Boolean;System.Web.HttpApplication+IExecutionStep):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnAcquireRequestStateAsync" uniqueID="AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnAcquireRequestStateAsync" uniqueID="AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnAuthenticateRequestAsync" uniqueID="AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnAuthenticateRequestAsync" uniqueID="AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnAuthorizeRequestAsync" uniqueID="AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnAuthorizeRequestAsync" uniqueID="AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnBeginRequestAsync" uniqueID="AddOnBeginRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnBeginRequestAsync" uniqueID="AddOnBeginRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnEndRequestAsync" uniqueID="AddOnEndRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnEndRequestAsync" uniqueID="AddOnEndRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnLogRequestAsync" uniqueID="AddOnLogRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnLogRequestAsync" uniqueID="AddOnLogRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnMapRequestHandlerAsync" uniqueID="AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnMapRequestHandlerAsync" uniqueID="AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostAcquireRequestStateAsync" uniqueID="AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostAcquireRequestStateAsync" uniqueID="AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostAuthenticateRequestAsync" uniqueID="AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostAuthenticateRequestAsync" uniqueID="AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostAuthorizeRequestAsync" uniqueID="AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostAuthorizeRequestAsync" uniqueID="AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostLogRequestAsync" uniqueID="AddOnPostLogRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostLogRequestAsync" uniqueID="AddOnPostLogRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostMapRequestHandlerAsync" uniqueID="AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostMapRequestHandlerAsync" uniqueID="AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostReleaseRequestStateAsync" uniqueID="AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostReleaseRequestStateAsync" uniqueID="AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostRequestHandlerExecuteAsync" uniqueID="AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostRequestHandlerExecuteAsync" uniqueID="AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostResolveRequestCacheAsync" uniqueID="AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostResolveRequestCacheAsync" uniqueID="AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostUpdateRequestCacheAsync" uniqueID="AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPostUpdateRequestCacheAsync" uniqueID="AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPreRequestHandlerExecuteAsync" uniqueID="AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPreRequestHandlerExecuteAsync" uniqueID="AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnReleaseRequestStateAsync" uniqueID="AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnReleaseRequestStateAsync" uniqueID="AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnResolveRequestCacheAsync" uniqueID="AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnResolveRequestCacheAsync" uniqueID="AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnUpdateRequestCacheAsync" uniqueID="AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnUpdateRequestCacheAsync" uniqueID="AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddSendResponseEventHookup" uniqueID="AddSendResponseEventHookup(System.Object;System.Delegate):System.Void">
				<signature>System.Web.HttpApplication.AddSendResponseEventHookup(System.Object;System.Delegate):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddSyncEventHookup" uniqueID="AddSyncEventHookup(System.Object;System.Delegate;System.Web.RequestNotification):System.Void">
				<signature>System.Web.HttpApplication.AddSyncEventHookup(System.Object;System.Delegate;System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddSyncEventHookup" uniqueID="AddSyncEventHookup(System.Object;System.Delegate;System.Web.RequestNotification;System.Boolean):System.Void">
				<signature>System.Web.HttpApplication.AddSyncEventHookup(System.Object;System.Delegate;System.Web.RequestNotification;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AssignContext" uniqueID="AssignContext(System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpApplication.AssignContext(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeginProcessRequestNotification" uniqueID="BeginProcessRequestNotification(System.Web.HttpContext;System.AsyncCallback):System.IAsyncResult">
				<signature>System.Web.HttpApplication.BeginProcessRequestNotification(System.Web.HttpContext;System.AsyncCallback):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildEventMaskDictionary" uniqueID="BuildEventMaskDictionary(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void">
				<signature>System.Web.HttpApplication.BuildEventMaskDictionary(System.Collections.Generic.Dictionary&lt;System.String;System.Web.RequestNotification&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildIntegratedModuleCollection" uniqueID="BuildIntegratedModuleCollection(System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;):System.Web.HttpModuleCollection">
				<signature>System.Web.HttpApplication.BuildIntegratedModuleCollection(System.Collections.Generic.List&lt;System.Web.ModuleConfigurationInfo&gt;):System.Web.HttpModuleCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearError" uniqueID="ClearError():System.Void">
				<signature>System.Web.HttpApplication.ClearError():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompleteRequest" uniqueID="CompleteRequest():System.Void">
				<signature>System.Web.HttpApplication.CompleteRequest():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateDynamicModules" uniqueID="CreateDynamicModules():System.Web.HttpModuleCollection">
				<signature>System.Web.HttpApplication.CreateDynamicModules():System.Web.HttpModuleCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateEventExecutionSteps" uniqueID="CreateEventExecutionSteps(System.Object;System.Collections.ArrayList):System.Void">
				<signature>System.Web.HttpApplication.CreateEventExecutionSteps(System.Object;System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateImplicitAsyncPreloadExecutionStep" uniqueID="CreateImplicitAsyncPreloadExecutionStep():System.Web.HttpApplication+IExecutionStep">
				<signature>System.Web.HttpApplication.CreateImplicitAsyncPreloadExecutionStep():System.Web.HttpApplication+IExecutionStep</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Web.HttpApplication.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DisposeInternal" uniqueID="DisposeInternal():System.Void">
				<signature>System.Web.HttpApplication.DisposeInternal():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndProcessRequestNotification" uniqueID="EndProcessRequestNotification(System.IAsyncResult):System.Web.RequestNotificationStatus">
				<signature>System.Web.HttpApplication.EndProcessRequestNotification(System.IAsyncResult):System.Web.RequestNotificationStatus</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureReleaseState" uniqueID="EnsureReleaseState():System.Void">
				<signature>System.Web.HttpApplication.EnsureReleaseState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteStep" uniqueID="ExecuteStep(System.Web.HttpApplication+IExecutionStep;System.Boolean):System.Exception">
				<signature>System.Web.HttpApplication.ExecuteStep(System.Web.HttpApplication+IExecutionStep;System.Boolean):System.Exception</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetConfigInfoForDynamicModules" uniqueID="GetConfigInfoForDynamicModules():System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;">
				<signature>System.Web.HttpApplication.GetConfigInfoForDynamicModules():System.Collections.Generic.IEnumerable&lt;System.Web.ModuleConfigurationInfo&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetFactory" uniqueID="GetFactory(System.String):System.Web.IHttpHandlerFactory">
				<signature>System.Web.HttpApplication.GetFactory(System.String):System.Web.IHttpHandlerFactory</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetFactory" uniqueID="GetFactory(System.Web.Configuration.HttpHandlerAction):System.Web.IHttpHandlerFactory">
				<signature>System.Web.HttpApplication.GetFactory(System.Web.Configuration.HttpHandlerAction):System.Web.IHttpHandlerFactory</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetHandlerMapping" uniqueID="GetHandlerMapping(System.Web.HttpContext;System.String;System.Web.VirtualPath;System.Boolean):System.Web.Configuration.HttpHandlerAction">
				<signature>System.Web.HttpApplication.GetHandlerMapping(System.Web.HttpContext;System.String;System.Web.VirtualPath;System.Boolean):System.Web.Configuration.HttpHandlerAction</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetModuleCollection" uniqueID="GetModuleCollection(System.IntPtr):System.Web.HttpModuleCollection">
				<signature>System.Web.HttpApplication.GetModuleCollection(System.IntPtr):System.Web.HttpModuleCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetModuleContainer" uniqueID="GetModuleContainer(System.String):System.Web.PipelineModuleStepContainer">
				<signature>System.Web.HttpApplication.GetModuleContainer(System.String):System.Web.PipelineModuleStepContainer</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetOutputCacheProviderName" uniqueID="GetOutputCacheProviderName(System.Web.HttpContext):System.String">
				<signature>System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetVaryByCustomString" uniqueID="GetVaryByCustomString(System.Web.HttpContext;System.String):System.String">
				<signature>System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HasEventSubscription" uniqueID="HasEventSubscription(System.Object):System.Boolean">
				<signature>System.Web.HttpApplication.HasEventSubscription(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HookupEventHandlersForApplicationAndModules" uniqueID="HookupEventHandlersForApplicationAndModules(System.Reflection.MethodInfo[]):System.Void">
				<signature>System.Web.HttpApplication.HookupEventHandlersForApplicationAndModules(System.Reflection.MethodInfo[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpApplication" uniqueID="HttpApplication():System.Void">
				<signature>System.Web.HttpApplication.HttpApplication():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Init" uniqueID="Init():System.Void">
				<signature>System.Web.HttpApplication.Init():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitAppLevelCulture" uniqueID="InitAppLevelCulture():System.Void">
				<signature>System.Web.HttpApplication.InitAppLevelCulture():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitIntegratedModules" uniqueID="InitIntegratedModules():System.Void">
				<signature>System.Web.HttpApplication.InitIntegratedModules():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitInternal" uniqueID="InitInternal(System.Web.HttpContext;System.Web.HttpApplicationState;System.Reflection.MethodInfo[]):System.Void">
				<signature>System.Web.HttpApplication.InitInternal(System.Web.HttpContext;System.Web.HttpApplicationState;System.Reflection.MethodInfo[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitModules" uniqueID="InitModules():System.Void">
				<signature>System.Web.HttpApplication.InitModules():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitModulesCommon" uniqueID="InitModulesCommon():System.Void">
				<signature>System.Web.HttpApplication.InitModulesCommon():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitSpecial" uniqueID="InitSpecial(System.Web.HttpApplicationState;System.Reflection.MethodInfo[];System.IntPtr;System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpApplication.InitSpecial(System.Web.HttpApplicationState;System.Reflection.MethodInfo[];System.IntPtr;System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InvokeMethodWithAssert" uniqueID="InvokeMethodWithAssert(System.Reflection.MethodInfo;System.Int32;System.Object;System.EventArgs):System.Void">
				<signature>System.Web.HttpApplication.InvokeMethodWithAssert(System.Reflection.MethodInfo;System.Int32;System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MapHttpHandler" uniqueID="MapHttpHandler(System.Web.HttpContext;System.String;System.Web.VirtualPath;System.String;System.Boolean):System.Web.IHttpHandler">
				<signature>System.Web.HttpApplication.MapHttpHandler(System.Web.HttpContext;System.String;System.Web.VirtualPath;System.String;System.Boolean):System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MapIntegratedHttpHandler" uniqueID="MapIntegratedHttpHandler(System.Web.HttpContext;System.String;System.Web.VirtualPath;System.String;System.Boolean;System.Boolean):System.Web.IHttpHandler">
				<signature>System.Web.HttpApplication.MapIntegratedHttpHandler(System.Web.HttpContext;System.String;System.Web.VirtualPath;System.String;System.Boolean;System.Boolean):System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnThreadEnter" uniqueID="OnThreadEnter():System.Web.ThreadContext">
				<signature>System.Web.HttpApplication.OnThreadEnter():System.Web.ThreadContext</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnThreadEnter" uniqueID="OnThreadEnter(System.Boolean):System.Web.ThreadContext">
				<signature>System.Web.HttpApplication.OnThreadEnter(System.Boolean):System.Web.ThreadContext</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnThreadEnterPrivate" uniqueID="OnThreadEnterPrivate(System.Boolean):System.Web.ThreadContext">
				<signature>System.Web.HttpApplication.OnThreadEnterPrivate(System.Boolean):System.Web.ThreadContext</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessEventSubscriptions" uniqueID="ProcessEventSubscriptions(System.Web.RequestNotification;System.Web.RequestNotification):System.Void">
				<signature>System.Web.HttpApplication.ProcessEventSubscriptions(System.Web.RequestNotification;System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ProcessSpecialRequest" uniqueID="ProcessSpecialRequest(System.Web.HttpContext;System.Reflection.MethodInfo;System.Int32;System.Object;System.EventArgs;System.Web.SessionState.HttpSessionState):System.Void">
				<signature>System.Web.HttpApplication.ProcessSpecialRequest(System.Web.HttpContext;System.Reflection.MethodInfo;System.Int32;System.Object;System.EventArgs;System.Web.SessionState.HttpSessionState):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseErrorWithoutContext" uniqueID="RaiseErrorWithoutContext(System.Exception):System.Void">
				<signature>System.Web.HttpApplication.RaiseErrorWithoutContext(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RaiseOnError" uniqueID="RaiseOnError():System.Void">
				<signature>System.Web.HttpApplication.RaiseOnError():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseOnPreSendRequestContent" uniqueID="RaiseOnPreSendRequestContent():System.Void">
				<signature>System.Web.HttpApplication.RaiseOnPreSendRequestContent():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseOnPreSendRequestHeaders" uniqueID="RaiseOnPreSendRequestHeaders():System.Void">
				<signature>System.Web.HttpApplication.RaiseOnPreSendRequestHeaders():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RaiseOnRequestCompleted" uniqueID="RaiseOnRequestCompleted():System.Void">
				<signature>System.Web.HttpApplication.RaiseOnRequestCompleted():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RecordError" uniqueID="RecordError(System.Exception):System.Void">
				<signature>System.Web.HttpApplication.RecordError(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RecycleHandlers" uniqueID="RecycleHandlers():System.Void">
				<signature>System.Web.HttpApplication.RecycleHandlers():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RegisterEventSubscriptionsWithIIS" uniqueID="RegisterEventSubscriptionsWithIIS(System.IntPtr;System.Web.HttpContext;System.Reflection.MethodInfo[]):System.Void">
				<signature>System.Web.HttpApplication.RegisterEventSubscriptionsWithIIS(System.IntPtr;System.Web.HttpContext;System.Reflection.MethodInfo[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RegisterIntegratedEvent" uniqueID="RegisterIntegratedEvent(System.IntPtr;System.String;System.Web.RequestNotification;System.Web.RequestNotification;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpApplication.RegisterIntegratedEvent(System.IntPtr;System.String;System.Web.RequestNotification;System.Web.RequestNotification;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReleaseAppInstance" uniqueID="ReleaseAppInstance():System.Void">
				<signature>System.Web.HttpApplication.ReleaseAppInstance():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReleaseNotifcationContextLock" uniqueID="ReleaseNotifcationContextLock():System.Void">
				<signature>System.Web.HttpApplication.ReleaseNotifcationContextLock():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RemoveSendResponseEventHookup" uniqueID="RemoveSendResponseEventHookup(System.Object;System.Delegate):System.Void">
				<signature>System.Web.HttpApplication.RemoveSendResponseEventHookup(System.Object;System.Delegate):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveSyncEventHookup" uniqueID="RemoveSyncEventHookup(System.Object;System.Delegate;System.Web.RequestNotification):System.Void">
				<signature>System.Web.HttpApplication.RemoveSyncEventHookup(System.Object;System.Delegate;System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveSyncEventHookup" uniqueID="RemoveSyncEventHookup(System.Object;System.Delegate;System.Web.RequestNotification;System.Boolean):System.Void">
				<signature>System.Web.HttpApplication.RemoveSyncEventHookup(System.Object;System.Delegate;System.Web.RequestNotification;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RestoreAppLevelCulture" uniqueID="RestoreAppLevelCulture():System.Void">
				<signature>System.Web.HttpApplication.RestoreAppLevelCulture():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResumeSteps" uniqueID="ResumeSteps(System.Exception):System.Void">
				<signature>System.Web.HttpApplication.ResumeSteps(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResumeStepsFromThreadPoolThread" uniqueID="ResumeStepsFromThreadPoolThread(System.Exception):System.Void">
				<signature>System.Web.HttpApplication.ResumeStepsFromThreadPoolThread(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResumeStepsWaitCallback" uniqueID="ResumeStepsWaitCallback(System.Object):System.Void">
				<signature>System.Web.HttpApplication.ResumeStepsWaitCallback(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetAppLevelCulture" uniqueID="SetAppLevelCulture():System.Void">
				<signature>System.Web.HttpApplication.SetAppLevelCulture():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.IHttpAsyncHandler.BeginProcessRequest" uniqueID="System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.IHttpAsyncHandler.EndProcessRequest" uniqueID="System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult):System.Void">
				<signature>System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.IHttpHandler.ProcessRequest" uniqueID="System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.IHttpHandler.get_IsReusable" uniqueID="System.Web.IHttpHandler.get_IsReusable():System.Boolean">
				<signature>System.Web.HttpApplication.System.Web.IHttpHandler.get_IsReusable():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.IRequestCompletedNotifier.get_IsRequestCompleted" uniqueID="System.Web.IRequestCompletedNotifier.get_IsRequestCompleted():System.Boolean">
				<signature>System.Web.HttpApplication.System.Web.IRequestCompletedNotifier.get_IsRequestCompleted():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Util.ISyncContext.Enter" uniqueID="System.Web.Util.ISyncContext.Enter():System.Web.Util.ISyncContextLock">
				<signature>System.Web.HttpApplication.System.Web.Util.ISyncContext.Enter():System.Web.Util.ISyncContextLock</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.Util.ISyncContext.get_HttpContext" uniqueID="System.Web.Util.ISyncContext.get_HttpContext():System.Web.HttpContext">
				<signature>System.Web.HttpApplication.System.Web.Util.ISyncContext.get_HttpContext():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ThrowIfEventBindingDisallowed" uniqueID="ThrowIfEventBindingDisallowed():System.Void">
				<signature>System.Web.HttpApplication.ThrowIfEventBindingDisallowed():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_AcquireRequestState" uniqueID="add_AcquireRequestState(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_AcquireRequestState(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_AuthenticateRequest" uniqueID="add_AuthenticateRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_AuthenticateRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_AuthorizeRequest" uniqueID="add_AuthorizeRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_AuthorizeRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_BeginRequest" uniqueID="add_BeginRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_BeginRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_DefaultAuthentication" uniqueID="add_DefaultAuthentication(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_DefaultAuthentication(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Disposed" uniqueID="add_Disposed(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_EndRequest" uniqueID="add_EndRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_EndRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Error" uniqueID="add_Error(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_Error(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_LogRequest" uniqueID="add_LogRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_LogRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_MapRequestHandler" uniqueID="add_MapRequestHandler(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_MapRequestHandler(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostAcquireRequestState" uniqueID="add_PostAcquireRequestState(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostAcquireRequestState(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostAuthenticateRequest" uniqueID="add_PostAuthenticateRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostAuthenticateRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostAuthorizeRequest" uniqueID="add_PostAuthorizeRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostAuthorizeRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostLogRequest" uniqueID="add_PostLogRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostLogRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostMapRequestHandler" uniqueID="add_PostMapRequestHandler(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostMapRequestHandler(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostReleaseRequestState" uniqueID="add_PostReleaseRequestState(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostReleaseRequestState(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostRequestHandlerExecute" uniqueID="add_PostRequestHandlerExecute(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostRequestHandlerExecute(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostResolveRequestCache" uniqueID="add_PostResolveRequestCache(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostResolveRequestCache(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PostUpdateRequestCache" uniqueID="add_PostUpdateRequestCache(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PostUpdateRequestCache(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PreRequestHandlerExecute" uniqueID="add_PreRequestHandlerExecute(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PreRequestHandlerExecute(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PreSendRequestContent" uniqueID="add_PreSendRequestContent(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PreSendRequestContent(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PreSendRequestHeaders" uniqueID="add_PreSendRequestHeaders(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_PreSendRequestHeaders(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ReleaseRequestState" uniqueID="add_ReleaseRequestState(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_ReleaseRequestState(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RequestCompleted" uniqueID="add_RequestCompleted(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_RequestCompleted(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ResolveRequestCache" uniqueID="add_ResolveRequestCache(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_ResolveRequestCache(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_UpdateRequestCache" uniqueID="add_UpdateRequestCache(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.add_UpdateRequestCache(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AppEvent" uniqueID="get_AppEvent():System.EventArgs">
				<signature>System.Web.HttpApplication.get_AppEvent():System.EventArgs</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Application" uniqueID="get_Application():System.Web.HttpApplicationState">
				<signature>System.Web.HttpApplication.get_Application():System.Web.HttpApplicationState</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_AsyncEvents" uniqueID="get_AsyncEvents():System.Web.HttpApplication+AsyncAppEventHandlersTable">
				<signature>System.Web.HttpApplication.get_AsyncEvents():System.Web.HttpApplication+AsyncAppEventHandlersTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AsyncResult" uniqueID="get_AsyncResult():System.Web.HttpAsyncResult">
				<signature>System.Web.HttpApplication.get_AsyncResult():System.Web.HttpAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Web.HttpContext">
				<signature>System.Web.HttpApplication.get_Context():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CurrentModuleCollectionKey" uniqueID="get_CurrentModuleCollectionKey():System.String">
				<signature>System.Web.HttpApplication.get_CurrentModuleCollectionKey():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_CurrentModuleContainer" uniqueID="get_CurrentModuleContainer():System.Web.PipelineModuleStepContainer">
				<signature>System.Web.HttpApplication.get_CurrentModuleContainer():System.Web.PipelineModuleStepContainer</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EntityBuffer" uniqueID="get_EntityBuffer():System.Byte[]">
				<signature>System.Web.HttpApplication.get_EntityBuffer():System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Events" uniqueID="get_Events():System.ComponentModel.EventHandlerList">
				<signature>System.Web.HttpApplication.get_Events():System.ComponentModel.EventHandlerList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_IsContainerInitalizationAllowed" uniqueID="get_IsContainerInitalizationAllowed():System.Boolean">
				<signature>System.Web.HttpApplication.get_IsContainerInitalizationAllowed():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsRequestCompleted" uniqueID="get_IsRequestCompleted():System.Boolean">
				<signature>System.Web.HttpApplication.get_IsRequestCompleted():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LastError" uniqueID="get_LastError():System.Exception">
				<signature>System.Web.HttpApplication.get_LastError():System.Exception</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ModuleContainers" uniqueID="get_ModuleContainers():System.Web.PipelineModuleStepContainer[]">
				<signature>System.Web.HttpApplication.get_ModuleContainers():System.Web.PipelineModuleStepContainer[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Modules" uniqueID="get_Modules():System.Web.HttpModuleCollection">
				<signature>System.Web.HttpApplication.get_Modules():System.Web.HttpModuleCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Request" uniqueID="get_Request():System.Web.HttpRequest">
				<signature>System.Web.HttpApplication.get_Request():System.Web.HttpRequest</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Response" uniqueID="get_Response():System.Web.HttpResponse">
				<signature>System.Web.HttpApplication.get_Response():System.Web.HttpResponse</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Server" uniqueID="get_Server():System.Web.HttpServerUtility">
				<signature>System.Web.HttpApplication.get_Server():System.Web.HttpServerUtility</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Session" uniqueID="get_Session():System.Web.SessionState.HttpSessionState">
				<signature>System.Web.HttpApplication.get_Session():System.Web.SessionState.HttpSessionState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Site" uniqueID="get_Site():System.ComponentModel.ISite">
				<signature>System.Web.HttpApplication.get_Site():System.ComponentModel.ISite</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_User" uniqueID="get_User():System.Security.Principal.IPrincipal">
				<signature>System.Web.HttpApplication.get_User():System.Security.Principal.IPrincipal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_AcquireRequestState" uniqueID="remove_AcquireRequestState(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_AcquireRequestState(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_AuthenticateRequest" uniqueID="remove_AuthenticateRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_AuthenticateRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_AuthorizeRequest" uniqueID="remove_AuthorizeRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_AuthorizeRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_BeginRequest" uniqueID="remove_BeginRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_BeginRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_DefaultAuthentication" uniqueID="remove_DefaultAuthentication(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_DefaultAuthentication(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Disposed" uniqueID="remove_Disposed(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_EndRequest" uniqueID="remove_EndRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_EndRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Error" uniqueID="remove_Error(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_Error(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_LogRequest" uniqueID="remove_LogRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_LogRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_MapRequestHandler" uniqueID="remove_MapRequestHandler(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_MapRequestHandler(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostAcquireRequestState" uniqueID="remove_PostAcquireRequestState(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostAcquireRequestState(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostAuthenticateRequest" uniqueID="remove_PostAuthenticateRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostAuthenticateRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostAuthorizeRequest" uniqueID="remove_PostAuthorizeRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostAuthorizeRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostLogRequest" uniqueID="remove_PostLogRequest(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostLogRequest(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostMapRequestHandler" uniqueID="remove_PostMapRequestHandler(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostMapRequestHandler(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostReleaseRequestState" uniqueID="remove_PostReleaseRequestState(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostReleaseRequestState(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostRequestHandlerExecute" uniqueID="remove_PostRequestHandlerExecute(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostRequestHandlerExecute(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostResolveRequestCache" uniqueID="remove_PostResolveRequestCache(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostResolveRequestCache(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PostUpdateRequestCache" uniqueID="remove_PostUpdateRequestCache(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PostUpdateRequestCache(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PreRequestHandlerExecute" uniqueID="remove_PreRequestHandlerExecute(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PreRequestHandlerExecute(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PreSendRequestContent" uniqueID="remove_PreSendRequestContent(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PreSendRequestContent(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PreSendRequestHeaders" uniqueID="remove_PreSendRequestHeaders(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_PreSendRequestHeaders(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ReleaseRequestState" uniqueID="remove_ReleaseRequestState(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_ReleaseRequestState(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RequestCompleted" uniqueID="remove_RequestCompleted(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_RequestCompleted(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ResolveRequestCache" uniqueID="remove_ResolveRequestCache(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_ResolveRequestCache(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_UpdateRequestCache" uniqueID="remove_UpdateRequestCache(System.EventHandler):System.Void">
				<signature>System.Web.HttpApplication.remove_UpdateRequestCache(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AppEvent" uniqueID="set_AppEvent(System.EventArgs):System.Void">
				<signature>System.Web.HttpApplication.set_AppEvent(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AsyncResult" uniqueID="set_AsyncResult(System.Web.HttpAsyncResult):System.Void">
				<signature>System.Web.HttpApplication.set_AsyncResult(System.Web.HttpAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Site" uniqueID="set_Site(System.ComponentModel.ISite):System.Void">
				<signature>System.Web.HttpApplication.set_Site(System.ComponentModel.ISite):System.Void</signature>
			</method>
		</class>
		<class name="HttpContext" uniqueID="System.Web.HttpContext">
			<method accessibility="Private" methodKind="Static" name="&lt;DisposeTimedOutToken&gt;b__7" uniqueID="&lt;DisposeTimedOutToken&gt;b__7():System.Web.Util.CancellationTokenHelper">
				<signature>System.Web.HttpContext.&lt;DisposeTimedOutToken&gt;b__7():System.Web.Util.CancellationTokenHelper</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;MustTimeout&gt;b__9" uniqueID="&lt;MustTimeout&gt;b__9():System.Web.Util.CancellationTokenHelper">
				<signature>System.Web.HttpContext.&lt;MustTimeout&gt;b__9():System.Web.Util.CancellationTokenHelper</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;RaiseOnPipelineCompleted&gt;b__2" uniqueID="&lt;RaiseOnPipelineCompleted&gt;b__2(System.IDisposable):System.Void">
				<signature>System.Web.HttpContext.&lt;RaiseOnPipelineCompleted&gt;b__2(System.IDisposable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.HttpContext.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;get_TimedOutToken&gt;b__5" uniqueID="&lt;get_TimedOutToken&gt;b__5():System.Web.Util.CancellationTokenHelper">
				<signature>System.Web.HttpContext.&lt;get_TimedOutToken&gt;b__5():System.Web.Util.CancellationTokenHelper</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetAppConfig" uniqueID="GetAppConfig(System.String):System.Object">
				<signature>System.Web.HttpContext.GetAppConfig(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetGlobalResourceObject" uniqueID="GetGlobalResourceObject(System.String;System.String):System.Object">
				<signature>System.Web.HttpContext.GetGlobalResourceObject(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetGlobalResourceObject" uniqueID="GetGlobalResourceObject(System.String;System.String;System.Globalization.CultureInfo):System.Object">
				<signature>System.Web.HttpContext.GetGlobalResourceObject(System.String;System.String;System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetLocalResourceObject" uniqueID="GetLocalResourceObject(System.String;System.String):System.Object">
				<signature>System.Web.HttpContext.GetLocalResourceObject(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetLocalResourceObject" uniqueID="GetLocalResourceObject(System.String;System.String;System.Globalization.CultureInfo):System.Object">
				<signature>System.Web.HttpContext.GetLocalResourceObject(System.String;System.String;System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Current" uniqueID="get_Current():System.Web.HttpContext">
				<signature>System.Web.HttpContext.get_Current():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_Current" uniqueID="set_Current(System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpContext.set_Current(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;RaiseOnRequestCompleted&gt;b__0" uniqueID="&lt;RaiseOnRequestCompleted&gt;b__0(System.Action&lt;System.Web.HttpContext&gt;):System.Void">
				<signature>System.Web.HttpContext.&lt;RaiseOnRequestCompleted&gt;b__0(System.Action&lt;System.Web.HttpContext&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AcceptWebSocketRequest" uniqueID="AcceptWebSocketRequest(System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Web.HttpContext.AcceptWebSocketRequest(System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AcceptWebSocketRequest" uniqueID="AcceptWebSocketRequest(System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext;System.Threading.Tasks.Task&gt;;System.Web.WebSockets.AspNetWebSocketOptions):System.Void">
				<signature>System.Web.HttpContext.AcceptWebSocketRequest(System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext;System.Threading.Tasks.Task&gt;;System.Web.WebSockets.AspNetWebSocketOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddDelayedHttpSessionState" uniqueID="AddDelayedHttpSessionState(System.Web.SessionState.SessionStateModule):System.Void">
				<signature>System.Web.HttpContext.AddDelayedHttpSessionState(System.Web.SessionState.SessionStateModule):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddError" uniqueID="AddError(System.Exception):System.Void">
				<signature>System.Web.HttpContext.AddError(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnRequestCompleted" uniqueID="AddOnRequestCompleted(System.Action&lt;System.Web.HttpContext&gt;):System.Web.ISubscriptionToken">
				<signature>System.Web.HttpContext.AddOnRequestCompleted(System.Action&lt;System.Web.HttpContext&gt;):System.Web.ISubscriptionToken</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeginCancellablePeriod" uniqueID="BeginCancellablePeriod():System.Void">
				<signature>System.Web.HttpContext.BeginCancellablePeriod():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CallISAPI" uniqueID="CallISAPI(System.Web.UnsafeNativeMethods+CallISAPIFunc;System.Byte[];System.Byte[]):System.Int32">
				<signature>System.Web.HttpContext.CallISAPI(System.Web.UnsafeNativeMethods+CallISAPIFunc;System.Byte[];System.Byte[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearError" uniqueID="ClearError():System.Void">
				<signature>System.Web.HttpContext.ClearError():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearReferences" uniqueID="ClearReferences():System.Void">
				<signature>System.Web.HttpContext.ClearReferences():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ClearReferencesForWebSocketProcessing" uniqueID="ClearReferencesForWebSocketProcessing():System.Void">
				<signature>System.Web.HttpContext.ClearReferencesForWebSocketProcessing():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CompleteTransitionToWebSocket" uniqueID="CompleteTransitionToWebSocket():System.Void">
				<signature>System.Web.HttpContext.CompleteTransitionToWebSocket():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateNewAspNetSynchronizationContext" uniqueID="CreateNewAspNetSynchronizationContext():System.Web.AspNetSynchronizationContextBase">
				<signature>System.Web.HttpContext.CreateNewAspNetSynchronizationContext():System.Web.AspNetSynchronizationContextBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CultureFromConfig" uniqueID="CultureFromConfig(System.String;System.Boolean):System.Globalization.CultureInfo">
				<signature>System.Web.HttpContext.CultureFromConfig(System.String;System.Boolean):System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DisableNotifications" uniqueID="DisableNotifications(System.Web.RequestNotification;System.Web.RequestNotification):System.Void">
				<signature>System.Web.HttpContext.DisableNotifications(System.Web.RequestNotification;System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DisposeOnPipelineCompleted" uniqueID="DisposeOnPipelineCompleted(System.IDisposable):System.Web.ISubscriptionToken">
				<signature>System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable):System.Web.ISubscriptionToken</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DisposeTimedOutToken" uniqueID="DisposeTimedOutToken():System.Void">
				<signature>System.Web.HttpContext.DisposeTimedOutToken():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndCancellablePeriod" uniqueID="EndCancellablePeriod():System.Void">
				<signature>System.Web.HttpContext.EndCancellablePeriod():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureHasNotTransitionedToWebSocket" uniqueID="EnsureHasNotTransitionedToWebSocket():System.Void">
				<signature>System.Web.HttpContext.EnsureHasNotTransitionedToWebSocket():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureTimeout" uniqueID="EnsureTimeout():System.Int64">
				<signature>System.Web.HttpContext.EnsureTimeout():System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishPipelineRequest" uniqueID="FinishPipelineRequest():System.Void">
				<signature>System.Web.HttpContext.FinishPipelineRequest():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishRequestForCachedPathData" uniqueID="FinishRequestForCachedPathData(System.Int32):System.Void">
				<signature>System.Web.HttpContext.FinishRequestForCachedPathData(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConfig" uniqueID="GetConfig(System.String):System.Object">
				<signature>System.Web.HttpContext.GetConfig(System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetConfigurationPathData" uniqueID="GetConfigurationPathData():System.Web.CachedPathData">
				<signature>System.Web.HttpContext.GetConfigurationPathData():System.Web.CachedPathData</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEurl" uniqueID="GetEurl():System.String">
				<signature>System.Web.HttpContext.GetEurl():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetFilePathData" uniqueID="GetFilePathData():System.Web.CachedPathData">
				<signature>System.Web.HttpContext.GetFilePathData():System.Web.CachedPathData</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetPathData" uniqueID="GetPathData(System.Web.VirtualPath):System.Web.CachedPathData">
				<signature>System.Web.HttpContext.GetPathData(System.Web.VirtualPath):System.Web.CachedPathData</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRuntimeConfig" uniqueID="GetRuntimeConfig():System.Web.Configuration.RuntimeConfig">
				<signature>System.Web.HttpContext.GetRuntimeConfig():System.Web.Configuration.RuntimeConfig</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRuntimeConfig" uniqueID="GetRuntimeConfig(System.Web.VirtualPath):System.Web.Configuration.RuntimeConfig">
				<signature>System.Web.HttpContext.GetRuntimeConfig(System.Web.VirtualPath):System.Web.Configuration.RuntimeConfig</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSection" uniqueID="GetSection(System.String):System.Object">
				<signature>System.Web.HttpContext.GetSection(System.String):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetWebSocketInitStatus" uniqueID="GetWebSocketInitStatus():System.Web.HttpContext+WebSocketInitStatus">
				<signature>System.Web.HttpContext.GetWebSocketInitStatus():System.Web.HttpContext+WebSocketInitStatus</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpContext" uniqueID="HttpContext(System.Web.HttpRequest;System.Web.HttpResponse):System.Void">
				<signature>System.Web.HttpContext.HttpContext(System.Web.HttpRequest;System.Web.HttpResponse):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpContext" uniqueID="HttpContext(System.Web.HttpWorkerRequest):System.Void">
				<signature>System.Web.HttpContext.HttpContext(System.Web.HttpWorkerRequest):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpContext" uniqueID="HttpContext(System.Web.HttpWorkerRequest;System.Boolean):System.Void">
				<signature>System.Web.HttpContext.HttpContext(System.Web.HttpWorkerRequest;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Init" uniqueID="Init(System.Web.HttpRequest;System.Web.HttpResponse):System.Void">
				<signature>System.Web.HttpContext.Init(System.Web.HttpRequest;System.Web.HttpResponse):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InstallNewAspNetSynchronizationContext" uniqueID="InstallNewAspNetSynchronizationContext():System.Web.AspNetSynchronizationContextBase">
				<signature>System.Web.HttpContext.InstallNewAspNetSynchronizationContext():System.Web.AspNetSynchronizationContextBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvokeCancellableCallback" uniqueID="InvokeCancellableCallback(System.Threading.WaitCallback;System.Object):System.Void">
				<signature>System.Web.HttpContext.InvokeCancellableCallback(System.Threading.WaitCallback;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MustTimeout" uniqueID="MustTimeout(System.DateTime):System.Threading.Thread">
				<signature>System.Web.HttpContext.MustTimeout(System.DateTime):System.Threading.Thread</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NeedToInitializeApp" uniqueID="NeedToInitializeApp():System.Boolean">
				<signature>System.Web.HttpContext.NeedToInitializeApp():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PopTraceContext" uniqueID="PopTraceContext():System.Void">
				<signature>System.Web.HttpContext.PopTraceContext():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PushTraceContext" uniqueID="PushTraceContext():System.Void">
				<signature>System.Web.HttpContext.PushTraceContext():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseOnPipelineCompleted" uniqueID="RaiseOnPipelineCompleted():System.Void">
				<signature>System.Web.HttpContext.RaiseOnPipelineCompleted():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseOnRequestCompleted" uniqueID="RaiseOnRequestCompleted():System.Void">
				<signature>System.Web.HttpContext.RaiseOnRequestCompleted():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemapHandler" uniqueID="RemapHandler(System.Web.IHttpHandler):System.Void">
				<signature>System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveDelayedHttpSessionState" uniqueID="RemoveDelayedHttpSessionState():System.Void">
				<signature>System.Web.HttpContext.RemoveDelayedHttpSessionState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveSqlDependencyCookie" uniqueID="RemoveSqlDependencyCookie():System.Void">
				<signature>System.Web.HttpContext.RemoveSqlDependencyCookie():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReportRuntimeErrorIfExists" uniqueID="ReportRuntimeErrorIfExists(System.Web.RequestNotificationStatus):System.Void">
				<signature>System.Web.HttpContext.ReportRuntimeErrorIfExists(System.Web.RequestNotificationStatus):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RequestRequiresAuthorization" uniqueID="RequestRequiresAuthorization():System.Boolean">
				<signature>System.Web.HttpContext.RequestRequiresAuthorization():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetSqlDependencyCookie" uniqueID="ResetSqlDependencyCookie():System.Void">
				<signature>System.Web.HttpContext.ResetSqlDependencyCookie():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RestoreCurrentHandler" uniqueID="RestoreCurrentHandler():System.Void">
				<signature>System.Web.HttpContext.RestoreCurrentHandler():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RestoreSavedAspNetSynchronizationContext" uniqueID="RestoreSavedAspNetSynchronizationContext(System.Web.AspNetSynchronizationContextBase):System.Void">
				<signature>System.Web.HttpContext.RestoreSavedAspNetSynchronizationContext(System.Web.AspNetSynchronizationContextBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.String):System.Void">
				<signature>System.Web.HttpContext.RewritePath(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpContext.RewritePath(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.String;System.String;System.String):System.Void">
				<signature>System.Web.HttpContext.RewritePath(System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.String;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpContext.RewritePath(System.String;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.Web.VirtualPath;System.Web.VirtualPath;System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpContext.RewritePath(System.Web.VirtualPath;System.Web.VirtualPath;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Root" uniqueID="Root():System.Void">
				<signature>System.Web.HttpContext.Root():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SendEmptyResponse" uniqueID="SendEmptyResponse():System.Void">
				<signature>System.Web.HttpContext.SendEmptyResponse():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCurrentHandler" uniqueID="SetCurrentHandler(System.Web.IHttpHandler):System.Void">
				<signature>System.Web.HttpContext.SetCurrentHandler(System.Web.IHttpHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetImpersonationEnabled" uniqueID="SetImpersonationEnabled():System.Void">
				<signature>System.Web.HttpContext.SetImpersonationEnabled():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetPrincipalNoDemand" uniqueID="SetPrincipalNoDemand(System.Security.Principal.IPrincipal):System.Void">
				<signature>System.Web.HttpContext.SetPrincipalNoDemand(System.Security.Principal.IPrincipal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetPrincipalNoDemand" uniqueID="SetPrincipalNoDemand(System.Security.Principal.IPrincipal;System.Boolean):System.Void">
				<signature>System.Web.HttpContext.SetPrincipalNoDemand(System.Security.Principal.IPrincipal;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetSessionStateBehavior" uniqueID="SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior):System.Void">
				<signature>System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetSkipAuthorizationNoDemand" uniqueID="SetSkipAuthorizationNoDemand(System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.HttpContext.SetSkipAuthorizationNoDemand(System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetStartTime" uniqueID="SetStartTime():System.Void">
				<signature>System.Web.HttpContext.SetStartTime():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SwitchPrincipalContainer" uniqueID="SwitchPrincipalContainer(System.Web.IPrincipalContainer):System.Void">
				<signature>System.Web.HttpContext.SwitchPrincipalContainer(System.Web.IPrincipalContainer):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IServiceProvider.GetService" uniqueID="System.IServiceProvider.GetService(System.Type):System.Object">
				<signature>System.Web.HttpContext.System.IServiceProvider.GetService(System.Type):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.IPrincipalContainer.get_Principal" uniqueID="System.Web.IPrincipalContainer.get_Principal():System.Security.Principal.IPrincipal">
				<signature>System.Web.HttpContext.System.Web.IPrincipalContainer.get_Principal():System.Security.Principal.IPrincipal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.IPrincipalContainer.set_Principal" uniqueID="System.Web.IPrincipalContainer.set_Principal(System.Security.Principal.IPrincipal):System.Void">
				<signature>System.Web.HttpContext.System.Web.IPrincipalContainer.set_Principal(System.Security.Principal.IPrincipal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransitionToWebSocketState" uniqueID="TransitionToWebSocketState(System.Web.WebSocketTransitionState):System.Void">
				<signature>System.Web.HttpContext.TransitionToWebSocketState(System.Web.WebSocketTransitionState):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Unroot" uniqueID="Unroot():System.Void">
				<signature>System.Web.HttpContext.Unroot():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UserLanguageFromContext" uniqueID="UserLanguageFromContext():System.String">
				<signature>System.Web.HttpContext.UserLanguageFromContext():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidatePath" uniqueID="ValidatePath():System.Void">
				<signature>System.Web.HttpContext.ValidatePath():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="WaitForExceptionIfCancelled" uniqueID="WaitForExceptionIfCancelled():System.Void">
				<signature>System.Web.HttpContext.WaitForExceptionIfCancelled():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllErrors" uniqueID="get_AllErrors():System.Exception[]">
				<signature>System.Web.HttpContext.get_AllErrors():System.Exception[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowAsyncDuringSyncStages" uniqueID="get_AllowAsyncDuringSyncStages():System.Boolean">
				<signature>System.Web.HttpContext.get_AllowAsyncDuringSyncStages():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Application" uniqueID="get_Application():System.Web.HttpApplicationState">
				<signature>System.Web.HttpContext.get_Application():System.Web.HttpApplicationState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ApplicationInstance" uniqueID="get_ApplicationInstance():System.Web.HttpApplication">
				<signature>System.Web.HttpContext.get_ApplicationInstance():System.Web.HttpApplication</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AreResponseHeadersSent" uniqueID="get_AreResponseHeadersSent():System.Boolean">
				<signature>System.Web.HttpContext.get_AreResponseHeadersSent():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AsyncAppHandler" uniqueID="get_AsyncAppHandler():System.Web.IHttpAsyncHandler">
				<signature>System.Web.HttpContext.get_AsyncAppHandler():System.Web.IHttpAsyncHandler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncPreloadMode" uniqueID="get_AsyncPreloadMode():System.Web.Configuration.AsyncPreloadModeFlags">
				<signature>System.Web.HttpContext.get_AsyncPreloadMode():System.Web.Configuration.AsyncPreloadModeFlags</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cache" uniqueID="get_Cache():System.Web.Caching.Cache">
				<signature>System.Web.HttpContext.get_Cache():System.Web.Caching.Cache</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientIdentityToken" uniqueID="get_ClientIdentityToken():System.IntPtr">
				<signature>System.Web.HttpContext.get_ClientIdentityToken():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConfigurationPath" uniqueID="get_ConfigurationPath():System.Web.VirtualPath">
				<signature>System.Web.HttpContext.get_ConfigurationPath():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CookielessHelper" uniqueID="get_CookielessHelper():System.Web.Security.CookielessHelperClass">
				<signature>System.Web.HttpContext.get_CookielessHelper():System.Web.Security.CookielessHelperClass</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentHandler" uniqueID="get_CurrentHandler():System.Web.IHttpHandler">
				<signature>System.Web.HttpContext.get_CurrentHandler():System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CurrentModuleEventIndex" uniqueID="get_CurrentModuleEventIndex():System.Int32">
				<signature>System.Web.HttpContext.get_CurrentModuleEventIndex():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CurrentModuleIndex" uniqueID="get_CurrentModuleIndex():System.Int32">
				<signature>System.Web.HttpContext.get_CurrentModuleIndex():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentNotification" uniqueID="get_CurrentNotification():System.Web.RequestNotification">
				<signature>System.Web.HttpContext.get_CurrentNotification():System.Web.RequestNotification</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CurrentNotificationFlags" uniqueID="get_CurrentNotificationFlags():System.Int32">
				<signature>System.Web.HttpContext.get_CurrentNotificationFlags():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CurrentThread" uniqueID="get_CurrentThread():System.Threading.Thread">
				<signature>System.Web.HttpContext.get_CurrentThread():System.Threading.Thread</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DidCurrentThreadStartWebSocketTransition" uniqueID="get_DidCurrentThreadStartWebSocketTransition():System.Boolean">
				<signature>System.Web.HttpContext.get_DidCurrentThreadStartWebSocketTransition():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DisableCustomHttpEncoder" uniqueID="get_DisableCustomHttpEncoder():System.Boolean">
				<signature>System.Web.HttpContext.get_DisableCustomHttpEncoder():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DynamicCulture" uniqueID="get_DynamicCulture():System.Globalization.CultureInfo">
				<signature>System.Web.HttpContext.get_DynamicCulture():System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DynamicUICulture" uniqueID="get_DynamicUICulture():System.Globalization.CultureInfo">
				<signature>System.Web.HttpContext.get_DynamicUICulture():System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Error" uniqueID="get_Error():System.Exception">
				<signature>System.Web.HttpContext.get_Error():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FirstRequest" uniqueID="get_FirstRequest():System.Boolean">
				<signature>System.Web.HttpContext.get_FirstRequest():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Handler" uniqueID="get_Handler():System.Web.IHttpHandler">
				<signature>System.Web.HttpContext.get_Handler():System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasWebSocketRequestTransitionCompleted" uniqueID="get_HasWebSocketRequestTransitionCompleted():System.Boolean">
				<signature>System.Web.HttpContext.get_HasWebSocketRequestTransitionCompleted():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasWebSocketRequestTransitionStarted" uniqueID="get_HasWebSocketRequestTransitionStarted():System.Boolean">
				<signature>System.Web.HttpContext.get_HasWebSocketRequestTransitionStarted():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ImpersonationToken" uniqueID="get_ImpersonationToken():System.IntPtr">
				<signature>System.Web.HttpContext.get_ImpersonationToken():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsChangeInRequestHeaders" uniqueID="get_IsChangeInRequestHeaders():System.Boolean">
				<signature>System.Web.HttpContext.get_IsChangeInRequestHeaders():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsChangeInResponseHeaders" uniqueID="get_IsChangeInResponseHeaders():System.Boolean">
				<signature>System.Web.HttpContext.get_IsChangeInResponseHeaders():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsChangeInResponseStatus" uniqueID="get_IsChangeInResponseStatus():System.Boolean">
				<signature>System.Web.HttpContext.get_IsChangeInResponseStatus():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsChangeInServerVars" uniqueID="get_IsChangeInServerVars():System.Boolean">
				<signature>System.Web.HttpContext.get_IsChangeInServerVars():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsChangeInUserPrincipal" uniqueID="get_IsChangeInUserPrincipal():System.Boolean">
				<signature>System.Web.HttpContext.get_IsChangeInUserPrincipal():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsClientImpersonationConfigured" uniqueID="get_IsClientImpersonationConfigured():System.Boolean">
				<signature>System.Web.HttpContext.get_IsClientImpersonationConfigured():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCustomErrorEnabled" uniqueID="get_IsCustomErrorEnabled():System.Boolean">
				<signature>System.Web.HttpContext.get_IsCustomErrorEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsDebuggingEnabled" uniqueID="get_IsDebuggingEnabled():System.Boolean">
				<signature>System.Web.HttpContext.get_IsDebuggingEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsInCancellablePeriod" uniqueID="get_IsInCancellablePeriod():System.Boolean">
				<signature>System.Web.HttpContext.get_IsInCancellablePeriod():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPostNotification" uniqueID="get_IsPostNotification():System.Boolean">
				<signature>System.Web.HttpContext.get_IsPostNotification():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsSendResponseHeaders" uniqueID="get_IsSendResponseHeaders():System.Boolean">
				<signature>System.Web.HttpContext.get_IsSendResponseHeaders():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsWebSocketRequest" uniqueID="get_IsWebSocketRequest():System.Boolean">
				<signature>System.Web.HttpContext.get_IsWebSocketRequest():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsWebSocketRequestUpgrading" uniqueID="get_IsWebSocketRequestUpgrading():System.Boolean">
				<signature>System.Web.HttpContext.get_IsWebSocketRequestUpgrading():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.IDictionary">
				<signature>System.Web.HttpContext.get_Items():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NotificationContext" uniqueID="get_NotificationContext():System.Web.NotificationContext">
				<signature>System.Web.HttpContext.get_NotificationContext():System.Web.NotificationContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PageInstrumentation" uniqueID="get_PageInstrumentation():System.Web.Instrumentation.PageInstrumentationService">
				<signature>System.Web.HttpContext.get_PageInstrumentation():System.Web.Instrumentation.PageInstrumentationService</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PreventPostback" uniqueID="get_PreventPostback():System.Boolean">
				<signature>System.Web.HttpContext.get_PreventPostback():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PreviousHandler" uniqueID="get_PreviousHandler():System.Web.IHttpHandler">
				<signature>System.Web.HttpContext.get_PreviousHandler():System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Profile" uniqueID="get_Profile():System.Web.Profile.ProfileBase">
				<signature>System.Web.HttpContext.get_Profile():System.Web.Profile.ProfileBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ReadOnlySessionState" uniqueID="get_ReadOnlySessionState():System.Boolean">
				<signature>System.Web.HttpContext.get_ReadOnlySessionState():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RemapHandlerInstance" uniqueID="get_RemapHandlerInstance():System.Web.IHttpHandler">
				<signature>System.Web.HttpContext.get_RemapHandlerInstance():System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Request" uniqueID="get_Request():System.Web.HttpRequest">
				<signature>System.Web.HttpContext.get_Request():System.Web.HttpRequest</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequiresSessionState" uniqueID="get_RequiresSessionState():System.Boolean">
				<signature>System.Web.HttpContext.get_RequiresSessionState():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Response" uniqueID="get_Response():System.Web.HttpResponse">
				<signature>System.Web.HttpContext.get_Response():System.Web.HttpResponse</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RootedObjects" uniqueID="get_RootedObjects():System.Web.RootedObjects">
				<signature>System.Web.HttpContext.get_RootedObjects():System.Web.RootedObjects</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Server" uniqueID="get_Server():System.Web.HttpServerUtility">
				<signature>System.Web.HttpContext.get_Server():System.Web.HttpServerUtility</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ServerExecuteDepth" uniqueID="get_ServerExecuteDepth():System.Int32">
				<signature>System.Web.HttpContext.get_ServerExecuteDepth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Session" uniqueID="get_Session():System.Web.SessionState.HttpSessionState">
				<signature>System.Web.HttpContext.get_Session():System.Web.SessionState.HttpSessionState</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SessionStateBehavior" uniqueID="get_SessionStateBehavior():System.Web.SessionState.SessionStateBehavior">
				<signature>System.Web.HttpContext.get_SessionStateBehavior():System.Web.SessionState.SessionStateBehavior</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SkipAuthorization" uniqueID="get_SkipAuthorization():System.Boolean">
				<signature>System.Web.HttpContext.get_SkipAuthorization():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlDependencyCookie" uniqueID="get_SqlDependencyCookie():System.String">
				<signature>System.Web.HttpContext.get_SqlDependencyCookie():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SyncContext" uniqueID="get_SyncContext():System.Web.AspNetSynchronizationContextBase">
				<signature>System.Web.HttpContext.get_SyncContext():System.Web.AspNetSynchronizationContextBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TempError" uniqueID="get_TempError():System.Exception">
				<signature>System.Web.HttpContext.get_TempError():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TemplateControl" uniqueID="get_TemplateControl():System.Web.UI.TemplateControl">
				<signature>System.Web.HttpContext.get_TemplateControl():System.Web.UI.TemplateControl</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ThreadAbortOnTimeout" uniqueID="get_ThreadAbortOnTimeout():System.Boolean">
				<signature>System.Web.HttpContext.get_ThreadAbortOnTimeout():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TimedOutToken" uniqueID="get_TimedOutToken():System.Threading.CancellationToken">
				<signature>System.Web.HttpContext.get_TimedOutToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Timeout" uniqueID="get_Timeout():System.TimeSpan">
				<signature>System.Web.HttpContext.get_Timeout():System.TimeSpan</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TimeoutLink" uniqueID="get_TimeoutLink():System.Web.Util.DoubleLink">
				<signature>System.Web.HttpContext.get_TimeoutLink():System.Web.Util.DoubleLink</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Timestamp" uniqueID="get_Timestamp():System.DateTime">
				<signature>System.Web.HttpContext.get_Timestamp():System.DateTime</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TopHandler" uniqueID="get_TopHandler():System.Web.IHttpHandler">
				<signature>System.Web.HttpContext.get_TopHandler():System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Trace" uniqueID="get_Trace():System.Web.TraceContext">
				<signature>System.Web.HttpContext.get_Trace():System.Web.TraceContext</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TraceIsEnabled" uniqueID="get_TraceIsEnabled():System.Boolean">
				<signature>System.Web.HttpContext.get_TraceIsEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_User" uniqueID="get_User():System.Security.Principal.IPrincipal">
				<signature>System.Web.HttpContext.get_User():System.Security.Principal.IPrincipal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UsesImpersonation" uniqueID="get_UsesImpersonation():System.Boolean">
				<signature>System.Web.HttpContext.get_UsesImpersonation():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UtcTimestamp" uniqueID="get_UtcTimestamp():System.DateTime">
				<signature>System.Web.HttpContext.get_UtcTimestamp():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WebSocketNegotiatedProtocol" uniqueID="get_WebSocketNegotiatedProtocol():System.String">
				<signature>System.Web.HttpContext.get_WebSocketNegotiatedProtocol():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WebSocketRequestedProtocols" uniqueID="get_WebSocketRequestedProtocols():System.Collections.Generic.IList&lt;System.String&gt;">
				<signature>System.Web.HttpContext.get_WebSocketRequestedProtocols():System.Collections.Generic.IList&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_WebSocketTransitionState" uniqueID="get_WebSocketTransitionState():System.Web.WebSocketTransitionState">
				<signature>System.Web.HttpContext.get_WebSocketTransitionState():System.Web.WebSocketTransitionState</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_WorkerRequest" uniqueID="get_WorkerRequest():System.Web.HttpWorkerRequest">
				<signature>System.Web.HttpContext.get_WorkerRequest():System.Web.HttpWorkerRequest</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowAsyncDuringSyncStages" uniqueID="set_AllowAsyncDuringSyncStages(System.Boolean):System.Void">
				<signature>System.Web.HttpContext.set_AllowAsyncDuringSyncStages(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ApplicationInstance" uniqueID="set_ApplicationInstance(System.Web.HttpApplication):System.Void">
				<signature>System.Web.HttpContext.set_ApplicationInstance(System.Web.HttpApplication):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AsyncAppHandler" uniqueID="set_AsyncAppHandler(System.Web.IHttpAsyncHandler):System.Void">
				<signature>System.Web.HttpContext.set_AsyncAppHandler(System.Web.IHttpAsyncHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AsyncPreloadMode" uniqueID="set_AsyncPreloadMode(System.Web.Configuration.AsyncPreloadModeFlags):System.Void">
				<signature>System.Web.HttpContext.set_AsyncPreloadMode(System.Web.Configuration.AsyncPreloadModeFlags):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ConfigurationPath" uniqueID="set_ConfigurationPath(System.Web.VirtualPath):System.Void">
				<signature>System.Web.HttpContext.set_ConfigurationPath(System.Web.VirtualPath):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CurrentModuleEventIndex" uniqueID="set_CurrentModuleEventIndex(System.Int32):System.Void">
				<signature>System.Web.HttpContext.set_CurrentModuleEventIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CurrentModuleIndex" uniqueID="set_CurrentModuleIndex(System.Int32):System.Void">
				<signature>System.Web.HttpContext.set_CurrentModuleIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CurrentNotification" uniqueID="set_CurrentNotification(System.Web.RequestNotification):System.Void">
				<signature>System.Web.HttpContext.set_CurrentNotification(System.Web.RequestNotification):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CurrentNotificationFlags" uniqueID="set_CurrentNotificationFlags(System.Int32):System.Void">
				<signature>System.Web.HttpContext.set_CurrentNotificationFlags(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CurrentThread" uniqueID="set_CurrentThread(System.Threading.Thread):System.Void">
				<signature>System.Web.HttpContext.set_CurrentThread(System.Threading.Thread):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DisableCustomHttpEncoder" uniqueID="set_DisableCustomHttpEncoder(System.Boolean):System.Void">
				<signature>System.Web.HttpContext.set_DisableCustomHttpEncoder(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DynamicCulture" uniqueID="set_DynamicCulture(System.Globalization.CultureInfo):System.Void">
				<signature>System.Web.HttpContext.set_DynamicCulture(System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DynamicUICulture" uniqueID="set_DynamicUICulture(System.Globalization.CultureInfo):System.Void">
				<signature>System.Web.HttpContext.set_DynamicUICulture(System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_FirstRequest" uniqueID="set_FirstRequest(System.Boolean):System.Void">
				<signature>System.Web.HttpContext.set_FirstRequest(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Handler" uniqueID="set_Handler(System.Web.IHttpHandler):System.Void">
				<signature>System.Web.HttpContext.set_Handler(System.Web.IHttpHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsPostNotification" uniqueID="set_IsPostNotification(System.Boolean):System.Void">
				<signature>System.Web.HttpContext.set_IsPostNotification(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_NotificationContext" uniqueID="set_NotificationContext(System.Web.NotificationContext):System.Void">
				<signature>System.Web.HttpContext.set_NotificationContext(System.Web.NotificationContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PreventPostback" uniqueID="set_PreventPostback(System.Boolean):System.Void">
				<signature>System.Web.HttpContext.set_PreventPostback(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RootedObjects" uniqueID="set_RootedObjects(System.Web.RootedObjects):System.Void">
				<signature>System.Web.HttpContext.set_RootedObjects(System.Web.RootedObjects):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ServerExecuteDepth" uniqueID="set_ServerExecuteDepth(System.Int32):System.Void">
				<signature>System.Web.HttpContext.set_ServerExecuteDepth(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SessionStateBehavior" uniqueID="set_SessionStateBehavior(System.Web.SessionState.SessionStateBehavior):System.Void">
				<signature>System.Web.HttpContext.set_SessionStateBehavior(System.Web.SessionState.SessionStateBehavior):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SkipAuthorization" uniqueID="set_SkipAuthorization(System.Boolean):System.Void">
				<signature>System.Web.HttpContext.set_SkipAuthorization(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SqlDependencyCookie" uniqueID="set_SqlDependencyCookie(System.String):System.Void">
				<signature>System.Web.HttpContext.set_SqlDependencyCookie(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SyncContext" uniqueID="set_SyncContext(System.Web.AspNetSynchronizationContextBase):System.Void">
				<signature>System.Web.HttpContext.set_SyncContext(System.Web.AspNetSynchronizationContextBase):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TempError" uniqueID="set_TempError(System.Exception):System.Void">
				<signature>System.Web.HttpContext.set_TempError(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TemplateControl" uniqueID="set_TemplateControl(System.Web.UI.TemplateControl):System.Void">
				<signature>System.Web.HttpContext.set_TemplateControl(System.Web.UI.TemplateControl):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ThreadAbortOnTimeout" uniqueID="set_ThreadAbortOnTimeout(System.Boolean):System.Void">
				<signature>System.Web.HttpContext.set_ThreadAbortOnTimeout(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Timeout" uniqueID="set_Timeout(System.TimeSpan):System.Void">
				<signature>System.Web.HttpContext.set_Timeout(System.TimeSpan):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TimeoutLink" uniqueID="set_TimeoutLink(System.Web.Util.DoubleLink):System.Void">
				<signature>System.Web.HttpContext.set_TimeoutLink(System.Web.Util.DoubleLink):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TraceIsEnabled" uniqueID="set_TraceIsEnabled(System.Boolean):System.Void">
				<signature>System.Web.HttpContext.set_TraceIsEnabled(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_User" uniqueID="set_User(System.Security.Principal.IPrincipal):System.Void">
				<signature>System.Web.HttpContext.set_User(System.Security.Principal.IPrincipal):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_WebSocketTransitionState" uniqueID="set_WebSocketTransitionState(System.Web.WebSocketTransitionState):System.Void">
				<signature>System.Web.HttpContext.set_WebSocketTransitionState(System.Web.WebSocketTransitionState):System.Void</signature>
			</method>
		</class>
		<class name="HttpApplication+AsyncAppEventHandler" uniqueID="System.Web.HttpApplication+AsyncAppEventHandler">
			<method accessibility="Protected" methodKind="Member" name="Add" uniqueID="Add(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.HttpApplication+AsyncAppEventHandler.Add(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateExecutionSteps" uniqueID="CreateExecutionSteps(System.Web.HttpApplication;System.Collections.ArrayList):System.Void">
				<signature>System.Web.HttpApplication+AsyncAppEventHandler.CreateExecutionSteps(System.Web.HttpApplication;System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpApplication+AsyncAppEventHandler" uniqueID="HttpApplication+AsyncAppEventHandler():System.Void">
				<signature>System.Web.HttpApplication+AsyncAppEventHandler.HttpApplication+AsyncAppEventHandler():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Web.HttpApplication+AsyncAppEventHandler.Reset():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Web.HttpApplication+AsyncAppEventHandler.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="UnsafeNativeMethods" uniqueID="System.Web.UnsafeNativeMethods">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UnsafeNativeMethods.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AppDomainRestart" uniqueID="AppDomainRestart(System.String):System.Void">
				<signature>System.Web.UnsafeNativeMethods.AppDomainRestart(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AspCompatIsApartmentComponent" uniqueID="AspCompatIsApartmentComponent(System.Object):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.AspCompatIsApartmentComponent(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AspCompatOnPageEnd" uniqueID="AspCompatOnPageEnd():System.Int32">
				<signature>System.Web.UnsafeNativeMethods.AspCompatOnPageEnd():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AspCompatOnPageStart" uniqueID="AspCompatOnPageStart(System.Object):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.AspCompatOnPageStart(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AspCompatProcessRequest" uniqueID="AspCompatProcessRequest(System.Web.Util.AspCompatCallback;System.Object;System.Boolean;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.AspCompatProcessRequest(System.Web.Util.AspCompatCallback;System.Object;System.Boolean;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AttachDebugger" uniqueID="AttachDebugger(System.String;System.String;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.AttachDebugger(System.String;System.String;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="BufferPoolGetBuffer" uniqueID="BufferPoolGetBuffer(System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.BufferPoolGetBuffer(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="BufferPoolGetPool" uniqueID="BufferPoolGetPool(System.Int32;System.Int32):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.BufferPoolGetPool(System.Int32;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="BufferPoolReleaseBuffer" uniqueID="BufferPoolReleaseBuffer(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.BufferPoolReleaseBuffer(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ChangeAccessToKeyContainer" uniqueID="ChangeAccessToKeyContainer(System.String;System.String;System.String;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.ChangeAccessToKeyContainer(System.String;System.String;System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CloseHandle" uniqueID="CloseHandle(System.IntPtr):System.Boolean">
				<signature>System.Web.UnsafeNativeMethods.CloseHandle(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoCreateInstanceEx" uniqueID="CoCreateInstanceEx(System.Guid;System.IntPtr;System.Int32;System.Web.Configuration.COSERVERINFO;System.Int32;System.Web.Configuration.MULTI_QI[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.CoCreateInstanceEx(System.Guid;System.IntPtr;System.Int32;System.Web.Configuration.COSERVERINFO;System.Int32;System.Web.Configuration.MULTI_QI[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoCreateInstanceEx" uniqueID="CoCreateInstanceEx(System.Guid;System.IntPtr;System.Int32;System.Web.Configuration.COSERVERINFO_X64;System.Int32;System.Web.Configuration.MULTI_QI_X64[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.CoCreateInstanceEx(System.Guid;System.IntPtr;System.Int32;System.Web.Configuration.COSERVERINFO_X64;System.Int32;System.Web.Configuration.MULTI_QI_X64[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoSetProxyBlanket" uniqueID="CoSetProxyBlanket(System.IntPtr;System.Web.Configuration.RpcAuthent;System.Web.Configuration.RpcAuthor;System.String;System.Web.Configuration.RpcLevel;System.Web.Configuration.RpcImpers;System.IntPtr;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.CoSetProxyBlanket(System.IntPtr;System.Web.Configuration.RpcAuthent;System.Web.Configuration.RpcAuthor;System.String;System.Web.Configuration.RpcLevel;System.Web.Configuration.RpcImpers;System.IntPtr;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConvertStringSidToSid" uniqueID="ConvertStringSidToSid(System.String;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.ConvertStringSidToSid(System.String;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CookieAuthConstructTicket" uniqueID="CookieAuthConstructTicket(System.Byte[];System.Int32;System.String;System.String;System.String;System.Byte[];System.Int64[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.CookieAuthConstructTicket(System.Byte[];System.Int32;System.String;System.String;System.String;System.Byte[];System.Int64[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CookieAuthParseTicket" uniqueID="CookieAuthParseTicket(System.Byte[];System.Int32;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32;System.Byte[];System.Int64[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.CookieAuthParseTicket(System.Byte[];System.Int32;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32;System.Byte[];System.Int64[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateUserToken" uniqueID="CreateUserToken(System.String;System.String;System.Int32;System.Text.StringBuilder;System.Int32):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.CreateUserToken(System.String;System.String;System.Int32;System.Text.StringBuilder;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DeleteShadowCache" uniqueID="DeleteShadowCache(System.String;System.String):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.DeleteShadowCache(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DirMonClose" uniqueID="DirMonClose(System.Runtime.InteropServices.HandleRef;System.Boolean):System.Void">
				<signature>System.Web.UnsafeNativeMethods.DirMonClose(System.Runtime.InteropServices.HandleRef;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DirMonOpen" uniqueID="DirMonOpen(System.String;System.String;System.Boolean;System.UInt32;System.Int32;System.Web.NativeFileChangeNotification;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.DirMonOpen(System.String;System.String;System.Boolean;System.UInt32;System.Int32;System.Web.NativeFileChangeNotification;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DoesKeyContainerExist" uniqueID="DoesKeyContainerExist(System.String;System.String;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.DoesKeyContainerExist(System.String;System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbAppendLogParameter" uniqueID="EcbAppendLogParameter(System.IntPtr;System.String):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbAppendLogParameter(System.IntPtr;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbCallISAPI" uniqueID="EcbCallISAPI(System.IntPtr;System.Web.UnsafeNativeMethods+CallISAPIFunc;System.Byte[];System.Int32;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbCallISAPI(System.IntPtr;System.Web.UnsafeNativeMethods+CallISAPIFunc;System.Byte[];System.Int32;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbCloseConnection" uniqueID="EcbCloseConnection(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbCloseConnection(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbEmitSimpleTrace" uniqueID="EcbEmitSimpleTrace(System.IntPtr;System.Int32;System.String):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbEmitSimpleTrace(System.IntPtr;System.Int32;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbEmitWebEventTrace" uniqueID="EcbEmitWebEventTrace(System.IntPtr;System.Int32;System.Int32;System.String[];System.Int32[];System.String[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbEmitWebEventTrace(System.IntPtr;System.Int32;System.Int32;System.String[];System.Int32[];System.String[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbExecuteUrlUnicode" uniqueID="EcbExecuteUrlUnicode(System.IntPtr;System.String;System.String;System.String;System.Boolean;System.Boolean;System.IntPtr;System.String;System.String;System.IntPtr;System.Web.Hosting.ISAPIAsyncCompletionCallback):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbExecuteUrlUnicode(System.IntPtr;System.String;System.String;System.String;System.Boolean;System.Boolean;System.IntPtr;System.String;System.String;System.IntPtr;System.Web.Hosting.ISAPIAsyncCompletionCallback):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbFlushCore" uniqueID="EcbFlushCore(System.IntPtr;System.Byte[];System.Byte[];System.Int32;System.Int32;System.Int32;System.IntPtr[];System.Int32[];System.Int32;System.Int32;System.Int32;System.Int32;System.Web.Hosting.ISAPIAsyncCompletionCallback):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbFlushCore(System.IntPtr;System.Byte[];System.Byte[];System.Int32;System.Int32;System.Int32;System.IntPtr[];System.Int32[];System.Int32;System.Int32;System.Int32;System.Int32;System.Web.Hosting.ISAPIAsyncCompletionCallback):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbFreeExecUrlEntityInfo" uniqueID="EcbFreeExecUrlEntityInfo(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.EcbFreeExecUrlEntityInfo(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetAdditionalPostedContent" uniqueID="EcbGetAdditionalPostedContent(System.IntPtr;System.Byte[];System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetAdditionalPostedContent(System.IntPtr;System.Byte[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetBasics" uniqueID="EcbGetBasics(System.IntPtr;System.Byte[];System.Int32;System.Int32[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetBasics(System.IntPtr;System.Byte[];System.Int32;System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetBasicsContentInfo" uniqueID="EcbGetBasicsContentInfo(System.IntPtr;System.Int32[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetBasicsContentInfo(System.IntPtr;System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetChannelBindingToken" uniqueID="EcbGetChannelBindingToken(System.IntPtr;System.IntPtr;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetChannelBindingToken(System.IntPtr;System.IntPtr;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetClientCertificate" uniqueID="EcbGetClientCertificate(System.IntPtr;System.Byte[];System.Int32;System.Int32[];System.Int64[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetClientCertificate(System.IntPtr;System.Byte[];System.Int32;System.Int32[];System.Int64[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetExecUrlEntityInfo" uniqueID="EcbGetExecUrlEntityInfo(System.Int32;System.Byte[];System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetExecUrlEntityInfo(System.Int32;System.Byte[];System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetImpersonationToken" uniqueID="EcbGetImpersonationToken(System.IntPtr;System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.EcbGetImpersonationToken(System.IntPtr;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetPreloadedPostedContent" uniqueID="EcbGetPreloadedPostedContent(System.IntPtr;System.Byte[];System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetPreloadedPostedContent(System.IntPtr;System.Byte[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetQueryString" uniqueID="EcbGetQueryString(System.IntPtr;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetQueryString(System.IntPtr;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetQueryStringRawBytes" uniqueID="EcbGetQueryStringRawBytes(System.IntPtr;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetQueryStringRawBytes(System.IntPtr;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetServerVariable" uniqueID="EcbGetServerVariable(System.IntPtr;System.String;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetServerVariable(System.IntPtr;System.String;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetServerVariableByIndex" uniqueID="EcbGetServerVariableByIndex(System.IntPtr;System.Int32;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetServerVariableByIndex(System.IntPtr;System.Int32;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetTraceContextId" uniqueID="EcbGetTraceContextId(System.IntPtr;System.Guid):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetTraceContextId(System.IntPtr;System.Guid):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetTraceFlags" uniqueID="EcbGetTraceFlags(System.IntPtr;System.Int32[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetTraceFlags(System.IntPtr;System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetUnicodeServerVariable" uniqueID="EcbGetUnicodeServerVariable(System.IntPtr;System.String;System.IntPtr;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetUnicodeServerVariable(System.IntPtr;System.String;System.IntPtr;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetUnicodeServerVariableByIndex" uniqueID="EcbGetUnicodeServerVariableByIndex(System.IntPtr;System.Int32;System.IntPtr;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetUnicodeServerVariableByIndex(System.IntPtr;System.Int32;System.IntPtr;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetUnicodeServerVariables" uniqueID="EcbGetUnicodeServerVariables(System.IntPtr;System.IntPtr;System.Int32;System.Int32[];System.Int32;System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetUnicodeServerVariables(System.IntPtr;System.IntPtr;System.Int32;System.Int32[];System.Int32;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetVersion" uniqueID="EcbGetVersion(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbGetVersion(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbGetVirtualPathToken" uniqueID="EcbGetVirtualPathToken(System.IntPtr;System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.EcbGetVirtualPathToken(System.IntPtr;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbIsClientConnected" uniqueID="EcbIsClientConnected(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbIsClientConnected(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbMapUrlToPath" uniqueID="EcbMapUrlToPath(System.IntPtr;System.String;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbMapUrlToPath(System.IntPtr;System.String;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EcbReadClientAsync" uniqueID="EcbReadClientAsync(System.IntPtr;System.Int32;System.Web.Hosting.AsyncCompletionCallback):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EcbReadClientAsync(System.IntPtr;System.Int32;System.Web.Hosting.AsyncCompletionCallback):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EndPrefetchActivity" uniqueID="EndPrefetchActivity(System.UInt32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.EndPrefetchActivity(System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindClose" uniqueID="FindClose(System.IntPtr):System.Boolean">
				<signature>System.Web.UnsafeNativeMethods.FindClose(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindFirstFile" uniqueID="FindFirstFile(System.String;System.Web.UnsafeNativeMethods+WIN32_FIND_DATA):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.FindFirstFile(System.String;System.Web.UnsafeNativeMethods+WIN32_FIND_DATA):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindNextFile" uniqueID="FindNextFile(System.IntPtr;System.Web.UnsafeNativeMethods+WIN32_FIND_DATA):System.Boolean">
				<signature>System.Web.UnsafeNativeMethods.FindNextFile(System.IntPtr;System.Web.UnsafeNativeMethods+WIN32_FIND_DATA):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindResource" uniqueID="FindResource(System.IntPtr;System.IntPtr;System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.FindResource(System.IntPtr;System.IntPtr;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FreeFileSecurityDescriptor" uniqueID="FreeFileSecurityDescriptor(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.FreeFileSecurityDescriptor(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FreeLibrary" uniqueID="FreeLibrary(System.IntPtr):System.Boolean">
				<signature>System.Web.UnsafeNativeMethods.FreeLibrary(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCachePath" uniqueID="GetCachePath(System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetCachePath(System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetComputerName" uniqueID="GetComputerName(System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetComputerName(System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCredentialFromRegistry" uniqueID="GetCredentialFromRegistry(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetCredentialFromRegistry(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentThread" uniqueID="GetCurrentThread():System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.GetCurrentThread():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDirMonConfiguration" uniqueID="GetDirMonConfiguration(System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.GetDirMonConfiguration(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetEcb" uniqueID="GetEcb(System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.GetEcb(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetEtwValues" uniqueID="GetEtwValues(System.Int32;System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.GetEtwValues(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetExtensionlessUrlAppendage" uniqueID="GetExtensionlessUrlAppendage():System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.GetExtensionlessUrlAppendage():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileAttributesEx" uniqueID="GetFileAttributesEx(System.String;System.Int32;System.Web.UnsafeNativeMethods+WIN32_FILE_ATTRIBUTE_DATA):System.Boolean">
				<signature>System.Web.UnsafeNativeMethods.GetFileAttributesEx(System.String;System.Int32;System.Web.UnsafeNativeMethods+WIN32_FILE_ATTRIBUTE_DATA):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileHandleForTransmitFile" uniqueID="GetFileHandleForTransmitFile(System.String):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.GetFileHandleForTransmitFile(System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileSecurity" uniqueID="GetFileSecurity(System.String;System.Int32;System.Byte[];System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetFileSecurity(System.String;System.Int32;System.Byte[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileSecurityDescriptor" uniqueID="GetFileSecurityDescriptor(System.String):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.GetFileSecurityDescriptor(System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetGroupsForUser" uniqueID="GetGroupsForUser(System.IntPtr;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetGroupsForUser(System.IntPtr;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetHMACSHA1Hash" uniqueID="GetHMACSHA1Hash(System.Byte[];System.Int32;System.Int32;System.Byte[];System.Int32;System.Byte[];System.Int32;System.Byte[];System.Int32;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetHMACSHA1Hash(System.Byte[];System.Int32;System.Int32;System.Byte[];System.Int32;System.Byte[];System.Int32;System.Byte[];System.Int32;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetModuleFileName" uniqueID="GetModuleFileName(System.IntPtr;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetModuleFileName(System.IntPtr;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetModuleHandle" uniqueID="GetModuleHandle(System.String):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.GetModuleHandle(System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetPrivateBytesIIS6" uniqueID="GetPrivateBytesIIS6(System.Int64;System.Boolean):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetPrivateBytesIIS6(System.Int64;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetProcessAffinityMask" uniqueID="GetProcessAffinityMask(System.IntPtr;System.IntPtr;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetProcessAffinityMask(System.IntPtr;System.IntPtr;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetProcessMemoryInformation" uniqueID="GetProcessMemoryInformation(System.UInt32;System.UInt32;System.UInt32;System.Boolean):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetProcessMemoryInformation(System.UInt32;System.UInt32;System.UInt32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSHA1Hash" uniqueID="GetSHA1Hash(System.Byte[];System.Int32;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetSHA1Hash(System.Byte[];System.Int32;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSystemInfo" uniqueID="GetSystemInfo(System.Web.UnsafeNativeMethods+SYSTEM_INFO):System.Void">
				<signature>System.Web.UnsafeNativeMethods.GetSystemInfo(System.Web.UnsafeNativeMethods+SYSTEM_INFO):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetW3WPMemoryLimitInKB" uniqueID="GetW3WPMemoryLimitInKB():System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GetW3WPMemoryLimitInKB():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GlobalMemoryStatusEx" uniqueID="GlobalMemoryStatusEx(System.Web.UnsafeNativeMethods+MEMORYSTATUSEX):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GlobalMemoryStatusEx(System.Web.UnsafeNativeMethods+MEMORYSTATUSEX):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GrowFileNotificationBuffer" uniqueID="GrowFileNotificationBuffer(System.String;System.Boolean):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.GrowFileNotificationBuffer(System.String;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InitializeHealthMonitor" uniqueID="InitializeHealthMonitor(System.Int32;System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.InitializeHealthMonitor(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InitializeLibrary" uniqueID="InitializeLibrary(System.Boolean):System.Void">
				<signature>System.Web.UnsafeNativeMethods.InitializeLibrary(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InitializeWmiManager" uniqueID="InitializeWmiManager():System.Int32">
				<signature>System.Web.UnsafeNativeMethods.InitializeWmiManager():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InstrumentedMutexCreate" uniqueID="InstrumentedMutexCreate(System.String):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.InstrumentedMutexCreate(System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InstrumentedMutexDelete" uniqueID="InstrumentedMutexDelete(System.Runtime.InteropServices.HandleRef):System.Void">
				<signature>System.Web.UnsafeNativeMethods.InstrumentedMutexDelete(System.Runtime.InteropServices.HandleRef):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InstrumentedMutexGetLock" uniqueID="InstrumentedMutexGetLock(System.Runtime.InteropServices.HandleRef;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.InstrumentedMutexGetLock(System.Runtime.InteropServices.HandleRef;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InstrumentedMutexReleaseLock" uniqueID="InstrumentedMutexReleaseLock(System.Runtime.InteropServices.HandleRef):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.InstrumentedMutexReleaseLock(System.Runtime.InteropServices.HandleRef):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InstrumentedMutexSetState" uniqueID="InstrumentedMutexSetState(System.Runtime.InteropServices.HandleRef;System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.InstrumentedMutexSetState(System.Runtime.InteropServices.HandleRef;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InvalidateKernelCache" uniqueID="InvalidateKernelCache(System.String):System.Void">
				<signature>System.Web.UnsafeNativeMethods.InvalidateKernelCache(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsAccessToFileAllowed" uniqueID="IsAccessToFileAllowed(System.IntPtr;System.IntPtr;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.IsAccessToFileAllowed(System.IntPtr;System.IntPtr;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsUserInRole" uniqueID="IsUserInRole(System.IntPtr;System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.IsUserInRole(System.IntPtr;System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsValidResource" uniqueID="IsValidResource(System.IntPtr;System.IntPtr;System.Int32):System.Boolean">
				<signature>System.Web.UnsafeNativeMethods.IsValidResource(System.IntPtr;System.IntPtr;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsapiAppHostGetAppPath" uniqueID="IsapiAppHostGetAppPath(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.IsapiAppHostGetAppPath(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsapiAppHostGetNextVirtualSubdir" uniqueID="IsapiAppHostGetNextVirtualSubdir(System.String;System.Boolean;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.IsapiAppHostGetNextVirtualSubdir(System.String;System.Boolean;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsapiAppHostGetSiteId" uniqueID="IsapiAppHostGetSiteId(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.IsapiAppHostGetSiteId(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsapiAppHostGetSiteName" uniqueID="IsapiAppHostGetSiteName(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.IsapiAppHostGetSiteName(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsapiAppHostGetUncUser" uniqueID="IsapiAppHostGetUncUser(System.String;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.IsapiAppHostGetUncUser(System.String;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsapiAppHostMapPath" uniqueID="IsapiAppHostMapPath(System.String;System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.IsapiAppHostMapPath(System.String;System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LoadLibrary" uniqueID="LoadLibrary(System.String):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.LoadLibrary(System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LoadResource" uniqueID="LoadResource(System.IntPtr;System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.LoadResource(System.IntPtr;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LocalFree" uniqueID="LocalFree(System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.LocalFree(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LockResource" uniqueID="LockResource(System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.LockResource(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LogWebeventProviderFailure" uniqueID="LogWebeventProviderFailure(System.String;System.String;System.String):System.Void">
				<signature>System.Web.UnsafeNativeMethods.LogWebeventProviderFailure(System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LogonUser" uniqueID="LogonUser(System.String;System.String;System.String;System.Int32;System.Int32;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.LogonUser(System.String;System.String;System.String;System.Int32;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LookupAccountSid" uniqueID="LookupAccountSid(System.String;System.IntPtr;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.LookupAccountSid(System.String;System.IntPtr;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MoveFileEx" uniqueID="MoveFileEx(System.String;System.String;System.UInt32):System.Boolean">
				<signature>System.Web.UnsafeNativeMethods.MoveFileEx(System.String;System.String;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenThreadToken" uniqueID="OpenThreadToken(System.IntPtr;System.Int32;System.Boolean;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.OpenThreadToken(System.IntPtr;System.Int32;System.Boolean;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMAppendLogParameter" uniqueID="PMAppendLogParameter(System.IntPtr;System.String):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMAppendLogParameter(System.IntPtr;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMCallISAPI" uniqueID="PMCallISAPI(System.IntPtr;System.Web.UnsafeNativeMethods+CallISAPIFunc;System.Byte[];System.Int32;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMCallISAPI(System.IntPtr;System.Web.UnsafeNativeMethods+CallISAPIFunc;System.Byte[];System.Int32;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMCloseConnection" uniqueID="PMCloseConnection(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMCloseConnection(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMEmptyResponse" uniqueID="PMEmptyResponse(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMEmptyResponse(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMFlushCore" uniqueID="PMFlushCore(System.IntPtr;System.Byte[];System.Byte[];System.Int32;System.Int32;System.Int32;System.Int32;System.IntPtr[];System.Int32[];System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMFlushCore(System.IntPtr;System.Byte[];System.Byte[];System.Int32;System.Int32;System.Int32;System.Int32;System.IntPtr[];System.Int32[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetAdditionalPostedContent" uniqueID="PMGetAdditionalPostedContent(System.IntPtr;System.Byte[];System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetAdditionalPostedContent(System.IntPtr;System.Byte[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetAllServerVariables" uniqueID="PMGetAllServerVariables(System.IntPtr;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetAllServerVariables(System.IntPtr;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetBasics" uniqueID="PMGetBasics(System.IntPtr;System.Byte[];System.Int32;System.Int32[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetBasics(System.IntPtr;System.Byte[];System.Int32;System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetClientCertificate" uniqueID="PMGetClientCertificate(System.IntPtr;System.Byte[];System.Int32;System.Int32[];System.Int64[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetClientCertificate(System.IntPtr;System.Byte[];System.Int32;System.Int32[];System.Int64[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetCurrentProcessInfo" uniqueID="PMGetCurrentProcessInfo(System.Int32;System.Int32;System.Int32;System.Int64;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetCurrentProcessInfo(System.Int32;System.Int32;System.Int32;System.Int64;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetHistoryTable" uniqueID="PMGetHistoryTable(System.Int32;System.Int32[];System.Int32[];System.Int32[];System.Int32[];System.Int32[];System.Int32[];System.Int64[];System.Int64[]):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetHistoryTable(System.Int32;System.Int32[];System.Int32[];System.Int32[];System.Int32[];System.Int32[];System.Int32[];System.Int64[];System.Int64[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetImpersonationToken" uniqueID="PMGetImpersonationToken(System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.PMGetImpersonationToken(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetMemoryLimitInMB" uniqueID="PMGetMemoryLimitInMB():System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetMemoryLimitInMB():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetPreloadedPostedContent" uniqueID="PMGetPreloadedPostedContent(System.IntPtr;System.Byte[];System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetPreloadedPostedContent(System.IntPtr;System.Byte[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetQueryString" uniqueID="PMGetQueryString(System.IntPtr;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetQueryString(System.IntPtr;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetQueryStringRawBytes" uniqueID="PMGetQueryStringRawBytes(System.IntPtr;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetQueryStringRawBytes(System.IntPtr;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetStartTimeStamp" uniqueID="PMGetStartTimeStamp(System.IntPtr):System.Int64">
				<signature>System.Web.UnsafeNativeMethods.PMGetStartTimeStamp(System.IntPtr):System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetTraceContextId" uniqueID="PMGetTraceContextId(System.IntPtr;System.Guid):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMGetTraceContextId(System.IntPtr;System.Guid):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMGetVirtualPathToken" uniqueID="PMGetVirtualPathToken(System.IntPtr):System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.PMGetVirtualPathToken(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMIsClientConnected" uniqueID="PMIsClientConnected(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMIsClientConnected(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMMapUrlToPath" uniqueID="PMMapUrlToPath(System.IntPtr;System.String;System.Byte[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PMMapUrlToPath(System.IntPtr;System.String;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PMTraceRaiseEvent" uniqueID="PMTraceRaiseEvent(System.Int32;System.IntPtr;System.String;System.String;System.String;System.String):System.Void">
				<signature>System.Web.UnsafeNativeMethods.PMTraceRaiseEvent(System.Int32;System.IntPtr;System.String;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportAuthURL" uniqueID="PassportAuthURL(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.String;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportAuthURL(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.String;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportAuthURL2" uniqueID="PassportAuthURL2(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.String;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportAuthURL2(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.String;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportCreate" uniqueID="PassportCreate(System.String;System.String;System.String;System.String;System.String;System.Text.StringBuilder;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportCreate(System.String;System.String;System.String;System.String;System.String;System.Text.StringBuilder;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportCreateHttpRaw" uniqueID="PassportCreateHttpRaw(System.String;System.String;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportCreateHttpRaw(System.String;System.String;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportCrypt" uniqueID="PassportCrypt(System.Int32;System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportCrypt(System.Int32;System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportCryptIsValid" uniqueID="PassportCryptIsValid():System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportCryptIsValid():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportCryptPut" uniqueID="PassportCryptPut(System.Int32;System.String):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportCryptPut(System.Int32;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportDestroy" uniqueID="PassportDestroy(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.PassportDestroy(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportDomainFromMemberName" uniqueID="PassportDomainFromMemberName(System.IntPtr;System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportDomainFromMemberName(System.IntPtr;System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetCurrentConfig" uniqueID="PassportGetCurrentConfig(System.IntPtr;System.String;System.Object):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetCurrentConfig(System.IntPtr;System.String;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetDomainAttribute" uniqueID="PassportGetDomainAttribute(System.IntPtr;System.String;System.Int32;System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetDomainAttribute(System.IntPtr;System.String;System.Int32;System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetError" uniqueID="PassportGetError(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetError(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetFromNetworkServer" uniqueID="PassportGetFromNetworkServer(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetFromNetworkServer(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetHasSavedPassword" uniqueID="PassportGetHasSavedPassword(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetHasSavedPassword(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetLoginChallenge" uniqueID="PassportGetLoginChallenge(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.String;System.Int32;System.Int32;System.Object;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetLoginChallenge(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.String;System.Int32;System.Int32;System.Object;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetOption" uniqueID="PassportGetOption(System.IntPtr;System.String;System.Object):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetOption(System.IntPtr;System.String;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetProfile" uniqueID="PassportGetProfile(System.IntPtr;System.String;System.Object):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetProfile(System.IntPtr;System.String;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetTicketAge" uniqueID="PassportGetTicketAge(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetTicketAge(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportGetTimeSinceSignIn" uniqueID="PassportGetTimeSinceSignIn(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportGetTimeSinceSignIn(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportHasConsent" uniqueID="PassportHasConsent(System.IntPtr;System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportHasConsent(System.IntPtr;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportHasFlag" uniqueID="PassportHasFlag(System.IntPtr;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportHasFlag(System.IntPtr;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportHasProfile" uniqueID="PassportHasProfile(System.IntPtr;System.String):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportHasProfile(System.IntPtr;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportHasTicket" uniqueID="PassportHasTicket(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportHasTicket(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportHexPUID" uniqueID="PassportHexPUID(System.IntPtr;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportHexPUID(System.IntPtr;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportIsAuthenticated" uniqueID="PassportIsAuthenticated(System.IntPtr;System.Int32;System.Int32;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportIsAuthenticated(System.IntPtr;System.Int32;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportLogoTag" uniqueID="PassportLogoTag(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.Int32;System.String;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportLogoTag(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.Int32;System.String;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportLogoTag2" uniqueID="PassportLogoTag2(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.Int32;System.String;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportLogoTag2(System.IntPtr;System.String;System.Int32;System.Int32;System.String;System.Int32;System.Int32;System.String;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportLogoutURL" uniqueID="PassportLogoutURL(System.IntPtr;System.String;System.String;System.Int32;System.String;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportLogoutURL(System.IntPtr;System.String;System.String;System.Int32;System.String;System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportSetOption" uniqueID="PassportSetOption(System.IntPtr;System.String;System.Object):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportSetOption(System.IntPtr;System.String;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportTicket" uniqueID="PassportTicket(System.IntPtr;System.String;System.Object):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportTicket(System.IntPtr;System.String;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PassportVersion" uniqueID="PassportVersion():System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PassportVersion():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfCloseAppCounters" uniqueID="PerfCloseAppCounters(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.PerfCloseAppCounters(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfCounterInitialize" uniqueID="PerfCounterInitialize():System.Void">
				<signature>System.Web.UnsafeNativeMethods.PerfCounterInitialize():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfDecrementCounter" uniqueID="PerfDecrementCounter(System.IntPtr;System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.PerfDecrementCounter(System.IntPtr;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfGetCounter" uniqueID="PerfGetCounter(System.IntPtr;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PerfGetCounter(System.IntPtr;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfIncrementCounter" uniqueID="PerfIncrementCounter(System.IntPtr;System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.PerfIncrementCounter(System.IntPtr;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfIncrementCounterEx" uniqueID="PerfIncrementCounterEx(System.IntPtr;System.Int32;System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.PerfIncrementCounterEx(System.IntPtr;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfOpenAppCounters" uniqueID="PerfOpenAppCounters(System.String):System.Web.PerfInstanceDataHandle">
				<signature>System.Web.UnsafeNativeMethods.PerfOpenAppCounters(System.String):System.Web.PerfInstanceDataHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfOpenGlobalCounters" uniqueID="PerfOpenGlobalCounters():System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.PerfOpenGlobalCounters():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfOpenStateCounters" uniqueID="PerfOpenStateCounters():System.IntPtr">
				<signature>System.Web.UnsafeNativeMethods.PerfOpenStateCounters():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PerfSetCounter" uniqueID="PerfSetCounter(System.IntPtr;System.Int32;System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.PerfSetCounter(System.IntPtr;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PostThreadPoolWorkItem" uniqueID="PostThreadPoolWorkItem(System.Web.Util.WorkItemCallback):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.PostThreadPoolWorkItem(System.Web.Util.WorkItemCallback):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RaiseEventlogEvent" uniqueID="RaiseEventlogEvent(System.Int32;System.String[];System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.RaiseEventlogEvent(System.Int32;System.String[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RaiseFileMonitoringEventlogEvent" uniqueID="RaiseFileMonitoringEventlogEvent(System.String;System.String;System.String;System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.RaiseFileMonitoringEventlogEvent(System.String;System.String;System.String;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RaiseWmiEvent" uniqueID="RaiseWmiEvent(System.Web.UnsafeNativeMethods+WmiData;System.Boolean):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.RaiseWmiEvent(System.Web.UnsafeNativeMethods+WmiData;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReportUnhandledException" uniqueID="ReportUnhandledException(System.String):System.Void">
				<signature>System.Web.UnsafeNativeMethods.ReportUnhandledException(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RevertToSelf" uniqueID="RevertToSelf():System.Int32">
				<signature>System.Web.UnsafeNativeMethods.RevertToSelf():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDCloseConnection" uniqueID="STWNDCloseConnection(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.STWNDCloseConnection(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDDeleteStateItem" uniqueID="STWNDDeleteStateItem(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.STWNDDeleteStateItem(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDEndOfRequest" uniqueID="STWNDEndOfRequest(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.STWNDEndOfRequest(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDGetLocalAddress" uniqueID="STWNDGetLocalAddress(System.IntPtr;System.Text.StringBuilder):System.Void">
				<signature>System.Web.UnsafeNativeMethods.STWNDGetLocalAddress(System.IntPtr;System.Text.StringBuilder):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDGetLocalPort" uniqueID="STWNDGetLocalPort(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.STWNDGetLocalPort(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDGetRemoteAddress" uniqueID="STWNDGetRemoteAddress(System.IntPtr;System.Text.StringBuilder):System.Void">
				<signature>System.Web.UnsafeNativeMethods.STWNDGetRemoteAddress(System.IntPtr;System.Text.StringBuilder):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDGetRemotePort" uniqueID="STWNDGetRemotePort(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.STWNDGetRemotePort(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDIsClientConnected" uniqueID="STWNDIsClientConnected(System.IntPtr):System.Boolean">
				<signature>System.Web.UnsafeNativeMethods.STWNDIsClientConnected(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="STWNDSendResponse" uniqueID="STWNDSendResponse(System.IntPtr;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.STWNDSendResponse(System.IntPtr;System.Text.StringBuilder;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SessionNDCloseConnection" uniqueID="SessionNDCloseConnection(System.Runtime.InteropServices.HandleRef):System.Void">
				<signature>System.Web.UnsafeNativeMethods.SessionNDCloseConnection(System.Runtime.InteropServices.HandleRef):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SessionNDConnectToService" uniqueID="SessionNDConnectToService(System.String):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.SessionNDConnectToService(System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SessionNDFreeBody" uniqueID="SessionNDFreeBody(System.Runtime.InteropServices.HandleRef):System.Void">
				<signature>System.Web.UnsafeNativeMethods.SessionNDFreeBody(System.Runtime.InteropServices.HandleRef):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SessionNDMakeRequest" uniqueID="SessionNDMakeRequest(System.Runtime.InteropServices.HandleRef;System.String;System.Int32;System.Boolean;System.Int32;System.Web.UnsafeNativeMethods+StateProtocolVerb;System.String;System.Web.UnsafeNativeMethods+StateProtocolExclusive;System.Int32;System.Int32;System.Int32;System.Byte[];System.Int32;System.Boolean;System.Web.UnsafeNativeMethods+SessionNDMakeRequestResults):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.SessionNDMakeRequest(System.Runtime.InteropServices.HandleRef;System.String;System.Int32;System.Boolean;System.Int32;System.Web.UnsafeNativeMethods+StateProtocolVerb;System.String;System.Web.UnsafeNativeMethods+StateProtocolExclusive;System.Int32;System.Int32;System.Int32;System.Byte[];System.Int32;System.Boolean;System.Web.UnsafeNativeMethods+SessionNDMakeRequestResults):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetClrThreadPoolLimits" uniqueID="SetClrThreadPoolLimits(System.Int32;System.Int32;System.Boolean):System.Void">
				<signature>System.Web.UnsafeNativeMethods.SetClrThreadPoolLimits(System.Int32;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetDoneWithSessionCalled" uniqueID="SetDoneWithSessionCalled(System.IntPtr):System.Void">
				<signature>System.Web.UnsafeNativeMethods.SetDoneWithSessionCalled(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetMinRequestsExecutingToDetectDeadlock" uniqueID="SetMinRequestsExecutingToDetectDeadlock(System.Int32):System.Void">
				<signature>System.Web.UnsafeNativeMethods.SetMinRequestsExecutingToDetectDeadlock(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetThreadToken" uniqueID="SetThreadToken(System.IntPtr;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.SetThreadToken(System.IntPtr;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SizeofResource" uniqueID="SizeofResource(System.IntPtr;System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.SizeofResource(System.IntPtr;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartPrefetchActivity" uniqueID="StartPrefetchActivity(System.UInt32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.StartPrefetchActivity(System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="TraceRaiseEventMgdHandler" uniqueID="TraceRaiseEventMgdHandler(System.Int32;System.IntPtr;System.String;System.String;System.String;System.String):System.Void">
				<signature>System.Web.UnsafeNativeMethods.TraceRaiseEventMgdHandler(System.Int32;System.IntPtr;System.String;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="TraceRaiseEventWithEcb" uniqueID="TraceRaiseEventWithEcb(System.Int32;System.IntPtr;System.String;System.String;System.String;System.String):System.Void">
				<signature>System.Web.UnsafeNativeMethods.TraceRaiseEventWithEcb(System.Int32;System.IntPtr;System.String;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="TransactManagedCallback" uniqueID="TransactManagedCallback(System.Web.Util.TransactedExecCallback;System.Int32):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.TransactManagedCallback(System.Web.Util.TransactedExecCallback;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UpdateLastActivityTimeForHealthMonitor" uniqueID="UpdateLastActivityTimeForHealthMonitor():System.Void">
				<signature>System.Web.UnsafeNativeMethods.UpdateLastActivityTimeForHealthMonitor():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrlenA" uniqueID="lstrlenA(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.lstrlenA(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrlenW" uniqueID="lstrlenW(System.IntPtr):System.Int32">
				<signature>System.Web.UnsafeNativeMethods.lstrlenW(System.IntPtr):System.Int32</signature>
			</method>
		</class>
		<class name="HttpResponseBase" uniqueID="System.Web.HttpResponseBase">
			<method accessibility="Public" methodKind="Member" name="AddCacheDependency" uniqueID="AddCacheDependency(System.Web.Caching.CacheDependency[]):System.Void">
				<signature>System.Web.HttpResponseBase.AddCacheDependency(System.Web.Caching.CacheDependency[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependencies" uniqueID="AddCacheItemDependencies(System.Collections.ArrayList):System.Void">
				<signature>System.Web.HttpResponseBase.AddCacheItemDependencies(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependencies" uniqueID="AddCacheItemDependencies(System.String[]):System.Void">
				<signature>System.Web.HttpResponseBase.AddCacheItemDependencies(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependency" uniqueID="AddCacheItemDependency(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.AddCacheItemDependency(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependencies" uniqueID="AddFileDependencies(System.Collections.ArrayList):System.Void">
				<signature>System.Web.HttpResponseBase.AddFileDependencies(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependencies" uniqueID="AddFileDependencies(System.String[]):System.Void">
				<signature>System.Web.HttpResponseBase.AddFileDependencies(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependency" uniqueID="AddFileDependency(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.AddFileDependency(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddHeader" uniqueID="AddHeader(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponseBase.AddHeader(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendCookie" uniqueID="AppendCookie(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpResponseBase.AppendCookie(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendHeader" uniqueID="AppendHeader(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponseBase.AppendHeader(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendToLog" uniqueID="AppendToLog(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.AppendToLog(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ApplyAppPathModifier" uniqueID="ApplyAppPathModifier(System.String):System.String">
				<signature>System.Web.HttpResponseBase.ApplyAppPathModifier(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginFlush" uniqueID="BeginFlush(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.HttpResponseBase.BeginFlush(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinaryWrite" uniqueID="BinaryWrite(System.Byte[]):System.Void">
				<signature>System.Web.HttpResponseBase.BinaryWrite(System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Web.HttpResponseBase.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearContent" uniqueID="ClearContent():System.Void">
				<signature>System.Web.HttpResponseBase.ClearContent():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearHeaders" uniqueID="ClearHeaders():System.Void">
				<signature>System.Web.HttpResponseBase.ClearHeaders():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Web.HttpResponseBase.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DisableKernelCache" uniqueID="DisableKernelCache():System.Void">
				<signature>System.Web.HttpResponseBase.DisableKernelCache():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DisableUserCache" uniqueID="DisableUserCache():System.Void">
				<signature>System.Web.HttpResponseBase.DisableUserCache():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="End" uniqueID="End():System.Void">
				<signature>System.Web.HttpResponseBase.End():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndFlush" uniqueID="EndFlush(System.IAsyncResult):System.Void">
				<signature>System.Web.HttpResponseBase.EndFlush(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Flush" uniqueID="Flush():System.Void">
				<signature>System.Web.HttpResponseBase.Flush():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpResponseBase" uniqueID="HttpResponseBase():System.Void">
				<signature>System.Web.HttpResponseBase.HttpResponseBase():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Pics" uniqueID="Pics(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.Pics(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.Redirect(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponseBase.Redirect(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectPermanent" uniqueID="RedirectPermanent(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectPermanent(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectPermanent" uniqueID="RedirectPermanent(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectPermanent(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.Object):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoute(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoute(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Object):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoute(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoute(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.Object):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoutePermanent(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoutePermanent(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String;System.Object):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoutePermanent(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoutePermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponseBase.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveOutputCacheItem" uniqueID="RemoveOutputCacheItem(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.RemoveOutputCacheItem(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveOutputCacheItem" uniqueID="RemoveOutputCacheItem(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponseBase.RemoveOutputCacheItem(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetCookie" uniqueID="SetCookie(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpResponseBase.SetCookie(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransmitFile" uniqueID="TransmitFile(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.TransmitFile(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransmitFile" uniqueID="TransmitFile(System.String;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponseBase.TransmitFile(System.String;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char):System.Void">
				<signature>System.Web.HttpResponseBase.Write(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.Web.HttpResponseBase.Write(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Object):System.Void">
				<signature>System.Web.HttpResponseBase.Write(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.Write(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.IntPtr;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponseBase.WriteFile(System.IntPtr;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.WriteFile(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponseBase.WriteFile(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponseBase.WriteFile(System.String;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteSubstitution" uniqueID="WriteSubstitution(System.Web.HttpResponseSubstitutionCallback):System.Void">
				<signature>System.Web.HttpResponseBase.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Buffer" uniqueID="get_Buffer():System.Boolean">
				<signature>System.Web.HttpResponseBase.get_Buffer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BufferOutput" uniqueID="get_BufferOutput():System.Boolean">
				<signature>System.Web.HttpResponseBase.get_BufferOutput():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cache" uniqueID="get_Cache():System.Web.HttpCachePolicyBase">
				<signature>System.Web.HttpResponseBase.get_Cache():System.Web.HttpCachePolicyBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CacheControl" uniqueID="get_CacheControl():System.String">
				<signature>System.Web.HttpResponseBase.get_CacheControl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Charset" uniqueID="get_Charset():System.String">
				<signature>System.Web.HttpResponseBase.get_Charset():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientDisconnectedToken" uniqueID="get_ClientDisconnectedToken():System.Threading.CancellationToken">
				<signature>System.Web.HttpResponseBase.get_ClientDisconnectedToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentEncoding" uniqueID="get_ContentEncoding():System.Text.Encoding">
				<signature>System.Web.HttpResponseBase.get_ContentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentType" uniqueID="get_ContentType():System.String">
				<signature>System.Web.HttpResponseBase.get_ContentType():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cookies" uniqueID="get_Cookies():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpResponseBase.get_Cookies():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expires" uniqueID="get_Expires():System.Int32">
				<signature>System.Web.HttpResponseBase.get_Expires():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExpiresAbsolute" uniqueID="get_ExpiresAbsolute():System.DateTime">
				<signature>System.Web.HttpResponseBase.get_ExpiresAbsolute():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.IO.Stream">
				<signature>System.Web.HttpResponseBase.get_Filter():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HeaderEncoding" uniqueID="get_HeaderEncoding():System.Text.Encoding">
				<signature>System.Web.HttpResponseBase.get_HeaderEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Headers" uniqueID="get_Headers():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpResponseBase.get_Headers():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClientConnected" uniqueID="get_IsClientConnected():System.Boolean">
				<signature>System.Web.HttpResponseBase.get_IsClientConnected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsRequestBeingRedirected" uniqueID="get_IsRequestBeingRedirected():System.Boolean">
				<signature>System.Web.HttpResponseBase.get_IsRequestBeingRedirected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Output" uniqueID="get_Output():System.IO.TextWriter">
				<signature>System.Web.HttpResponseBase.get_Output():System.IO.TextWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OutputStream" uniqueID="get_OutputStream():System.IO.Stream">
				<signature>System.Web.HttpResponseBase.get_OutputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RedirectLocation" uniqueID="get_RedirectLocation():System.String">
				<signature>System.Web.HttpResponseBase.get_RedirectLocation():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Status" uniqueID="get_Status():System.String">
				<signature>System.Web.HttpResponseBase.get_Status():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StatusCode" uniqueID="get_StatusCode():System.Int32">
				<signature>System.Web.HttpResponseBase.get_StatusCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StatusDescription" uniqueID="get_StatusDescription():System.String">
				<signature>System.Web.HttpResponseBase.get_StatusDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SubStatusCode" uniqueID="get_SubStatusCode():System.Int32">
				<signature>System.Web.HttpResponseBase.get_SubStatusCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsAsyncFlush" uniqueID="get_SupportsAsyncFlush():System.Boolean">
				<signature>System.Web.HttpResponseBase.get_SupportsAsyncFlush():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SuppressContent" uniqueID="get_SuppressContent():System.Boolean">
				<signature>System.Web.HttpResponseBase.get_SuppressContent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SuppressFormsAuthenticationRedirect" uniqueID="get_SuppressFormsAuthenticationRedirect():System.Boolean">
				<signature>System.Web.HttpResponseBase.get_SuppressFormsAuthenticationRedirect():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TrySkipIisCustomErrors" uniqueID="get_TrySkipIisCustomErrors():System.Boolean">
				<signature>System.Web.HttpResponseBase.get_TrySkipIisCustomErrors():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Buffer" uniqueID="set_Buffer(System.Boolean):System.Void">
				<signature>System.Web.HttpResponseBase.set_Buffer(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BufferOutput" uniqueID="set_BufferOutput(System.Boolean):System.Void">
				<signature>System.Web.HttpResponseBase.set_BufferOutput(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CacheControl" uniqueID="set_CacheControl(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.set_CacheControl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Charset" uniqueID="set_Charset(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.set_Charset(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentEncoding" uniqueID="set_ContentEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpResponseBase.set_ContentEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentType" uniqueID="set_ContentType(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.set_ContentType(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Expires" uniqueID="set_Expires(System.Int32):System.Void">
				<signature>System.Web.HttpResponseBase.set_Expires(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ExpiresAbsolute" uniqueID="set_ExpiresAbsolute(System.DateTime):System.Void">
				<signature>System.Web.HttpResponseBase.set_ExpiresAbsolute(System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.IO.Stream):System.Void">
				<signature>System.Web.HttpResponseBase.set_Filter(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HeaderEncoding" uniqueID="set_HeaderEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpResponseBase.set_HeaderEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Output" uniqueID="set_Output(System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpResponseBase.set_Output(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RedirectLocation" uniqueID="set_RedirectLocation(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.set_RedirectLocation(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Status" uniqueID="set_Status(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.set_Status(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StatusCode" uniqueID="set_StatusCode(System.Int32):System.Void">
				<signature>System.Web.HttpResponseBase.set_StatusCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StatusDescription" uniqueID="set_StatusDescription(System.String):System.Void">
				<signature>System.Web.HttpResponseBase.set_StatusDescription(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SubStatusCode" uniqueID="set_SubStatusCode(System.Int32):System.Void">
				<signature>System.Web.HttpResponseBase.set_SubStatusCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SuppressContent" uniqueID="set_SuppressContent(System.Boolean):System.Void">
				<signature>System.Web.HttpResponseBase.set_SuppressContent(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SuppressFormsAuthenticationRedirect" uniqueID="set_SuppressFormsAuthenticationRedirect(System.Boolean):System.Void">
				<signature>System.Web.HttpResponseBase.set_SuppressFormsAuthenticationRedirect(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TrySkipIisCustomErrors" uniqueID="set_TrySkipIisCustomErrors(System.Boolean):System.Void">
				<signature>System.Web.HttpResponseBase.set_TrySkipIisCustomErrors(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="IPrincipalContainer" uniqueID="System.Web.IPrincipalContainer">
			<method accessibility="Public" methodKind="Member" name="get_Principal" uniqueID="get_Principal():System.Security.Principal.IPrincipal">
				<signature>System.Web.IPrincipalContainer.get_Principal():System.Security.Principal.IPrincipal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Principal" uniqueID="set_Principal(System.Security.Principal.IPrincipal):System.Void">
				<signature>System.Web.IPrincipalContainer.set_Principal(System.Security.Principal.IPrincipal):System.Void</signature>
			</method>
		</class>
		<class name="HttpApplication+IExecutionStep" uniqueID="System.Web.HttpApplication+IExecutionStep">
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute():System.Void">
				<signature>System.Web.HttpApplication+IExecutionStep.Execute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CompletedSynchronously" uniqueID="get_CompletedSynchronously():System.Boolean">
				<signature>System.Web.HttpApplication+IExecutionStep.get_CompletedSynchronously():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCancellable" uniqueID="get_IsCancellable():System.Boolean">
				<signature>System.Web.HttpApplication+IExecutionStep.get_IsCancellable():System.Boolean</signature>
			</method>
		</class>
		<class name="HttpContextBase" uniqueID="System.Web.HttpContextBase">
			<method accessibility="Public" methodKind="Member" name="AcceptWebSocketRequest" uniqueID="AcceptWebSocketRequest(System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AcceptWebSocketRequest" uniqueID="AcceptWebSocketRequest(System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext;System.Threading.Tasks.Task&gt;;System.Web.WebSockets.AspNetWebSocketOptions):System.Void">
				<signature>System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext;System.Threading.Tasks.Task&gt;;System.Web.WebSockets.AspNetWebSocketOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddError" uniqueID="AddError(System.Exception):System.Void">
				<signature>System.Web.HttpContextBase.AddError(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnRequestCompleted" uniqueID="AddOnRequestCompleted(System.Action&lt;System.Web.HttpContextBase&gt;):System.Web.ISubscriptionToken">
				<signature>System.Web.HttpContextBase.AddOnRequestCompleted(System.Action&lt;System.Web.HttpContextBase&gt;):System.Web.ISubscriptionToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearError" uniqueID="ClearError():System.Void">
				<signature>System.Web.HttpContextBase.ClearError():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DisposeOnPipelineCompleted" uniqueID="DisposeOnPipelineCompleted(System.IDisposable):System.Web.ISubscriptionToken">
				<signature>System.Web.HttpContextBase.DisposeOnPipelineCompleted(System.IDisposable):System.Web.ISubscriptionToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGlobalResourceObject" uniqueID="GetGlobalResourceObject(System.String;System.String):System.Object">
				<signature>System.Web.HttpContextBase.GetGlobalResourceObject(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGlobalResourceObject" uniqueID="GetGlobalResourceObject(System.String;System.String;System.Globalization.CultureInfo):System.Object">
				<signature>System.Web.HttpContextBase.GetGlobalResourceObject(System.String;System.String;System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLocalResourceObject" uniqueID="GetLocalResourceObject(System.String;System.String):System.Object">
				<signature>System.Web.HttpContextBase.GetLocalResourceObject(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLocalResourceObject" uniqueID="GetLocalResourceObject(System.String;System.String;System.Globalization.CultureInfo):System.Object">
				<signature>System.Web.HttpContextBase.GetLocalResourceObject(System.String;System.String;System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSection" uniqueID="GetSection(System.String):System.Object">
				<signature>System.Web.HttpContextBase.GetSection(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetService" uniqueID="GetService(System.Type):System.Object">
				<signature>System.Web.HttpContextBase.GetService(System.Type):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpContextBase" uniqueID="HttpContextBase():System.Void">
				<signature>System.Web.HttpContextBase.HttpContextBase():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemapHandler" uniqueID="RemapHandler(System.Web.IHttpHandler):System.Void">
				<signature>System.Web.HttpContextBase.RemapHandler(System.Web.IHttpHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.String):System.Void">
				<signature>System.Web.HttpContextBase.RewritePath(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpContextBase.RewritePath(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.String;System.String;System.String):System.Void">
				<signature>System.Web.HttpContextBase.RewritePath(System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RewritePath" uniqueID="RewritePath(System.String;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpContextBase.RewritePath(System.String;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetSessionStateBehavior" uniqueID="SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior):System.Void">
				<signature>System.Web.HttpContextBase.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllErrors" uniqueID="get_AllErrors():System.Exception[]">
				<signature>System.Web.HttpContextBase.get_AllErrors():System.Exception[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowAsyncDuringSyncStages" uniqueID="get_AllowAsyncDuringSyncStages():System.Boolean">
				<signature>System.Web.HttpContextBase.get_AllowAsyncDuringSyncStages():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Application" uniqueID="get_Application():System.Web.HttpApplicationStateBase">
				<signature>System.Web.HttpContextBase.get_Application():System.Web.HttpApplicationStateBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ApplicationInstance" uniqueID="get_ApplicationInstance():System.Web.HttpApplication">
				<signature>System.Web.HttpContextBase.get_ApplicationInstance():System.Web.HttpApplication</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncPreloadMode" uniqueID="get_AsyncPreloadMode():System.Web.Configuration.AsyncPreloadModeFlags">
				<signature>System.Web.HttpContextBase.get_AsyncPreloadMode():System.Web.Configuration.AsyncPreloadModeFlags</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cache" uniqueID="get_Cache():System.Web.Caching.Cache">
				<signature>System.Web.HttpContextBase.get_Cache():System.Web.Caching.Cache</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentHandler" uniqueID="get_CurrentHandler():System.Web.IHttpHandler">
				<signature>System.Web.HttpContextBase.get_CurrentHandler():System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentNotification" uniqueID="get_CurrentNotification():System.Web.RequestNotification">
				<signature>System.Web.HttpContextBase.get_CurrentNotification():System.Web.RequestNotification</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Error" uniqueID="get_Error():System.Exception">
				<signature>System.Web.HttpContextBase.get_Error():System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Handler" uniqueID="get_Handler():System.Web.IHttpHandler">
				<signature>System.Web.HttpContextBase.get_Handler():System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCustomErrorEnabled" uniqueID="get_IsCustomErrorEnabled():System.Boolean">
				<signature>System.Web.HttpContextBase.get_IsCustomErrorEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsDebuggingEnabled" uniqueID="get_IsDebuggingEnabled():System.Boolean">
				<signature>System.Web.HttpContextBase.get_IsDebuggingEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPostNotification" uniqueID="get_IsPostNotification():System.Boolean">
				<signature>System.Web.HttpContextBase.get_IsPostNotification():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsWebSocketRequest" uniqueID="get_IsWebSocketRequest():System.Boolean">
				<signature>System.Web.HttpContextBase.get_IsWebSocketRequest():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsWebSocketRequestUpgrading" uniqueID="get_IsWebSocketRequestUpgrading():System.Boolean">
				<signature>System.Web.HttpContextBase.get_IsWebSocketRequestUpgrading():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.IDictionary">
				<signature>System.Web.HttpContextBase.get_Items():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PageInstrumentation" uniqueID="get_PageInstrumentation():System.Web.Instrumentation.PageInstrumentationService">
				<signature>System.Web.HttpContextBase.get_PageInstrumentation():System.Web.Instrumentation.PageInstrumentationService</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PreviousHandler" uniqueID="get_PreviousHandler():System.Web.IHttpHandler">
				<signature>System.Web.HttpContextBase.get_PreviousHandler():System.Web.IHttpHandler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Profile" uniqueID="get_Profile():System.Web.Profile.ProfileBase">
				<signature>System.Web.HttpContextBase.get_Profile():System.Web.Profile.ProfileBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Request" uniqueID="get_Request():System.Web.HttpRequestBase">
				<signature>System.Web.HttpContextBase.get_Request():System.Web.HttpRequestBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Response" uniqueID="get_Response():System.Web.HttpResponseBase">
				<signature>System.Web.HttpContextBase.get_Response():System.Web.HttpResponseBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Server" uniqueID="get_Server():System.Web.HttpServerUtilityBase">
				<signature>System.Web.HttpContextBase.get_Server():System.Web.HttpServerUtilityBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Session" uniqueID="get_Session():System.Web.HttpSessionStateBase">
				<signature>System.Web.HttpContextBase.get_Session():System.Web.HttpSessionStateBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SkipAuthorization" uniqueID="get_SkipAuthorization():System.Boolean">
				<signature>System.Web.HttpContextBase.get_SkipAuthorization():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ThreadAbortOnTimeout" uniqueID="get_ThreadAbortOnTimeout():System.Boolean">
				<signature>System.Web.HttpContextBase.get_ThreadAbortOnTimeout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Timestamp" uniqueID="get_Timestamp():System.DateTime">
				<signature>System.Web.HttpContextBase.get_Timestamp():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Trace" uniqueID="get_Trace():System.Web.TraceContext">
				<signature>System.Web.HttpContextBase.get_Trace():System.Web.TraceContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_User" uniqueID="get_User():System.Security.Principal.IPrincipal">
				<signature>System.Web.HttpContextBase.get_User():System.Security.Principal.IPrincipal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WebSocketNegotiatedProtocol" uniqueID="get_WebSocketNegotiatedProtocol():System.String">
				<signature>System.Web.HttpContextBase.get_WebSocketNegotiatedProtocol():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WebSocketRequestedProtocols" uniqueID="get_WebSocketRequestedProtocols():System.Collections.Generic.IList&lt;System.String&gt;">
				<signature>System.Web.HttpContextBase.get_WebSocketRequestedProtocols():System.Collections.Generic.IList&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowAsyncDuringSyncStages" uniqueID="set_AllowAsyncDuringSyncStages(System.Boolean):System.Void">
				<signature>System.Web.HttpContextBase.set_AllowAsyncDuringSyncStages(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ApplicationInstance" uniqueID="set_ApplicationInstance(System.Web.HttpApplication):System.Void">
				<signature>System.Web.HttpContextBase.set_ApplicationInstance(System.Web.HttpApplication):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AsyncPreloadMode" uniqueID="set_AsyncPreloadMode(System.Web.Configuration.AsyncPreloadModeFlags):System.Void">
				<signature>System.Web.HttpContextBase.set_AsyncPreloadMode(System.Web.Configuration.AsyncPreloadModeFlags):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Handler" uniqueID="set_Handler(System.Web.IHttpHandler):System.Void">
				<signature>System.Web.HttpContextBase.set_Handler(System.Web.IHttpHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SkipAuthorization" uniqueID="set_SkipAuthorization(System.Boolean):System.Void">
				<signature>System.Web.HttpContextBase.set_SkipAuthorization(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ThreadAbortOnTimeout" uniqueID="set_ThreadAbortOnTimeout(System.Boolean):System.Void">
				<signature>System.Web.HttpContextBase.set_ThreadAbortOnTimeout(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_User" uniqueID="set_User(System.Security.Principal.IPrincipal):System.Void">
				<signature>System.Web.HttpContextBase.set_User(System.Security.Principal.IPrincipal):System.Void</signature>
			</method>
		</class>
		<class name="HttpRequest" uniqueID="System.Web.HttpRequest">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.HttpRequest.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateCookieFromString" uniqueID="CreateCookieFromString(System.String):System.Web.HttpCookie">
				<signature>System.Web.HttpRequest.CreateCookieFromString(System.String):System.Web.HttpCookie</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetAttributeFromHeader" uniqueID="GetAttributeFromHeader(System.String;System.String):System.String">
				<signature>System.Web.HttpRequest.GetAttributeFromHeader(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetRequestValidationSourceName" uniqueID="GetRequestValidationSourceName(System.Web.Util.RequestValidationSource):System.String">
				<signature>System.Web.HttpRequest.GetRequestValidationSourceName(System.Web.Util.RequestValidationSource):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MapImageCoordinatatesInternal" uniqueID="MapImageCoordinatatesInternal(System.String;System.Web.HttpVerb;System.Collections.Specialized.NameValueCollection;System.Collections.Specialized.NameValueCollection):System.Double[]">
				<signature>System.Web.HttpRequest.MapImageCoordinatatesInternal(System.String;System.Web.HttpVerb;System.Collections.Specialized.NameValueCollection;System.Collections.Specialized.NameValueCollection):System.Double[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ParseMultivalueHeader" uniqueID="ParseMultivalueHeader(System.String):System.String[]">
				<signature>System.Web.HttpRequest.ParseMultivalueHeader(System.String):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RemoveNullCharacters" uniqueID="RemoveNullCharacters(System.String):System.String">
				<signature>System.Web.HttpRequest.RemoveNullCharacters(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ServerVariableNameFromHeader" uniqueID="ServerVariableNameFromHeader(System.String):System.String">
				<signature>System.Web.HttpRequest.ServerVariableNameFromHeader(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;ValidateCookieCollection&gt;b__7" uniqueID="&lt;ValidateCookieCollection&gt;b__7(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.&lt;ValidateCookieCollection&gt;b__7(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;ValidatePostedFileCollection&gt;b__9" uniqueID="&lt;ValidatePostedFileCollection&gt;b__9(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.&lt;ValidatePostedFileCollection&gt;b__9(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;get_Url&gt;b__1" uniqueID="&lt;get_Url&gt;b__1():System.String">
				<signature>System.Web.HttpRequest.&lt;get_Url&gt;b__1():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Abort" uniqueID="Abort():System.Void">
				<signature>System.Web.HttpRequest.Abort():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddResponseCookie" uniqueID="AddResponseCookie(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpRequest.AddResponseCookie(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddServerVariableToCollection" uniqueID="AddServerVariableToCollection(System.String):System.Void">
				<signature>System.Web.HttpRequest.AddServerVariableToCollection(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddServerVariableToCollection" uniqueID="AddServerVariableToCollection(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.AddServerVariableToCollection(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddServerVariableToCollection" uniqueID="AddServerVariableToCollection(System.String;System.Web.DynamicServerVariable):System.Void">
				<signature>System.Web.HttpRequest.AddServerVariableToCollection(System.String;System.Web.DynamicServerVariable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendToLogQueryString" uniqueID="AppendToLogQueryString(System.String):System.Void">
				<signature>System.Web.HttpRequest.AppendToLogQueryString(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ApplyFilter" uniqueID="ApplyFilter(System.Web.HttpRawUploadedContent;System.Int32):System.Void">
				<signature>System.Web.HttpRequest.ApplyFilter(System.Web.HttpRawUploadedContent;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinaryRead" uniqueID="BinaryRead(System.Int32):System.Byte[]">
				<signature>System.Web.HttpRequest.BinaryRead(System.Int32):System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BuildUrl" uniqueID="BuildUrl(System.Func&lt;System.String&gt;):System.Uri">
				<signature>System.Web.HttpRequest.BuildUrl(System.Func&lt;System.String&gt;):System.Uri</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CalcDynamicServerVariable" uniqueID="CalcDynamicServerVariable(System.Web.DynamicServerVariable):System.String">
				<signature>System.Web.HttpRequest.CalcDynamicServerVariable(System.Web.DynamicServerVariable):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CanValidateRequest" uniqueID="CanValidateRequest():System.Boolean">
				<signature>System.Web.HttpRequest.CanValidateRequest():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearReferencesForWebSocketProcessing" uniqueID="ClearReferencesForWebSocketProcessing():System.Void">
				<signature>System.Web.HttpRequest.ClearReferencesForWebSocketProcessing():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CombineAllHeaders" uniqueID="CombineAllHeaders(System.Boolean):System.String">
				<signature>System.Web.HttpRequest.CombineAllHeaders(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateHttpClientCertificateWithAssert" uniqueID="CreateHttpClientCertificateWithAssert():System.Web.HttpClientCertificate">
				<signature>System.Web.HttpRequest.CreateHttpClientCertificateWithAssert():System.Web.HttpClientCertificate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Web.HttpRequest.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnableGranularRequestValidation" uniqueID="EnableGranularRequestValidation():System.Void">
				<signature>System.Web.HttpRequest.EnableGranularRequestValidation():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureCookies" uniqueID="EnsureCookies():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpRequest.EnsureCookies():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureFiles" uniqueID="EnsureFiles():System.Web.HttpFileCollection">
				<signature>System.Web.HttpRequest.EnsureFiles():System.Web.HttpFileCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureForm" uniqueID="EnsureForm():System.Web.HttpValueCollection">
				<signature>System.Web.HttpRequest.EnsureForm():System.Web.HttpValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureHasNotTransitionedToWebSocket" uniqueID="EnsureHasNotTransitionedToWebSocket():System.Void">
				<signature>System.Web.HttpRequest.EnsureHasNotTransitionedToWebSocket():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureHeaders" uniqueID="EnsureHeaders():System.Web.HttpHeaderCollection">
				<signature>System.Web.HttpRequest.EnsureHeaders():System.Web.HttpHeaderCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureQueryString" uniqueID="EnsureQueryString():System.Web.HttpValueCollection">
				<signature>System.Web.HttpRequest.EnsureQueryString():System.Web.HttpValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureRawUrl" uniqueID="EnsureRawUrl():System.String">
				<signature>System.Web.HttpRequest.EnsureRawUrl():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FetchServerVariable" uniqueID="FetchServerVariable(System.String):System.String">
				<signature>System.Web.HttpRequest.FetchServerVariable(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FillInCookiesCollection" uniqueID="FillInCookiesCollection(System.Web.HttpCookieCollection;System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.FillInCookiesCollection(System.Web.HttpCookieCollection;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInFilesCollection" uniqueID="FillInFilesCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInFilesCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInFormCollection" uniqueID="FillInFormCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInFormCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInHeadersCollection" uniqueID="FillInHeadersCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInHeadersCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInParamsCollection" uniqueID="FillInParamsCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInParamsCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInQueryStringCollection" uniqueID="FillInQueryStringCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInQueryStringCollection():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FillInServerVariablesCollection" uniqueID="FillInServerVariablesCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInServerVariablesCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferedInputStream" uniqueID="GetBufferedInputStream():System.IO.Stream">
				<signature>System.Web.HttpRequest.GetBufferedInputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferlessInputStream" uniqueID="GetBufferlessInputStream():System.IO.Stream">
				<signature>System.Web.HttpRequest.GetBufferlessInputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferlessInputStream" uniqueID="GetBufferlessInputStream(System.Boolean):System.IO.Stream">
				<signature>System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean):System.IO.Stream</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEncodingFromHeaders" uniqueID="GetEncodingFromHeaders():System.Text.Encoding">
				<signature>System.Web.HttpRequest.GetEncodingFromHeaders():System.Text.Encoding</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEntireRawContent" uniqueID="GetEntireRawContent():System.Web.HttpRawUploadedContent">
				<signature>System.Web.HttpRequest.GetEntireRawContent():System.Web.HttpRawUploadedContent</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetInputStream" uniqueID="GetInputStream(System.Boolean;System.Boolean):System.IO.Stream">
				<signature>System.Web.HttpRequest.GetInputStream(System.Boolean;System.Boolean):System.IO.Stream</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetMultipartBoundary" uniqueID="GetMultipartBoundary():System.Byte[]">
				<signature>System.Web.HttpRequest.GetMultipartBoundary():System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetMultipartContent" uniqueID="GetMultipartContent():System.Web.MultipartContentElement[]">
				<signature>System.Web.HttpRequest.GetMultipartContent():System.Web.MultipartContentElement[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetParams" uniqueID="GetParams():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetParams():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetParamsWithDemand" uniqueID="GetParamsWithDemand():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetParamsWithDemand():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetServerVars" uniqueID="GetServerVars():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetServerVars():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetServerVarsWithDemand" uniqueID="GetServerVarsWithDemand():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetServerVarsWithDemand():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetServerVarsWithoutDemand" uniqueID="GetServerVarsWithoutDemand():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetServerVarsWithoutDemand():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUnvalidatedPath" uniqueID="GetUnvalidatedPath():System.String">
				<signature>System.Web.HttpRequest.GetUnvalidatedPath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUnvalidatedPathInfo" uniqueID="GetUnvalidatedPathInfo():System.String">
				<signature>System.Web.HttpRequest.GetUnvalidatedPathInfo():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpRequest" uniqueID="HttpRequest(System.String;System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.HttpRequest(System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpRequest" uniqueID="HttpRequest(System.Web.HttpWorkerRequest;System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpRequest.HttpRequest(System.Web.HttpWorkerRequest;System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpRequest" uniqueID="HttpRequest(System.Web.VirtualPath;System.String):System.Void">
				<signature>System.Web.HttpRequest.HttpRequest(System.Web.VirtualPath;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertEntityBody" uniqueID="InsertEntityBody():System.Void">
				<signature>System.Web.HttpRequest.InsertEntityBody():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertEntityBody" uniqueID="InsertEntityBody(System.Byte[];System.Int32;System.Int32):System.Void">
				<signature>System.Web.HttpRequest.InsertEntityBody(System.Byte[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalRewritePath" uniqueID="InternalRewritePath(System.Web.VirtualPath;System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.InternalRewritePath(System.Web.VirtualPath;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalRewritePath" uniqueID="InternalRewritePath(System.Web.VirtualPath;System.Web.VirtualPath;System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.InternalRewritePath(System.Web.VirtualPath;System.Web.VirtualPath;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvalidateParams" uniqueID="InvalidateParams():System.Void">
				<signature>System.Web.HttpRequest.InvalidateParams():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapImageCoordinates" uniqueID="MapImageCoordinates(System.String):System.Int32[]">
				<signature>System.Web.HttpRequest.MapImageCoordinates(System.String):System.Int32[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPath" uniqueID="MapPath(System.String):System.String">
				<signature>System.Web.HttpRequest.MapPath(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPath" uniqueID="MapPath(System.String;System.String;System.Boolean):System.String">
				<signature>System.Web.HttpRequest.MapPath(System.String;System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MapPath" uniqueID="MapPath(System.Web.VirtualPath):System.String">
				<signature>System.Web.HttpRequest.MapPath(System.Web.VirtualPath):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MapPath" uniqueID="MapPath(System.Web.VirtualPath;System.Web.VirtualPath;System.Boolean):System.String">
				<signature>System.Web.HttpRequest.MapPath(System.Web.VirtualPath;System.Web.VirtualPath;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapRawImageCoordinates" uniqueID="MapRawImageCoordinates(System.String):System.Double[]">
				<signature>System.Web.HttpRequest.MapRawImageCoordinates(System.String):System.Double[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCookies" uniqueID="ResetCookies():System.Void">
				<signature>System.Web.HttpRequest.ResetCookies():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SaveAs" uniqueID="SaveAs(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.SaveAs(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetDynamicCompression" uniqueID="SetDynamicCompression(System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.SetDynamicCompression(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetRawContent" uniqueID="SetRawContent(System.Web.HttpRawUploadedContent):System.Void">
				<signature>System.Web.HttpRequest.SetRawContent(System.Web.HttpRawUploadedContent):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetSkipAuthorization" uniqueID="SetSkipAuthorization(System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.SetSkipAuthorization(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StoreReferenceToResponseCookies" uniqueID="StoreReferenceToResponseCookies(System.Web.HttpCookieCollection):System.Void">
				<signature>System.Web.HttpRequest.StoreReferenceToResponseCookies(System.Web.HttpCookieCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SwitchCurrentExecutionFilePath" uniqueID="SwitchCurrentExecutionFilePath(System.Web.VirtualPath):System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.SwitchCurrentExecutionFilePath(System.Web.VirtualPath):System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SwitchForm" uniqueID="SwitchForm(System.Web.HttpValueCollection):System.Web.HttpValueCollection">
				<signature>System.Web.HttpRequest.SwitchForm(System.Web.HttpValueCollection):System.Web.HttpValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SynchronizeHeader" uniqueID="SynchronizeHeader(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.SynchronizeHeader(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SynchronizeServerVariable" uniqueID="SynchronizeServerVariable(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.SynchronizeServerVariable(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateCookieCollection" uniqueID="ValidateCookieCollection(System.Web.HttpCookieCollection):System.Void">
				<signature>System.Web.HttpRequest.ValidateCookieCollection(System.Web.HttpCookieCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateCookielessHeaderIfRequiredByConfig" uniqueID="ValidateCookielessHeaderIfRequiredByConfig(System.String):System.Void">
				<signature>System.Web.HttpRequest.ValidateCookielessHeaderIfRequiredByConfig(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateHttpValueCollection" uniqueID="ValidateHttpValueCollection(System.Web.HttpValueCollection;System.Web.Util.RequestValidationSource):System.Void">
				<signature>System.Web.HttpRequest.ValidateHttpValueCollection(System.Web.HttpValueCollection;System.Web.Util.RequestValidationSource):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ValidateInput" uniqueID="ValidateInput():System.Void">
				<signature>System.Web.HttpRequest.ValidateInput():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateInputIfRequiredByConfig" uniqueID="ValidateInputIfRequiredByConfig():System.Void">
				<signature>System.Web.HttpRequest.ValidateInputIfRequiredByConfig():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidatePostedFileCollection" uniqueID="ValidatePostedFileCollection(System.Web.HttpFileCollection):System.Void">
				<signature>System.Web.HttpRequest.ValidatePostedFileCollection(System.Web.HttpFileCollection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateString" uniqueID="ValidateString(System.String;System.String;System.Web.Util.RequestValidationSource):System.Void">
				<signature>System.Web.HttpRequest.ValidateString(System.String;System.String;System.Web.Util.RequestValidationSource):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AcceptTypes" uniqueID="get_AcceptTypes():System.String[]">
				<signature>System.Web.HttpRequest.get_AcceptTypes():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AnonymousID" uniqueID="get_AnonymousID():System.String">
				<signature>System.Web.HttpRequest.get_AnonymousID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AppRelativeCurrentExecutionFilePath" uniqueID="get_AppRelativeCurrentExecutionFilePath():System.String">
				<signature>System.Web.HttpRequest.get_AppRelativeCurrentExecutionFilePath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ApplicationPath" uniqueID="get_ApplicationPath():System.String">
				<signature>System.Web.HttpRequest.get_ApplicationPath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ApplicationPathObject" uniqueID="get_ApplicationPathObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_ApplicationPathObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Browser" uniqueID="get_Browser():System.Web.HttpBrowserCapabilities">
				<signature>System.Web.HttpRequest.get_Browser():System.Web.HttpBrowserCapabilities</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientBaseDir" uniqueID="get_ClientBaseDir():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_ClientBaseDir():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientCertificate" uniqueID="get_ClientCertificate():System.Web.HttpClientCertificate">
				<signature>System.Web.HttpRequest.get_ClientCertificate():System.Web.HttpClientCertificate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientFilePath" uniqueID="get_ClientFilePath():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_ClientFilePath():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientTarget" uniqueID="get_ClientTarget():System.String">
				<signature>System.Web.HttpRequest.get_ClientTarget():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentEncoding" uniqueID="get_ContentEncoding():System.Text.Encoding">
				<signature>System.Web.HttpRequest.get_ContentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentLength" uniqueID="get_ContentLength():System.Int32">
				<signature>System.Web.HttpRequest.get_ContentLength():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentType" uniqueID="get_ContentType():System.String">
				<signature>System.Web.HttpRequest.get_ContentType():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Web.HttpContext">
				<signature>System.Web.HttpRequest.get_Context():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cookies" uniqueID="get_Cookies():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpRequest.get_Cookies():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentExecutionFilePath" uniqueID="get_CurrentExecutionFilePath():System.String">
				<signature>System.Web.HttpRequest.get_CurrentExecutionFilePath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentExecutionFilePathExtension" uniqueID="get_CurrentExecutionFilePathExtension():System.String">
				<signature>System.Web.HttpRequest.get_CurrentExecutionFilePathExtension():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CurrentExecutionFilePathObject" uniqueID="get_CurrentExecutionFilePathObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_CurrentExecutionFilePathObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EntityBody" uniqueID="get_EntityBody():System.Byte[]">
				<signature>System.Web.HttpRequest.get_EntityBody():System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FilePath" uniqueID="get_FilePath():System.String">
				<signature>System.Web.HttpRequest.get_FilePath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FilePathObject" uniqueID="get_FilePathObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_FilePathObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Files" uniqueID="get_Files():System.Web.HttpFileCollection">
				<signature>System.Web.HttpRequest.get_Files():System.Web.HttpFileCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.IO.Stream">
				<signature>System.Web.HttpRequest.get_Filter():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Form" uniqueID="get_Form():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_Form():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasForm" uniqueID="get_HasForm():System.Boolean">
				<signature>System.Web.HttpRequest.get_HasForm():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasQueryString" uniqueID="get_HasQueryString():System.Boolean">
				<signature>System.Web.HttpRequest.get_HasQueryString():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_HasTransitionedToWebSocketRequest" uniqueID="get_HasTransitionedToWebSocketRequest():System.Boolean">
				<signature>System.Web.HttpRequest.get_HasTransitionedToWebSocketRequest():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Headers" uniqueID="get_Headers():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_Headers():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HttpChannelBinding" uniqueID="get_HttpChannelBinding():System.Security.Authentication.ExtendedProtection.ChannelBinding">
				<signature>System.Web.HttpRequest.get_HttpChannelBinding():System.Security.Authentication.ExtendedProtection.ChannelBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HttpMethod" uniqueID="get_HttpMethod():System.String">
				<signature>System.Web.HttpRequest.get_HttpMethod():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HttpVerb" uniqueID="get_HttpVerb():System.Web.HttpVerb">
				<signature>System.Web.HttpRequest.get_HttpVerb():System.Web.HttpVerb</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IfModifiedSince" uniqueID="get_IfModifiedSince():System.String">
				<signature>System.Web.HttpRequest.get_IfModifiedSince():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IfNoneMatch" uniqueID="get_IfNoneMatch():System.String">
				<signature>System.Web.HttpRequest.get_IfNoneMatch():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InputStream" uniqueID="get_InputStream():System.IO.Stream">
				<signature>System.Web.HttpRequest.get_InputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAuthenticated" uniqueID="get_IsAuthenticated():System.Boolean">
				<signature>System.Web.HttpRequest.get_IsAuthenticated():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsDebuggingRequest" uniqueID="get_IsDebuggingRequest():System.Boolean">
				<signature>System.Web.HttpRequest.get_IsDebuggingRequest():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLocal" uniqueID="get_IsLocal():System.Boolean">
				<signature>System.Web.HttpRequest.get_IsLocal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecureConnection" uniqueID="get_IsSecureConnection():System.Boolean">
				<signature>System.Web.HttpRequest.get_IsSecureConnection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Web.HttpRequest.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LogonUserIdentity" uniqueID="get_LogonUserIdentity():System.Security.Principal.WindowsIdentity">
				<signature>System.Web.HttpRequest.get_LogonUserIdentity():System.Security.Principal.WindowsIdentity</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NeedToInsertEntityBody" uniqueID="get_NeedToInsertEntityBody():System.Boolean">
				<signature>System.Web.HttpRequest.get_NeedToInsertEntityBody():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Params" uniqueID="get_Params():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_Params():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Path" uniqueID="get_Path():System.String">
				<signature>System.Web.HttpRequest.get_Path():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PathInfo" uniqueID="get_PathInfo():System.String">
				<signature>System.Web.HttpRequest.get_PathInfo():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PathInfoObject" uniqueID="get_PathInfoObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_PathInfoObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PathObject" uniqueID="get_PathObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_PathObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PathWithQueryString" uniqueID="get_PathWithQueryString():System.String">
				<signature>System.Web.HttpRequest.get_PathWithQueryString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PhysicalApplicationPath" uniqueID="get_PhysicalApplicationPath():System.String">
				<signature>System.Web.HttpRequest.get_PhysicalApplicationPath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PhysicalPath" uniqueID="get_PhysicalPath():System.String">
				<signature>System.Web.HttpRequest.get_PhysicalPath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PhysicalPathInternal" uniqueID="get_PhysicalPathInternal():System.String">
				<signature>System.Web.HttpRequest.get_PhysicalPathInternal():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QueryString" uniqueID="get_QueryString():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_QueryString():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_QueryStringBytes" uniqueID="get_QueryStringBytes():System.Byte[]">
				<signature>System.Web.HttpRequest.get_QueryStringBytes():System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_QueryStringEncoding" uniqueID="get_QueryStringEncoding():System.Text.Encoding">
				<signature>System.Web.HttpRequest.get_QueryStringEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_QueryStringText" uniqueID="get_QueryStringText():System.String">
				<signature>System.Web.HttpRequest.get_QueryStringText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RawUrl" uniqueID="get_RawUrl():System.String">
				<signature>System.Web.HttpRequest.get_RawUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReadEntityBodyMode" uniqueID="get_ReadEntityBodyMode():System.Web.ReadEntityBodyMode">
				<signature>System.Web.HttpRequest.get_ReadEntityBodyMode():System.Web.ReadEntityBodyMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RequestContext" uniqueID="get_RequestContext():System.Web.Routing.RequestContext">
				<signature>System.Web.HttpRequest.get_RequestContext():System.Web.Routing.RequestContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RequestType" uniqueID="get_RequestType():System.String">
				<signature>System.Web.HttpRequest.get_RequestType():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Response" uniqueID="get_Response():System.Web.HttpResponse">
				<signature>System.Web.HttpRequest.get_Response():System.Web.HttpResponse</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RewrittenUrl" uniqueID="get_RewrittenUrl():System.String">
				<signature>System.Web.HttpRequest.get_RewrittenUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ServerVariables" uniqueID="get_ServerVariables():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_ServerVariables():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TimedOutToken" uniqueID="get_TimedOutToken():System.Threading.CancellationToken">
				<signature>System.Web.HttpRequest.get_TimedOutToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TotalBytes" uniqueID="get_TotalBytes():System.Int32">
				<signature>System.Web.HttpRequest.get_TotalBytes():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Unvalidated" uniqueID="get_Unvalidated():System.Web.UnvalidatedRequestValues">
				<signature>System.Web.HttpRequest.get_Unvalidated():System.Web.UnvalidatedRequestValues</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Url" uniqueID="get_Url():System.Uri">
				<signature>System.Web.HttpRequest.get_Url():System.Uri</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UrlInternal" uniqueID="get_UrlInternal():System.String">
				<signature>System.Web.HttpRequest.get_UrlInternal():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UrlReferrer" uniqueID="get_UrlReferrer():System.Uri">
				<signature>System.Web.HttpRequest.get_UrlReferrer():System.Uri</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserAgent" uniqueID="get_UserAgent():System.String">
				<signature>System.Web.HttpRequest.get_UserAgent():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserHostAddress" uniqueID="get_UserHostAddress():System.String">
				<signature>System.Web.HttpRequest.get_UserHostAddress():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserHostName" uniqueID="get_UserHostName():System.String">
				<signature>System.Web.HttpRequest.get_UserHostName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserLanguages" uniqueID="get_UserLanguages():System.String[]">
				<signature>System.Web.HttpRequest.get_UserLanguages():System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ValidateInputWasCalled" uniqueID="get_ValidateInputWasCalled():System.Boolean">
				<signature>System.Web.HttpRequest.get_ValidateInputWasCalled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AnonymousID" uniqueID="set_AnonymousID(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_AnonymousID(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Browser" uniqueID="set_Browser(System.Web.HttpBrowserCapabilities):System.Void">
				<signature>System.Web.HttpRequest.set_Browser(System.Web.HttpBrowserCapabilities):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ClientFilePath" uniqueID="set_ClientFilePath(System.Web.VirtualPath):System.Void">
				<signature>System.Web.HttpRequest.set_ClientFilePath(System.Web.VirtualPath):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ClientTarget" uniqueID="set_ClientTarget(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_ClientTarget(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentEncoding" uniqueID="set_ContentEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpRequest.set_ContentEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentType" uniqueID="set_ContentType(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_ContentType(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Context" uniqueID="set_Context(System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpRequest.set_Context(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.IO.Stream):System.Void">
				<signature>System.Web.HttpRequest.set_Filter(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_NeedToInsertEntityBody" uniqueID="set_NeedToInsertEntityBody(System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.set_NeedToInsertEntityBody(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_QueryStringText" uniqueID="set_QueryStringText(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_QueryStringText(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RawUrl" uniqueID="set_RawUrl(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_RawUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RequestContext" uniqueID="set_RequestContext(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.HttpRequest.set_RequestContext(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RequestType" uniqueID="set_RequestType(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_RequestType(System.String):System.Void</signature>
			</method>
		</class>
		<class name="HttpRequestBase" uniqueID="System.Web.HttpRequestBase">
			<method accessibility="Public" methodKind="Member" name="Abort" uniqueID="Abort():System.Void">
				<signature>System.Web.HttpRequestBase.Abort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinaryRead" uniqueID="BinaryRead(System.Int32):System.Byte[]">
				<signature>System.Web.HttpRequestBase.BinaryRead(System.Int32):System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferedInputStream" uniqueID="GetBufferedInputStream():System.IO.Stream">
				<signature>System.Web.HttpRequestBase.GetBufferedInputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferlessInputStream" uniqueID="GetBufferlessInputStream():System.IO.Stream">
				<signature>System.Web.HttpRequestBase.GetBufferlessInputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferlessInputStream" uniqueID="GetBufferlessInputStream(System.Boolean):System.IO.Stream">
				<signature>System.Web.HttpRequestBase.GetBufferlessInputStream(System.Boolean):System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpRequestBase" uniqueID="HttpRequestBase():System.Void">
				<signature>System.Web.HttpRequestBase.HttpRequestBase():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertEntityBody" uniqueID="InsertEntityBody():System.Void">
				<signature>System.Web.HttpRequestBase.InsertEntityBody():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertEntityBody" uniqueID="InsertEntityBody(System.Byte[];System.Int32;System.Int32):System.Void">
				<signature>System.Web.HttpRequestBase.InsertEntityBody(System.Byte[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapImageCoordinates" uniqueID="MapImageCoordinates(System.String):System.Int32[]">
				<signature>System.Web.HttpRequestBase.MapImageCoordinates(System.String):System.Int32[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPath" uniqueID="MapPath(System.String):System.String">
				<signature>System.Web.HttpRequestBase.MapPath(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPath" uniqueID="MapPath(System.String;System.String;System.Boolean):System.String">
				<signature>System.Web.HttpRequestBase.MapPath(System.String;System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapRawImageCoordinates" uniqueID="MapRawImageCoordinates(System.String):System.Double[]">
				<signature>System.Web.HttpRequestBase.MapRawImageCoordinates(System.String):System.Double[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SaveAs" uniqueID="SaveAs(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpRequestBase.SaveAs(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ValidateInput" uniqueID="ValidateInput():System.Void">
				<signature>System.Web.HttpRequestBase.ValidateInput():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AcceptTypes" uniqueID="get_AcceptTypes():System.String[]">
				<signature>System.Web.HttpRequestBase.get_AcceptTypes():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AnonymousID" uniqueID="get_AnonymousID():System.String">
				<signature>System.Web.HttpRequestBase.get_AnonymousID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AppRelativeCurrentExecutionFilePath" uniqueID="get_AppRelativeCurrentExecutionFilePath():System.String">
				<signature>System.Web.HttpRequestBase.get_AppRelativeCurrentExecutionFilePath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ApplicationPath" uniqueID="get_ApplicationPath():System.String">
				<signature>System.Web.HttpRequestBase.get_ApplicationPath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Browser" uniqueID="get_Browser():System.Web.HttpBrowserCapabilitiesBase">
				<signature>System.Web.HttpRequestBase.get_Browser():System.Web.HttpBrowserCapabilitiesBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientCertificate" uniqueID="get_ClientCertificate():System.Web.HttpClientCertificate">
				<signature>System.Web.HttpRequestBase.get_ClientCertificate():System.Web.HttpClientCertificate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentEncoding" uniqueID="get_ContentEncoding():System.Text.Encoding">
				<signature>System.Web.HttpRequestBase.get_ContentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentLength" uniqueID="get_ContentLength():System.Int32">
				<signature>System.Web.HttpRequestBase.get_ContentLength():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentType" uniqueID="get_ContentType():System.String">
				<signature>System.Web.HttpRequestBase.get_ContentType():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cookies" uniqueID="get_Cookies():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpRequestBase.get_Cookies():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentExecutionFilePath" uniqueID="get_CurrentExecutionFilePath():System.String">
				<signature>System.Web.HttpRequestBase.get_CurrentExecutionFilePath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentExecutionFilePathExtension" uniqueID="get_CurrentExecutionFilePathExtension():System.String">
				<signature>System.Web.HttpRequestBase.get_CurrentExecutionFilePathExtension():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FilePath" uniqueID="get_FilePath():System.String">
				<signature>System.Web.HttpRequestBase.get_FilePath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Files" uniqueID="get_Files():System.Web.HttpFileCollectionBase">
				<signature>System.Web.HttpRequestBase.get_Files():System.Web.HttpFileCollectionBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.IO.Stream">
				<signature>System.Web.HttpRequestBase.get_Filter():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Form" uniqueID="get_Form():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequestBase.get_Form():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Headers" uniqueID="get_Headers():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequestBase.get_Headers():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HttpChannelBinding" uniqueID="get_HttpChannelBinding():System.Security.Authentication.ExtendedProtection.ChannelBinding">
				<signature>System.Web.HttpRequestBase.get_HttpChannelBinding():System.Security.Authentication.ExtendedProtection.ChannelBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HttpMethod" uniqueID="get_HttpMethod():System.String">
				<signature>System.Web.HttpRequestBase.get_HttpMethod():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InputStream" uniqueID="get_InputStream():System.IO.Stream">
				<signature>System.Web.HttpRequestBase.get_InputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAuthenticated" uniqueID="get_IsAuthenticated():System.Boolean">
				<signature>System.Web.HttpRequestBase.get_IsAuthenticated():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLocal" uniqueID="get_IsLocal():System.Boolean">
				<signature>System.Web.HttpRequestBase.get_IsLocal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecureConnection" uniqueID="get_IsSecureConnection():System.Boolean">
				<signature>System.Web.HttpRequestBase.get_IsSecureConnection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Web.HttpRequestBase.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LogonUserIdentity" uniqueID="get_LogonUserIdentity():System.Security.Principal.WindowsIdentity">
				<signature>System.Web.HttpRequestBase.get_LogonUserIdentity():System.Security.Principal.WindowsIdentity</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Params" uniqueID="get_Params():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequestBase.get_Params():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Path" uniqueID="get_Path():System.String">
				<signature>System.Web.HttpRequestBase.get_Path():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PathInfo" uniqueID="get_PathInfo():System.String">
				<signature>System.Web.HttpRequestBase.get_PathInfo():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PhysicalApplicationPath" uniqueID="get_PhysicalApplicationPath():System.String">
				<signature>System.Web.HttpRequestBase.get_PhysicalApplicationPath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PhysicalPath" uniqueID="get_PhysicalPath():System.String">
				<signature>System.Web.HttpRequestBase.get_PhysicalPath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QueryString" uniqueID="get_QueryString():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequestBase.get_QueryString():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RawUrl" uniqueID="get_RawUrl():System.String">
				<signature>System.Web.HttpRequestBase.get_RawUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReadEntityBodyMode" uniqueID="get_ReadEntityBodyMode():System.Web.ReadEntityBodyMode">
				<signature>System.Web.HttpRequestBase.get_ReadEntityBodyMode():System.Web.ReadEntityBodyMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RequestContext" uniqueID="get_RequestContext():System.Web.Routing.RequestContext">
				<signature>System.Web.HttpRequestBase.get_RequestContext():System.Web.Routing.RequestContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RequestType" uniqueID="get_RequestType():System.String">
				<signature>System.Web.HttpRequestBase.get_RequestType():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ServerVariables" uniqueID="get_ServerVariables():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequestBase.get_ServerVariables():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TimedOutToken" uniqueID="get_TimedOutToken():System.Threading.CancellationToken">
				<signature>System.Web.HttpRequestBase.get_TimedOutToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TotalBytes" uniqueID="get_TotalBytes():System.Int32">
				<signature>System.Web.HttpRequestBase.get_TotalBytes():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Unvalidated" uniqueID="get_Unvalidated():System.Web.UnvalidatedRequestValuesBase">
				<signature>System.Web.HttpRequestBase.get_Unvalidated():System.Web.UnvalidatedRequestValuesBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Url" uniqueID="get_Url():System.Uri">
				<signature>System.Web.HttpRequestBase.get_Url():System.Uri</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UrlReferrer" uniqueID="get_UrlReferrer():System.Uri">
				<signature>System.Web.HttpRequestBase.get_UrlReferrer():System.Uri</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserAgent" uniqueID="get_UserAgent():System.String">
				<signature>System.Web.HttpRequestBase.get_UserAgent():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserHostAddress" uniqueID="get_UserHostAddress():System.String">
				<signature>System.Web.HttpRequestBase.get_UserHostAddress():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserHostName" uniqueID="get_UserHostName():System.String">
				<signature>System.Web.HttpRequestBase.get_UserHostName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserLanguages" uniqueID="get_UserLanguages():System.String[]">
				<signature>System.Web.HttpRequestBase.get_UserLanguages():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentEncoding" uniqueID="set_ContentEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpRequestBase.set_ContentEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentType" uniqueID="set_ContentType(System.String):System.Void">
				<signature>System.Web.HttpRequestBase.set_ContentType(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.IO.Stream):System.Void">
				<signature>System.Web.HttpRequestBase.set_Filter(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RequestContext" uniqueID="set_RequestContext(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.HttpRequestBase.set_RequestContext(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RequestType" uniqueID="set_RequestType(System.String):System.Void">
				<signature>System.Web.HttpRequestBase.set_RequestType(System.String):System.Void</signature>
			</method>
		</class>
		<class name="HttpResponse" uniqueID="System.Web.HttpResponse">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.HttpResponse.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="AbortCurrentThread" uniqueID="AbortCurrentThread():System.Void">
				<signature>System.Web.HttpResponse.AbortCurrentThread():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RemoveOutputCacheItem" uniqueID="RemoveOutputCacheItem(System.String):System.Void">
				<signature>System.Web.HttpResponse.RemoveOutputCacheItem(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RemoveOutputCacheItem" uniqueID="RemoveOutputCacheItem(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponse.RemoveOutputCacheItem(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="add_Redirecting" uniqueID="add_Redirecting(System.EventHandler):System.Void">
				<signature>System.Web.HttpResponse.add_Redirecting(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="remove_Redirecting" uniqueID="remove_Redirecting(System.EventHandler):System.Void">
				<signature>System.Web.HttpResponse.remove_Redirecting(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheDependency" uniqueID="AddCacheDependency(System.Web.Caching.CacheDependency[]):System.Void">
				<signature>System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependencies" uniqueID="AddCacheItemDependencies(System.Collections.ArrayList):System.Void">
				<signature>System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependencies" uniqueID="AddCacheItemDependencies(System.String[]):System.Void">
				<signature>System.Web.HttpResponse.AddCacheItemDependencies(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependency" uniqueID="AddCacheItemDependency(System.String):System.Void">
				<signature>System.Web.HttpResponse.AddCacheItemDependency(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependencies" uniqueID="AddFileDependencies(System.Collections.ArrayList):System.Void">
				<signature>System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependencies" uniqueID="AddFileDependencies(System.String[]):System.Void">
				<signature>System.Web.HttpResponse.AddFileDependencies(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddFileDependencies" uniqueID="AddFileDependencies(System.String[];System.DateTime):System.Void">
				<signature>System.Web.HttpResponse.AddFileDependencies(System.String[];System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependency" uniqueID="AddFileDependency(System.String):System.Void">
				<signature>System.Web.HttpResponse.AddFileDependency(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddHeader" uniqueID="AddHeader(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponse.AddHeader(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddVirtualPathDependencies" uniqueID="AddVirtualPathDependencies(System.String[]):System.Void">
				<signature>System.Web.HttpResponse.AddVirtualPathDependencies(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendCharSetToContentType" uniqueID="AppendCharSetToContentType(System.String):System.String">
				<signature>System.Web.HttpResponse.AppendCharSetToContentType(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendCookie" uniqueID="AppendCookie(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendHeader" uniqueID="AppendHeader(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponse.AppendHeader(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AppendHeader" uniqueID="AppendHeader(System.Web.HttpResponseHeader):System.Void">
				<signature>System.Web.HttpResponse.AppendHeader(System.Web.HttpResponseHeader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendToLog" uniqueID="AppendToLog(System.String):System.Void">
				<signature>System.Web.HttpResponse.AppendToLog(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ApplyAppPathModifier" uniqueID="ApplyAppPathModifier(System.String):System.String">
				<signature>System.Web.HttpResponse.ApplyAppPathModifier(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ApplyRedirectQueryStringIfRequired" uniqueID="ApplyRedirectQueryStringIfRequired(System.String):System.String">
				<signature>System.Web.HttpResponse.ApplyRedirectQueryStringIfRequired(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeforeCookieCollectionChange" uniqueID="BeforeCookieCollectionChange():System.Void">
				<signature>System.Web.HttpResponse.BeforeCookieCollectionChange():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeginExecuteUrlForEntireResponse" uniqueID="BeginExecuteUrlForEntireResponse(System.String;System.Collections.Specialized.NameValueCollection;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.HttpResponse.BeginExecuteUrlForEntireResponse(System.String;System.Collections.Specialized.NameValueCollection;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginFlush" uniqueID="BeginFlush(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.HttpResponse.BeginFlush(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinaryWrite" uniqueID="BinaryWrite(System.Byte[]):System.Void">
				<signature>System.Web.HttpResponse.BinaryWrite(System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Web.HttpResponse.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearAll" uniqueID="ClearAll():System.Void">
				<signature>System.Web.HttpResponse.ClearAll():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearContent" uniqueID="ClearContent():System.Void">
				<signature>System.Web.HttpResponse.ClearContent():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearHeaders" uniqueID="ClearHeaders():System.Void">
				<signature>System.Web.HttpResponse.ClearHeaders():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ClearNativeResponse" uniqueID="ClearNativeResponse(System.Boolean;System.Boolean;System.Web.Hosting.IIS7WorkerRequest):System.Void">
				<signature>System.Web.HttpResponse.ClearNativeResponse(System.Boolean;System.Boolean;System.Web.Hosting.IIS7WorkerRequest):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Web.HttpResponse.Close():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CloseConnectionAfterError" uniqueID="CloseConnectionAfterError():System.Void">
				<signature>System.Web.HttpResponse.CloseConnectionAfterError():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContainsNonShareableCookies" uniqueID="ContainsNonShareableCookies():System.Boolean">
				<signature>System.Web.HttpResponse.ContainsNonShareableCookies():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ConvertToFullyQualifiedRedirectUrlIfRequired" uniqueID="ConvertToFullyQualifiedRedirectUrlIfRequired(System.String):System.String">
				<signature>System.Web.HttpResponse.ConvertToFullyQualifiedRedirectUrlIfRequired(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCacheDependencyForResponse" uniqueID="CreateCacheDependencyForResponse():System.Web.Caching.CacheDependency">
				<signature>System.Web.HttpResponse.CreateCacheDependencyForResponse():System.Web.Caching.CacheDependency</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DisableKernelCache" uniqueID="DisableKernelCache():System.Void">
				<signature>System.Web.HttpResponse.DisableKernelCache():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DisableUserCache" uniqueID="DisableUserCache():System.Void">
				<signature>System.Web.HttpResponse.DisableUserCache():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Web.HttpResponse.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="End" uniqueID="End():System.Void">
				<signature>System.Web.HttpResponse.End():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndExecuteUrlForEntireResponse" uniqueID="EndExecuteUrlForEntireResponse(System.IAsyncResult):System.Void">
				<signature>System.Web.HttpResponse.EndExecuteUrlForEntireResponse(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndFlush" uniqueID="EndFlush(System.IAsyncResult):System.Void">
				<signature>System.Web.HttpResponse.EndFlush(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FilterOutput" uniqueID="FilterOutput():System.Void">
				<signature>System.Web.HttpResponse.FilterOutput():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinalFlushAtTheEndOfRequestProcessing" uniqueID="FinalFlushAtTheEndOfRequestProcessing():System.Void">
				<signature>System.Web.HttpResponse.FinalFlushAtTheEndOfRequestProcessing():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinalFlushAtTheEndOfRequestProcessing" uniqueID="FinalFlushAtTheEndOfRequestProcessing(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.FinalFlushAtTheEndOfRequestProcessing(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Flush" uniqueID="Flush():System.Void">
				<signature>System.Web.HttpResponse.Flush():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Flush" uniqueID="Flush(System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.Flush(System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GenerateResponseHeaders" uniqueID="GenerateResponseHeaders(System.Boolean):System.Collections.ArrayList">
				<signature>System.Web.HttpResponse.GenerateResponseHeaders(System.Boolean):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GenerateResponseHeadersForCookies" uniqueID="GenerateResponseHeadersForCookies():System.Void">
				<signature>System.Web.HttpResponse.GenerateResponseHeadersForCookies():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GenerateResponseHeadersForHandler" uniqueID="GenerateResponseHeadersForHandler():System.Void">
				<signature>System.Web.HttpResponse.GenerateResponseHeadersForHandler():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GenerateResponseHeadersIntegrated" uniqueID="GenerateResponseHeadersIntegrated(System.Boolean):System.Collections.ArrayList">
				<signature>System.Web.HttpResponse.GenerateResponseHeadersIntegrated(System.Boolean):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetBufferedLength" uniqueID="GetBufferedLength():System.Int32">
				<signature>System.Web.HttpResponse.GetBufferedLength():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCookiesNoCreate" uniqueID="GetCookiesNoCreate():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpResponse.GetCookiesNoCreate():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetErrorFormatter" uniqueID="GetErrorFormatter(System.Exception):System.Web.ErrorFormatter">
				<signature>System.Web.HttpResponse.GetErrorFormatter(System.Exception):System.Web.ErrorFormatter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetHttpHeaderContentEncoding" uniqueID="GetHttpHeaderContentEncoding():System.String">
				<signature>System.Web.HttpResponse.GetHttpHeaderContentEncoding():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetNormalizedFilename" uniqueID="GetNormalizedFilename(System.String):System.String">
				<signature>System.Web.HttpResponse.GetNormalizedFilename(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetSnapshot" uniqueID="GetSnapshot():System.Web.HttpRawResponse">
				<signature>System.Web.HttpResponse.GetSnapshot():System.Web.HttpRawResponse</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasCacheItemDependencies" uniqueID="HasCacheItemDependencies():System.Boolean">
				<signature>System.Web.HttpResponse.HasCacheItemDependencies():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasFileDependencies" uniqueID="HasFileDependencies():System.Boolean">
				<signature>System.Web.HttpResponse.HasFileDependencies():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpResponse" uniqueID="HttpResponse(System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpResponse.HttpResponse(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpResponse" uniqueID="HttpResponse(System.Web.HttpWorkerRequest;System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpResponse.HttpResponse(System.Web.HttpWorkerRequest;System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IgnoreFurtherWrites" uniqueID="IgnoreFurtherWrites():System.Void">
				<signature>System.Web.HttpResponse.IgnoreFurtherWrites():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitResponseWriter" uniqueID="InitResponseWriter():System.Void">
				<signature>System.Web.HttpResponse.InitResponseWriter():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsBuffered" uniqueID="IsBuffered():System.Boolean">
				<signature>System.Web.HttpResponse.IsBuffered():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsKernelCacheEnabledForVaryByStar" uniqueID="IsKernelCacheEnabledForVaryByStar():System.Boolean">
				<signature>System.Web.HttpResponse.IsKernelCacheEnabledForVaryByStar():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObserveResponseEndCalled" uniqueID="ObserveResponseEndCalled():System.Void">
				<signature>System.Web.HttpResponse.ObserveResponseEndCalled():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCookieAdd" uniqueID="OnCookieAdd(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpResponse.OnCookieAdd(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCookieCollectionChange" uniqueID="OnCookieCollectionChange():System.Void">
				<signature>System.Web.HttpResponse.OnCookieCollectionChange():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Pics" uniqueID="Pics(System.String):System.Void">
				<signature>System.Web.HttpResponse.Pics(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String):System.Void">
				<signature>System.Web.HttpResponse.Redirect(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.Redirect(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String;System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.Redirect(System.String;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectPermanent" uniqueID="RedirectPermanent(System.String):System.Void">
				<signature>System.Web.HttpResponse.RedirectPermanent(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectPermanent" uniqueID="RedirectPermanent(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.RedirectPermanent(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RedirectToErrorPage" uniqueID="RedirectToErrorPage(System.String;System.Web.Configuration.CustomErrorsRedirectMode):System.Web.HttpResponse+RedirectToErrorPageStatus">
				<signature>System.Web.HttpResponse.RedirectToErrorPage(System.String;System.Web.Configuration.CustomErrorsRedirectMode):System.Web.HttpResponse+RedirectToErrorPageStatus</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.Object):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Object):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.Object):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String;System.Object):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveAppPathModifier" uniqueID="RemoveAppPathModifier(System.String):System.String">
				<signature>System.Web.HttpResponse.RemoveAppPathModifier(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReportRuntimeError" uniqueID="ReportRuntimeError(System.Exception;System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.ReportRuntimeError(System.Exception;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetAppPathModifier" uniqueID="SetAppPathModifier(System.String):System.Void">
				<signature>System.Web.HttpResponse.SetAppPathModifier(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetCookie" uniqueID="SetCookie(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpResponse.SetCookie(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetOverrideErrorFormatter" uniqueID="SetOverrideErrorFormatter(System.Web.ErrorFormatter):System.Void">
				<signature>System.Web.HttpResponse.SetOverrideErrorFormatter(System.Web.ErrorFormatter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetStatusCode" uniqueID="SetStatusCode(System.Int32;System.Int32):System.Void">
				<signature>System.Web.HttpResponse.SetStatusCode(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetupKernelCaching" uniqueID="SetupKernelCaching(System.String):System.String">
				<signature>System.Web.HttpResponse.SetupKernelCaching(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SuppressCachingCookiesIfNecessary" uniqueID="SuppressCachingCookiesIfNecessary():System.Void">
				<signature>System.Web.HttpResponse.SuppressCachingCookiesIfNecessary():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SwitchWriter" uniqueID="SwitchWriter(System.IO.TextWriter):System.IO.TextWriter">
				<signature>System.Web.HttpResponse.SwitchWriter(System.IO.TextWriter):System.IO.TextWriter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SyncStatusIntegrated" uniqueID="SyncStatusIntegrated():System.Void">
				<signature>System.Web.HttpResponse.SyncStatusIntegrated():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SynchronizeHeader" uniqueID="SynchronizeHeader(System.Int32;System.String;System.String):System.Void">
				<signature>System.Web.HttpResponse.SynchronizeHeader(System.Int32;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SynchronizeStatus" uniqueID="SynchronizeStatus(System.Int32;System.Int32;System.String):System.Void">
				<signature>System.Web.HttpResponse.SynchronizeStatus(System.Int32;System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransmitFile" uniqueID="TransmitFile(System.String):System.Void">
				<signature>System.Web.HttpResponse.TransmitFile(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransmitFile" uniqueID="TransmitFile(System.String;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.TransmitFile(System.String;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdateNativeResponse" uniqueID="UpdateNativeResponse(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.UpdateNativeResponse(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UrlEncodeIDNSafe" uniqueID="UrlEncodeIDNSafe(System.String):System.String">
				<signature>System.Web.HttpResponse.UrlEncodeIDNSafe(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UrlEncodeRedirect" uniqueID="UrlEncodeRedirect(System.String):System.String">
				<signature>System.Web.HttpResponse.UrlEncodeRedirect(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UseSnapshot" uniqueID="UseSnapshot(System.Web.HttpRawResponse;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.UseSnapshot(System.Web.HttpRawResponse;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateFileRange" uniqueID="ValidateFileRange(System.String;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.ValidateFileRange(System.String;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char):System.Void">
				<signature>System.Web.HttpResponse.Write(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.Web.HttpResponse.Write(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Object):System.Void">
				<signature>System.Web.HttpResponse.Write(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String):System.Void">
				<signature>System.Web.HttpResponse.Write(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteErrorMessage" uniqueID="WriteErrorMessage(System.Exception;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.WriteErrorMessage(System.Exception;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteExceptionStack" uniqueID="WriteExceptionStack(System.Exception):System.Void">
				<signature>System.Web.HttpResponse.WriteExceptionStack(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.IntPtr;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.WriteFile(System.IntPtr;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String):System.Void">
				<signature>System.Web.HttpResponse.WriteFile(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.WriteFile(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.WriteFile(System.String;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteHeaders" uniqueID="WriteHeaders():System.Void">
				<signature>System.Web.HttpResponse.WriteHeaders():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteOneExceptionStack" uniqueID="WriteOneExceptionStack(System.Exception):System.Void">
				<signature>System.Web.HttpResponse.WriteOneExceptionStack(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteStreamAsText" uniqueID="WriteStreamAsText(System.IO.Stream;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.WriteStreamAsText(System.IO.Stream;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteSubstitution" uniqueID="WriteSubstitution(System.Web.HttpResponseSubstitutionCallback):System.Void">
				<signature>System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="WriteVirtualFile" uniqueID="WriteVirtualFile(System.Web.Hosting.VirtualFile):System.Void">
				<signature>System.Web.HttpResponse.WriteVirtualFile(System.Web.Hosting.VirtualFile):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Buffer" uniqueID="get_Buffer():System.Boolean">
				<signature>System.Web.HttpResponse.get_Buffer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BufferOutput" uniqueID="get_BufferOutput():System.Boolean">
				<signature>System.Web.HttpResponse.get_BufferOutput():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cache" uniqueID="get_Cache():System.Web.HttpCachePolicy">
				<signature>System.Web.HttpResponse.get_Cache():System.Web.HttpCachePolicy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CacheControl" uniqueID="get_CacheControl():System.String">
				<signature>System.Web.HttpResponse.get_CacheControl():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CanExecuteUrlForEntireResponse" uniqueID="get_CanExecuteUrlForEntireResponse():System.Boolean">
				<signature>System.Web.HttpResponse.get_CanExecuteUrlForEntireResponse():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Charset" uniqueID="get_Charset():System.String">
				<signature>System.Web.HttpResponse.get_Charset():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientDisconnectedToken" uniqueID="get_ClientDisconnectedToken():System.Threading.CancellationToken">
				<signature>System.Web.HttpResponse.get_ClientDisconnectedToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ContentEncoder" uniqueID="get_ContentEncoder():System.Text.Encoder">
				<signature>System.Web.HttpResponse.get_ContentEncoder():System.Text.Encoder</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentEncoding" uniqueID="get_ContentEncoding():System.Text.Encoding">
				<signature>System.Web.HttpResponse.get_ContentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentType" uniqueID="get_ContentType():System.String">
				<signature>System.Web.HttpResponse.get_ContentType():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Web.HttpContext">
				<signature>System.Web.HttpResponse.get_Context():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cookies" uniqueID="get_Cookies():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpResponse.get_Cookies():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expires" uniqueID="get_Expires():System.Int32">
				<signature>System.Web.HttpResponse.get_Expires():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExpiresAbsolute" uniqueID="get_ExpiresAbsolute():System.DateTime">
				<signature>System.Web.HttpResponse.get_ExpiresAbsolute():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.IO.Stream">
				<signature>System.Web.HttpResponse.get_Filter():System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasCachePolicy" uniqueID="get_HasCachePolicy():System.Boolean">
				<signature>System.Web.HttpResponse.get_HasCachePolicy():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HeaderEncoding" uniqueID="get_HeaderEncoding():System.Text.Encoding">
				<signature>System.Web.HttpResponse.get_HeaderEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Headers" uniqueID="get_Headers():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpResponse.get_Headers():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HeadersWritten" uniqueID="get_HeadersWritten():System.Boolean">
				<signature>System.Web.HttpResponse.get_HeadersWritten():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClientConnected" uniqueID="get_IsClientConnected():System.Boolean">
				<signature>System.Web.HttpResponse.get_IsClientConnected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsRequestBeingRedirected" uniqueID="get_IsRequestBeingRedirected():System.Boolean">
				<signature>System.Web.HttpResponse.get_IsRequestBeingRedirected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Output" uniqueID="get_Output():System.IO.TextWriter">
				<signature>System.Web.HttpResponse.get_Output():System.IO.TextWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OutputStream" uniqueID="get_OutputStream():System.IO.Stream">
				<signature>System.Web.HttpResponse.get_OutputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RedirectLocation" uniqueID="get_RedirectLocation():System.String">
				<signature>System.Web.HttpResponse.get_RedirectLocation():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Request" uniqueID="get_Request():System.Web.HttpRequest">
				<signature>System.Web.HttpResponse.get_Request():System.Web.HttpRequest</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Status" uniqueID="get_Status():System.String">
				<signature>System.Web.HttpResponse.get_Status():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StatusCode" uniqueID="get_StatusCode():System.Int32">
				<signature>System.Web.HttpResponse.get_StatusCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StatusDescription" uniqueID="get_StatusDescription():System.String">
				<signature>System.Web.HttpResponse.get_StatusDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SubStatusCode" uniqueID="get_SubStatusCode():System.Int32">
				<signature>System.Web.HttpResponse.get_SubStatusCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsAsyncFlush" uniqueID="get_SupportsAsyncFlush():System.Boolean">
				<signature>System.Web.HttpResponse.get_SupportsAsyncFlush():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SuppressContent" uniqueID="get_SuppressContent():System.Boolean">
				<signature>System.Web.HttpResponse.get_SuppressContent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SuppressFormsAuthenticationRedirect" uniqueID="get_SuppressFormsAuthenticationRedirect():System.Boolean">
				<signature>System.Web.HttpResponse.get_SuppressFormsAuthenticationRedirect():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TrySkipIisCustomErrors" uniqueID="get_TrySkipIisCustomErrors():System.Boolean">
				<signature>System.Web.HttpResponse.get_TrySkipIisCustomErrors():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UseAdaptiveError" uniqueID="get_UseAdaptiveError():System.Boolean">
				<signature>System.Web.HttpResponse.get_UseAdaptiveError():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UsePathModifier" uniqueID="get_UsePathModifier():System.Boolean">
				<signature>System.Web.HttpResponse.get_UsePathModifier():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_UsingHttpWriter" uniqueID="get_UsingHttpWriter():System.Boolean">
				<signature>System.Web.HttpResponse.get_UsingHttpWriter():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Buffer" uniqueID="set_Buffer(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_Buffer(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BufferOutput" uniqueID="set_BufferOutput(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_BufferOutput(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CacheControl" uniqueID="set_CacheControl(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_CacheControl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Charset" uniqueID="set_Charset(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_Charset(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentEncoding" uniqueID="set_ContentEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpResponse.set_ContentEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentType" uniqueID="set_ContentType(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_ContentType(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Context" uniqueID="set_Context(System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpResponse.set_Context(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Expires" uniqueID="set_Expires(System.Int32):System.Void">
				<signature>System.Web.HttpResponse.set_Expires(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ExpiresAbsolute" uniqueID="set_ExpiresAbsolute(System.DateTime):System.Void">
				<signature>System.Web.HttpResponse.set_ExpiresAbsolute(System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.IO.Stream):System.Void">
				<signature>System.Web.HttpResponse.set_Filter(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HeaderEncoding" uniqueID="set_HeaderEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpResponse.set_HeaderEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HeadersWritten" uniqueID="set_HeadersWritten(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_HeadersWritten(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsRequestBeingRedirected" uniqueID="set_IsRequestBeingRedirected(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_IsRequestBeingRedirected(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Output" uniqueID="set_Output(System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpResponse.set_Output(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RedirectLocation" uniqueID="set_RedirectLocation(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_RedirectLocation(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Status" uniqueID="set_Status(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_Status(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StatusCode" uniqueID="set_StatusCode(System.Int32):System.Void">
				<signature>System.Web.HttpResponse.set_StatusCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StatusDescription" uniqueID="set_StatusDescription(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_StatusDescription(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SubStatusCode" uniqueID="set_SubStatusCode(System.Int32):System.Void">
				<signature>System.Web.HttpResponse.set_SubStatusCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SuppressContent" uniqueID="set_SuppressContent(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_SuppressContent(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SuppressFormsAuthenticationRedirect" uniqueID="set_SuppressFormsAuthenticationRedirect(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_SuppressFormsAuthenticationRedirect(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TrySkipIisCustomErrors" uniqueID="set_TrySkipIisCustomErrors(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_TrySkipIisCustomErrors(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_UseAdaptiveError" uniqueID="set_UseAdaptiveError(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_UseAdaptiveError(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="HttpServerUtilityBase" uniqueID="System.Web.HttpServerUtilityBase">
			<method accessibility="Public" methodKind="Member" name="ClearError" uniqueID="ClearError():System.Void">
				<signature>System.Web.HttpServerUtilityBase.ClearError():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateObject" uniqueID="CreateObject(System.String):System.Object">
				<signature>System.Web.HttpServerUtilityBase.CreateObject(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateObject" uniqueID="CreateObject(System.Type):System.Object">
				<signature>System.Web.HttpServerUtilityBase.CreateObject(System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateObjectFromClsid" uniqueID="CreateObjectFromClsid(System.String):System.Object">
				<signature>System.Web.HttpServerUtilityBase.CreateObjectFromClsid(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.String):System.Void">
				<signature>System.Web.HttpServerUtilityBase.Execute(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpServerUtilityBase.Execute(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.String;System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpServerUtilityBase.Execute(System.String;System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.String;System.IO.TextWriter;System.Boolean):System.Void">
				<signature>System.Web.HttpServerUtilityBase.Execute(System.String;System.IO.TextWriter;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Web.IHttpHandler;System.IO.TextWriter;System.Boolean):System.Void">
				<signature>System.Web.HttpServerUtilityBase.Execute(System.Web.IHttpHandler;System.IO.TextWriter;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLastError" uniqueID="GetLastError():System.Exception">
				<signature>System.Web.HttpServerUtilityBase.GetLastError():System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HtmlDecode" uniqueID="HtmlDecode(System.String):System.String">
				<signature>System.Web.HttpServerUtilityBase.HtmlDecode(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HtmlDecode" uniqueID="HtmlDecode(System.String;System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpServerUtilityBase.HtmlDecode(System.String;System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HtmlEncode" uniqueID="HtmlEncode(System.String):System.String">
				<signature>System.Web.HttpServerUtilityBase.HtmlEncode(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HtmlEncode" uniqueID="HtmlEncode(System.String;System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpServerUtilityBase.HtmlEncode(System.String;System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpServerUtilityBase" uniqueID="HttpServerUtilityBase():System.Void">
				<signature>System.Web.HttpServerUtilityBase.HttpServerUtilityBase():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPath" uniqueID="MapPath(System.String):System.String">
				<signature>System.Web.HttpServerUtilityBase.MapPath(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Transfer" uniqueID="Transfer(System.String):System.Void">
				<signature>System.Web.HttpServerUtilityBase.Transfer(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Transfer" uniqueID="Transfer(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpServerUtilityBase.Transfer(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Transfer" uniqueID="Transfer(System.Web.IHttpHandler;System.Boolean):System.Void">
				<signature>System.Web.HttpServerUtilityBase.Transfer(System.Web.IHttpHandler;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransferRequest" uniqueID="TransferRequest(System.String):System.Void">
				<signature>System.Web.HttpServerUtilityBase.TransferRequest(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransferRequest" uniqueID="TransferRequest(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpServerUtilityBase.TransferRequest(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransferRequest" uniqueID="TransferRequest(System.String;System.Boolean;System.String;System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Web.HttpServerUtilityBase.TransferRequest(System.String;System.Boolean;System.String;System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransferRequest" uniqueID="TransferRequest(System.String;System.Boolean;System.String;System.Collections.Specialized.NameValueCollection;System.Boolean):System.Void">
				<signature>System.Web.HttpServerUtilityBase.TransferRequest(System.String;System.Boolean;System.String;System.Collections.Specialized.NameValueCollection;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlDecode" uniqueID="UrlDecode(System.String):System.String">
				<signature>System.Web.HttpServerUtilityBase.UrlDecode(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlDecode" uniqueID="UrlDecode(System.String;System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpServerUtilityBase.UrlDecode(System.String;System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlEncode" uniqueID="UrlEncode(System.String):System.String">
				<signature>System.Web.HttpServerUtilityBase.UrlEncode(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlEncode" uniqueID="UrlEncode(System.String;System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpServerUtilityBase.UrlEncode(System.String;System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlPathEncode" uniqueID="UrlPathEncode(System.String):System.String">
				<signature>System.Web.HttpServerUtilityBase.UrlPathEncode(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlTokenDecode" uniqueID="UrlTokenDecode(System.String):System.Byte[]">
				<signature>System.Web.HttpServerUtilityBase.UrlTokenDecode(System.String):System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UrlTokenEncode" uniqueID="UrlTokenEncode(System.Byte[]):System.String">
				<signature>System.Web.HttpServerUtilityBase.UrlTokenEncode(System.Byte[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MachineName" uniqueID="get_MachineName():System.String">
				<signature>System.Web.HttpServerUtilityBase.get_MachineName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ScriptTimeout" uniqueID="get_ScriptTimeout():System.Int32">
				<signature>System.Web.HttpServerUtilityBase.get_ScriptTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ScriptTimeout" uniqueID="set_ScriptTimeout(System.Int32):System.Void">
				<signature>System.Web.HttpServerUtilityBase.set_ScriptTimeout(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="HttpSessionStateBase" uniqueID="System.Web.HttpSessionStateBase">
			<method accessibility="Public" methodKind="Member" name="Abandon" uniqueID="Abandon():System.Void">
				<signature>System.Web.HttpSessionStateBase.Abandon():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Object):System.Void">
				<signature>System.Web.HttpSessionStateBase.Add(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Web.HttpSessionStateBase.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Web.HttpSessionStateBase.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Web.HttpSessionStateBase.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpSessionStateBase" uniqueID="HttpSessionStateBase():System.Void">
				<signature>System.Web.HttpSessionStateBase.HttpSessionStateBase():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Void">
				<signature>System.Web.HttpSessionStateBase.Remove(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll():System.Void">
				<signature>System.Web.HttpSessionStateBase.RemoveAll():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Web.HttpSessionStateBase.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CodePage" uniqueID="get_CodePage():System.Int32">
				<signature>System.Web.HttpSessionStateBase.get_CodePage():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Contents" uniqueID="get_Contents():System.Web.HttpSessionStateBase">
				<signature>System.Web.HttpSessionStateBase.get_Contents():System.Web.HttpSessionStateBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CookieMode" uniqueID="get_CookieMode():System.Web.HttpCookieMode">
				<signature>System.Web.HttpSessionStateBase.get_CookieMode():System.Web.HttpCookieMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Web.HttpSessionStateBase.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCookieless" uniqueID="get_IsCookieless():System.Boolean">
				<signature>System.Web.HttpSessionStateBase.get_IsCookieless():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNewSession" uniqueID="get_IsNewSession():System.Boolean">
				<signature>System.Web.HttpSessionStateBase.get_IsNewSession():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Web.HttpSessionStateBase.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Web.HttpSessionStateBase.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Web.HttpSessionStateBase.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Web.HttpSessionStateBase.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Specialized.NameObjectCollectionBase+KeysCollection">
				<signature>System.Web.HttpSessionStateBase.get_Keys():System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LCID" uniqueID="get_LCID():System.Int32">
				<signature>System.Web.HttpSessionStateBase.get_LCID():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Mode" uniqueID="get_Mode():System.Web.SessionState.SessionStateMode">
				<signature>System.Web.HttpSessionStateBase.get_Mode():System.Web.SessionState.SessionStateMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SessionID" uniqueID="get_SessionID():System.String">
				<signature>System.Web.HttpSessionStateBase.get_SessionID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StaticObjects" uniqueID="get_StaticObjects():System.Web.HttpStaticObjectsCollectionBase">
				<signature>System.Web.HttpSessionStateBase.get_StaticObjects():System.Web.HttpStaticObjectsCollectionBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Web.HttpSessionStateBase.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Timeout" uniqueID="get_Timeout():System.Int32">
				<signature>System.Web.HttpSessionStateBase.get_Timeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CodePage" uniqueID="set_CodePage(System.Int32):System.Void">
				<signature>System.Web.HttpSessionStateBase.set_CodePage(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Web.HttpSessionStateBase.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Object):System.Void">
				<signature>System.Web.HttpSessionStateBase.set_Item(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LCID" uniqueID="set_LCID(System.Int32):System.Void">
				<signature>System.Web.HttpSessionStateBase.set_LCID(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Timeout" uniqueID="set_Timeout(System.Int32):System.Void">
				<signature>System.Web.HttpSessionStateBase.set_Timeout(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="UnsafeNativeMethods+MEMORYSTATUSEX" uniqueID="System.Web.UnsafeNativeMethods+MEMORYSTATUSEX">
			<method accessibility="Protected" methodKind="Member" name="Init" uniqueID="Init():System.Void">
				<signature>System.Web.UnsafeNativeMethods+MEMORYSTATUSEX.Init():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.Util">
		<class name="ISyncContext" uniqueID="System.Web.Util.ISyncContext">
			<method accessibility="Public" methodKind="Member" name="Enter" uniqueID="Enter():System.Web.Util.ISyncContextLock">
				<signature>System.Web.Util.ISyncContext.Enter():System.Web.Util.ISyncContextLock</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HttpContext" uniqueID="get_HttpContext():System.Web.HttpContext">
				<signature>System.Web.Util.ISyncContext.get_HttpContext():System.Web.HttpContext</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.Routing">
		<class name="RouteBase" uniqueID="System.Web.Routing.RouteBase">
			<method accessibility="Public" methodKind="Member" name="GetRouteData" uniqueID="GetRouteData(System.Web.HttpContextBase):System.Web.Routing.RouteData">
				<signature>System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase):System.Web.Routing.RouteData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetVirtualPath" uniqueID="GetVirtualPath(System.Web.Routing.RequestContext;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData">
				<signature>System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RouteBase" uniqueID="RouteBase():System.Void">
				<signature>System.Web.Routing.RouteBase.RouteBase():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RouteExistingFiles" uniqueID="get_RouteExistingFiles():System.Boolean">
				<signature>System.Web.Routing.RouteBase.get_RouteExistingFiles():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RouteExistingFiles" uniqueID="set_RouteExistingFiles(System.Boolean):System.Void">
				<signature>System.Web.Routing.RouteBase.set_RouteExistingFiles(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Route" uniqueID="System.Web.Routing.Route">
			<method accessibility="Public" methodKind="Member" name="GetRouteData" uniqueID="GetRouteData(System.Web.HttpContextBase):System.Web.Routing.RouteData">
				<signature>System.Web.Routing.Route.GetRouteData(System.Web.HttpContextBase):System.Web.Routing.RouteData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetVirtualPath" uniqueID="GetVirtualPath(System.Web.Routing.RequestContext;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData">
				<signature>System.Web.Routing.Route.GetVirtualPath(System.Web.Routing.RequestContext;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ProcessConstraint" uniqueID="ProcessConstraint(System.Web.HttpContextBase;System.Object;System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteDirection):System.Boolean">
				<signature>System.Web.Routing.Route.ProcessConstraint(System.Web.HttpContextBase;System.Object;System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteDirection):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessConstraints" uniqueID="ProcessConstraints(System.Web.HttpContextBase;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteDirection):System.Boolean">
				<signature>System.Web.Routing.Route.ProcessConstraints(System.Web.HttpContextBase;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteDirection):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Route" uniqueID="Route(System.String;System.Web.Routing.IRouteHandler):System.Void">
				<signature>System.Web.Routing.Route.Route(System.String;System.Web.Routing.IRouteHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Route" uniqueID="Route(System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.IRouteHandler):System.Void">
				<signature>System.Web.Routing.Route.Route(System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.IRouteHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Route" uniqueID="Route(System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary;System.Web.Routing.IRouteHandler):System.Void">
				<signature>System.Web.Routing.Route.Route(System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary;System.Web.Routing.IRouteHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Route" uniqueID="Route(System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary;System.Web.Routing.IRouteHandler):System.Void">
				<signature>System.Web.Routing.Route.Route(System.String;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary;System.Web.Routing.IRouteHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Constraints" uniqueID="get_Constraints():System.Web.Routing.RouteValueDictionary">
				<signature>System.Web.Routing.Route.get_Constraints():System.Web.Routing.RouteValueDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataTokens" uniqueID="get_DataTokens():System.Web.Routing.RouteValueDictionary">
				<signature>System.Web.Routing.Route.get_DataTokens():System.Web.Routing.RouteValueDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Defaults" uniqueID="get_Defaults():System.Web.Routing.RouteValueDictionary">
				<signature>System.Web.Routing.Route.get_Defaults():System.Web.Routing.RouteValueDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RouteHandler" uniqueID="get_RouteHandler():System.Web.Routing.IRouteHandler">
				<signature>System.Web.Routing.Route.get_RouteHandler():System.Web.Routing.IRouteHandler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Url" uniqueID="get_Url():System.String">
				<signature>System.Web.Routing.Route.get_Url():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Constraints" uniqueID="set_Constraints(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.Routing.Route.set_Constraints(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataTokens" uniqueID="set_DataTokens(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.Routing.Route.set_DataTokens(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Defaults" uniqueID="set_Defaults(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.Routing.Route.set_Defaults(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RouteHandler" uniqueID="set_RouteHandler(System.Web.Routing.IRouteHandler):System.Void">
				<signature>System.Web.Routing.Route.set_RouteHandler(System.Web.Routing.IRouteHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Url" uniqueID="set_Url(System.String):System.Void">
				<signature>System.Web.Routing.Route.set_Url(System.String):System.Void</signature>
			</method>
		</class>
		<class name="RouteCollection" uniqueID="System.Web.Routing.RouteCollection">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Web.Routing.RouteCollection.Add(System.String;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearItems" uniqueID="ClearItems():System.Void">
				<signature>System.Web.Routing.RouteCollection.ClearItems():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetReadLock" uniqueID="GetReadLock():System.IDisposable">
				<signature>System.Web.Routing.RouteCollection.GetReadLock():System.IDisposable</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetRequestContext" uniqueID="GetRequestContext(System.Web.Routing.RequestContext):System.Web.Routing.RequestContext">
				<signature>System.Web.Routing.RouteCollection.GetRequestContext(System.Web.Routing.RequestContext):System.Web.Routing.RequestContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRouteData" uniqueID="GetRouteData(System.Web.HttpContextBase):System.Web.Routing.RouteData">
				<signature>System.Web.Routing.RouteCollection.GetRouteData(System.Web.HttpContextBase):System.Web.Routing.RouteData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetVirtualPath" uniqueID="GetVirtualPath(System.Web.Routing.RequestContext;System.String;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData">
				<signature>System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext;System.String;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetVirtualPath" uniqueID="GetVirtualPath(System.Web.Routing.RequestContext;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData">
				<signature>System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext;System.Web.Routing.RouteValueDictionary):System.Web.Routing.VirtualPathData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetWriteLock" uniqueID="GetWriteLock():System.IDisposable">
				<signature>System.Web.Routing.RouteCollection.GetWriteLock():System.IDisposable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Ignore" uniqueID="Ignore(System.String):System.Void">
				<signature>System.Web.Routing.RouteCollection.Ignore(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Ignore" uniqueID="Ignore(System.String;System.Object):System.Void">
				<signature>System.Web.Routing.RouteCollection.Ignore(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertItem" uniqueID="InsertItem(System.Int32;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Web.Routing.RouteCollection.InsertItem(System.Int32;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsRouteToExistingFile" uniqueID="IsRouteToExistingFile(System.Web.HttpContextBase):System.Boolean">
				<signature>System.Web.Routing.RouteCollection.IsRouteToExistingFile(System.Web.HttpContextBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPageRoute" uniqueID="MapPageRoute(System.String;System.String;System.String):System.Web.Routing.Route">
				<signature>System.Web.Routing.RouteCollection.MapPageRoute(System.String;System.String;System.String):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPageRoute" uniqueID="MapPageRoute(System.String;System.String;System.String;System.Boolean):System.Web.Routing.Route">
				<signature>System.Web.Routing.RouteCollection.MapPageRoute(System.String;System.String;System.String;System.Boolean):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPageRoute" uniqueID="MapPageRoute(System.String;System.String;System.String;System.Boolean;System.Web.Routing.RouteValueDictionary):System.Web.Routing.Route">
				<signature>System.Web.Routing.RouteCollection.MapPageRoute(System.String;System.String;System.String;System.Boolean;System.Web.Routing.RouteValueDictionary):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPageRoute" uniqueID="MapPageRoute(System.String;System.String;System.String;System.Boolean;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary):System.Web.Routing.Route">
				<signature>System.Web.Routing.RouteCollection.MapPageRoute(System.String;System.String;System.String;System.Boolean;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPageRoute" uniqueID="MapPageRoute(System.String;System.String;System.String;System.Boolean;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary):System.Web.Routing.Route">
				<signature>System.Web.Routing.RouteCollection.MapPageRoute(System.String;System.String;System.String;System.Boolean;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary;System.Web.Routing.RouteValueDictionary):System.Web.Routing.Route</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NormalizeVirtualPath" uniqueID="NormalizeVirtualPath(System.Web.Routing.RequestContext;System.String):System.String">
				<signature>System.Web.Routing.RouteCollection.NormalizeVirtualPath(System.Web.Routing.RequestContext;System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveItem" uniqueID="RemoveItem(System.Int32):System.Void">
				<signature>System.Web.Routing.RouteCollection.RemoveItem(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RemoveRouteName" uniqueID="RemoveRouteName(System.Int32):System.Void">
				<signature>System.Web.Routing.RouteCollection.RemoveRouteName(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteCollection" uniqueID="RouteCollection():System.Void">
				<signature>System.Web.Routing.RouteCollection.RouteCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteCollection" uniqueID="RouteCollection(System.Web.Hosting.VirtualPathProvider):System.Void">
				<signature>System.Web.Routing.RouteCollection.RouteCollection(System.Web.Hosting.VirtualPathProvider):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetItem" uniqueID="SetItem(System.Int32;System.Web.Routing.RouteBase):System.Void">
				<signature>System.Web.Routing.RouteCollection.SetItem(System.Int32;System.Web.Routing.RouteBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AppendTrailingSlash" uniqueID="get_AppendTrailingSlash():System.Boolean">
				<signature>System.Web.Routing.RouteCollection.get_AppendTrailingSlash():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.Routing.RouteBase">
				<signature>System.Web.Routing.RouteCollection.get_Item(System.String):System.Web.Routing.RouteBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LowercaseUrls" uniqueID="get_LowercaseUrls():System.Boolean">
				<signature>System.Web.Routing.RouteCollection.get_LowercaseUrls():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RouteExistingFiles" uniqueID="get_RouteExistingFiles():System.Boolean">
				<signature>System.Web.Routing.RouteCollection.get_RouteExistingFiles():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_VPP" uniqueID="get_VPP():System.Web.Hosting.VirtualPathProvider">
				<signature>System.Web.Routing.RouteCollection.get_VPP():System.Web.Hosting.VirtualPathProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AppendTrailingSlash" uniqueID="set_AppendTrailingSlash(System.Boolean):System.Void">
				<signature>System.Web.Routing.RouteCollection.set_AppendTrailingSlash(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LowercaseUrls" uniqueID="set_LowercaseUrls(System.Boolean):System.Void">
				<signature>System.Web.Routing.RouteCollection.set_LowercaseUrls(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RouteExistingFiles" uniqueID="set_RouteExistingFiles(System.Boolean):System.Void">
				<signature>System.Web.Routing.RouteCollection.set_RouteExistingFiles(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_VPP" uniqueID="set_VPP(System.Web.Hosting.VirtualPathProvider):System.Void">
				<signature>System.Web.Routing.RouteCollection.set_VPP(System.Web.Hosting.VirtualPathProvider):System.Void</signature>
			</method>
		</class>
		<class name="RouteTable" uniqueID="System.Web.Routing.RouteTable">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.Routing.RouteTable.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Routes" uniqueID="get_Routes():System.Web.Routing.RouteCollection">
				<signature>System.Web.Routing.RouteTable.get_Routes():System.Web.Routing.RouteCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RouteTable" uniqueID="RouteTable():System.Void">
				<signature>System.Web.Routing.RouteTable.RouteTable():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.Security">
		<class name="FormsAuthentication" uniqueID="System.Web.Security.FormsAuthentication">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.Security.FormsAuthentication.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Authenticate" uniqueID="Authenticate(System.String;System.String):System.Boolean">
				<signature>System.Web.Security.FormsAuthentication.Authenticate(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Decrypt" uniqueID="Decrypt(System.String):System.Web.Security.FormsAuthenticationTicket">
				<signature>System.Web.Security.FormsAuthentication.Decrypt(System.String):System.Web.Security.FormsAuthenticationTicket</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="EnableFormsAuthentication" uniqueID="EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Encrypt" uniqueID="Encrypt(System.Web.Security.FormsAuthenticationTicket):System.String">
				<signature>System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Encrypt" uniqueID="Encrypt(System.Web.Security.FormsAuthenticationTicket;System.Boolean):System.String">
				<signature>System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetAuthCookie" uniqueID="GetAuthCookie(System.String;System.Boolean):System.Web.HttpCookie">
				<signature>System.Web.Security.FormsAuthentication.GetAuthCookie(System.String;System.Boolean):System.Web.HttpCookie</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetAuthCookie" uniqueID="GetAuthCookie(System.String;System.Boolean;System.String):System.Web.HttpCookie">
				<signature>System.Web.Security.FormsAuthentication.GetAuthCookie(System.String;System.Boolean;System.String):System.Web.HttpCookie</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetAuthCookie" uniqueID="GetAuthCookie(System.String;System.Boolean;System.String;System.Boolean):System.Web.HttpCookie">
				<signature>System.Web.Security.FormsAuthentication.GetAuthCookie(System.String;System.Boolean;System.String;System.Boolean):System.Web.HttpCookie</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLoginPage" uniqueID="GetLoginPage(System.String):System.String">
				<signature>System.Web.Security.FormsAuthentication.GetLoginPage(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLoginPage" uniqueID="GetLoginPage(System.String;System.Boolean):System.String">
				<signature>System.Web.Security.FormsAuthentication.GetLoginPage(System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetRedirectUrl" uniqueID="GetRedirectUrl(System.String;System.Boolean):System.String">
				<signature>System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetReturnUrl" uniqueID="GetReturnUrl(System.Boolean):System.String">
				<signature>System.Web.Security.FormsAuthentication.GetReturnUrl(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="HashPasswordForStoringInConfigFile" uniqueID="HashPasswordForStoringInConfigFile(System.String;System.String):System.String">
				<signature>System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Web.Security.FormsAuthentication.Initialize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalAuthenticate" uniqueID="InternalAuthenticate(System.String;System.String):System.Boolean">
				<signature>System.Web.Security.FormsAuthentication.InternalAuthenticate(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsPathWithinAppRoot" uniqueID="IsPathWithinAppRoot(System.Web.HttpContext;System.String):System.Boolean">
				<signature>System.Web.Security.FormsAuthentication.IsPathWithinAppRoot(System.Web.HttpContext;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MakeTicketIntoBinaryBlob" uniqueID="MakeTicketIntoBinaryBlob(System.Web.Security.FormsAuthenticationTicket):System.Byte[]">
				<signature>System.Web.Security.FormsAuthentication.MakeTicketIntoBinaryBlob(System.Web.Security.FormsAuthenticationTicket):System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RedirectFromLoginPage" uniqueID="RedirectFromLoginPage(System.String;System.Boolean):System.Void">
				<signature>System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RedirectFromLoginPage" uniqueID="RedirectFromLoginPage(System.String;System.Boolean;System.String):System.Void">
				<signature>System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String;System.Boolean;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RedirectToLoginPage" uniqueID="RedirectToLoginPage():System.Void">
				<signature>System.Web.Security.FormsAuthentication.RedirectToLoginPage():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RedirectToLoginPage" uniqueID="RedirectToLoginPage(System.String):System.Void">
				<signature>System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RemoveQSVar" uniqueID="RemoveQSVar(System.String;System.Int32;System.String;System.String;System.Int32):System.Void">
				<signature>System.Web.Security.FormsAuthentication.RemoveQSVar(System.String;System.Int32;System.String;System.String;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RemoveQueryStringVariableFromUrl" uniqueID="RemoveQueryStringVariableFromUrl(System.String;System.String):System.String">
				<signature>System.Web.Security.FormsAuthentication.RemoveQueryStringVariableFromUrl(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RenewTicketIfOld" uniqueID="RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket):System.Web.Security.FormsAuthenticationTicket">
				<signature>System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket):System.Web.Security.FormsAuthenticationTicket</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetAuthCookie" uniqueID="SetAuthCookie(System.String;System.Boolean):System.Void">
				<signature>System.Web.Security.FormsAuthentication.SetAuthCookie(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetAuthCookie" uniqueID="SetAuthCookie(System.String;System.Boolean;System.String):System.Void">
				<signature>System.Web.Security.FormsAuthentication.SetAuthCookie(System.String;System.Boolean;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SignOut" uniqueID="SignOut():System.Void">
				<signature>System.Web.Security.FormsAuthentication.SignOut():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CookieDomain" uniqueID="get_CookieDomain():System.String">
				<signature>System.Web.Security.FormsAuthentication.get_CookieDomain():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CookieMode" uniqueID="get_CookieMode():System.Web.HttpCookieMode">
				<signature>System.Web.Security.FormsAuthentication.get_CookieMode():System.Web.HttpCookieMode</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CookiesSupported" uniqueID="get_CookiesSupported():System.Boolean">
				<signature>System.Web.Security.FormsAuthentication.get_CookiesSupported():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_DefaultUrl" uniqueID="get_DefaultUrl():System.String">
				<signature>System.Web.Security.FormsAuthentication.get_DefaultUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_EnableCrossAppRedirects" uniqueID="get_EnableCrossAppRedirects():System.Boolean">
				<signature>System.Web.Security.FormsAuthentication.get_EnableCrossAppRedirects():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_FormsCookieName" uniqueID="get_FormsCookieName():System.String">
				<signature>System.Web.Security.FormsAuthentication.get_FormsCookieName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_FormsCookiePath" uniqueID="get_FormsCookiePath():System.String">
				<signature>System.Web.Security.FormsAuthentication.get_FormsCookiePath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_IsEnabled" uniqueID="get_IsEnabled():System.Boolean">
				<signature>System.Web.Security.FormsAuthentication.get_IsEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_LoginUrl" uniqueID="get_LoginUrl():System.String">
				<signature>System.Web.Security.FormsAuthentication.get_LoginUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_RequireSSL" uniqueID="get_RequireSSL():System.Boolean">
				<signature>System.Web.Security.FormsAuthentication.get_RequireSSL():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_ReturnUrlVar" uniqueID="get_ReturnUrlVar():System.String">
				<signature>System.Web.Security.FormsAuthentication.get_ReturnUrlVar():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_SlidingExpiration" uniqueID="get_SlidingExpiration():System.Boolean">
				<signature>System.Web.Security.FormsAuthentication.get_SlidingExpiration():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_TicketCompatibilityMode" uniqueID="get_TicketCompatibilityMode():System.Web.Configuration.TicketCompatibilityMode">
				<signature>System.Web.Security.FormsAuthentication.get_TicketCompatibilityMode():System.Web.Configuration.TicketCompatibilityMode</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Timeout" uniqueID="get_Timeout():System.TimeSpan">
				<signature>System.Web.Security.FormsAuthentication.get_Timeout():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FormsAuthentication" uniqueID="FormsAuthentication():System.Void">
				<signature>System.Web.Security.FormsAuthentication.FormsAuthentication():System.Void</signature>
			</method>
		</class>
		<class name="Membership" uniqueID="System.Web.Security.Membership">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.Security.Membership.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateUser" uniqueID="CreateUser(System.String;System.String):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.CreateUser(System.String;System.String):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateUser" uniqueID="CreateUser(System.String;System.String;System.String):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.CreateUser(System.String;System.String;System.String):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateUser" uniqueID="CreateUser(System.String;System.String;System.String;System.String;System.String;System.Boolean;System.Object;System.Web.Security.MembershipCreateStatus):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.CreateUser(System.String;System.String;System.String;System.String;System.String;System.Boolean;System.Object;System.Web.Security.MembershipCreateStatus):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateUser" uniqueID="CreateUser(System.String;System.String;System.String;System.String;System.String;System.Boolean;System.Web.Security.MembershipCreateStatus):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.CreateUser(System.String;System.String;System.String;System.String;System.String;System.Boolean;System.Web.Security.MembershipCreateStatus):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DeleteUser" uniqueID="DeleteUser(System.String):System.Boolean">
				<signature>System.Web.Security.Membership.DeleteUser(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DeleteUser" uniqueID="DeleteUser(System.String;System.Boolean):System.Boolean">
				<signature>System.Web.Security.Membership.DeleteUser(System.String;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FindUsersByEmail" uniqueID="FindUsersByEmail(System.String):System.Web.Security.MembershipUserCollection">
				<signature>System.Web.Security.Membership.FindUsersByEmail(System.String):System.Web.Security.MembershipUserCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FindUsersByEmail" uniqueID="FindUsersByEmail(System.String;System.Int32;System.Int32;System.Int32):System.Web.Security.MembershipUserCollection">
				<signature>System.Web.Security.Membership.FindUsersByEmail(System.String;System.Int32;System.Int32;System.Int32):System.Web.Security.MembershipUserCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FindUsersByName" uniqueID="FindUsersByName(System.String):System.Web.Security.MembershipUserCollection">
				<signature>System.Web.Security.Membership.FindUsersByName(System.String):System.Web.Security.MembershipUserCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FindUsersByName" uniqueID="FindUsersByName(System.String;System.Int32;System.Int32;System.Int32):System.Web.Security.MembershipUserCollection">
				<signature>System.Web.Security.Membership.FindUsersByName(System.String;System.Int32;System.Int32;System.Int32):System.Web.Security.MembershipUserCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GeneratePassword" uniqueID="GeneratePassword(System.Int32;System.Int32):System.String">
				<signature>System.Web.Security.Membership.GeneratePassword(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetAllUsers" uniqueID="GetAllUsers():System.Web.Security.MembershipUserCollection">
				<signature>System.Web.Security.Membership.GetAllUsers():System.Web.Security.MembershipUserCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetAllUsers" uniqueID="GetAllUsers(System.Int32;System.Int32;System.Int32):System.Web.Security.MembershipUserCollection">
				<signature>System.Web.Security.Membership.GetAllUsers(System.Int32;System.Int32;System.Int32):System.Web.Security.MembershipUserCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetCurrentUserName" uniqueID="GetCurrentUserName():System.String">
				<signature>System.Web.Security.Membership.GetCurrentUserName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetNumberOfUsersOnline" uniqueID="GetNumberOfUsersOnline():System.Int32">
				<signature>System.Web.Security.Membership.GetNumberOfUsersOnline():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUser" uniqueID="GetUser():System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.GetUser():System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUser" uniqueID="GetUser(System.Boolean):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.GetUser(System.Boolean):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUser" uniqueID="GetUser(System.Object):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.GetUser(System.Object):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUser" uniqueID="GetUser(System.Object;System.Boolean):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.GetUser(System.Object;System.Boolean):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUser" uniqueID="GetUser(System.String):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.GetUser(System.String):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUser" uniqueID="GetUser(System.String;System.Boolean):System.Web.Security.MembershipUser">
				<signature>System.Web.Security.Membership.GetUser(System.String;System.Boolean):System.Web.Security.MembershipUser</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUserNameByEmail" uniqueID="GetUserNameByEmail(System.String):System.String">
				<signature>System.Web.Security.Membership.GetUserNameByEmail(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Web.Security.Membership.Initialize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InitializeDefaultProvider" uniqueID="InitializeDefaultProvider(System.Boolean;System.Web.Configuration.MembershipSection):System.Boolean">
				<signature>System.Web.Security.Membership.InitializeDefaultProvider(System.Boolean;System.Web.Configuration.MembershipSection):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InitializeSettings" uniqueID="InitializeSettings(System.Boolean;System.Web.Configuration.RuntimeConfig;System.Web.Configuration.MembershipSection):System.Boolean">
				<signature>System.Web.Security.Membership.InitializeSettings(System.Boolean;System.Web.Configuration.RuntimeConfig;System.Web.Configuration.MembershipSection):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="UpdateUser" uniqueID="UpdateUser(System.Web.Security.MembershipUser):System.Void">
				<signature>System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ValidateUser" uniqueID="ValidateUser(System.String;System.String):System.Boolean">
				<signature>System.Web.Security.Membership.ValidateUser(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="add_ValidatingPassword" uniqueID="add_ValidatingPassword(System.Web.Security.MembershipValidatePasswordEventHandler):System.Void">
				<signature>System.Web.Security.Membership.add_ValidatingPassword(System.Web.Security.MembershipValidatePasswordEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_ApplicationName" uniqueID="get_ApplicationName():System.String">
				<signature>System.Web.Security.Membership.get_ApplicationName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_EnablePasswordReset" uniqueID="get_EnablePasswordReset():System.Boolean">
				<signature>System.Web.Security.Membership.get_EnablePasswordReset():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_EnablePasswordRetrieval" uniqueID="get_EnablePasswordRetrieval():System.Boolean">
				<signature>System.Web.Security.Membership.get_EnablePasswordRetrieval():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_HashAlgorithmType" uniqueID="get_HashAlgorithmType():System.String">
				<signature>System.Web.Security.Membership.get_HashAlgorithmType():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_IsHashAlgorithmFromMembershipConfig" uniqueID="get_IsHashAlgorithmFromMembershipConfig():System.Boolean">
				<signature>System.Web.Security.Membership.get_IsHashAlgorithmFromMembershipConfig():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_MaxInvalidPasswordAttempts" uniqueID="get_MaxInvalidPasswordAttempts():System.Int32">
				<signature>System.Web.Security.Membership.get_MaxInvalidPasswordAttempts():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_MinRequiredNonAlphanumericCharacters" uniqueID="get_MinRequiredNonAlphanumericCharacters():System.Int32">
				<signature>System.Web.Security.Membership.get_MinRequiredNonAlphanumericCharacters():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_MinRequiredPasswordLength" uniqueID="get_MinRequiredPasswordLength():System.Int32">
				<signature>System.Web.Security.Membership.get_MinRequiredPasswordLength():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_PasswordAttemptWindow" uniqueID="get_PasswordAttemptWindow():System.Int32">
				<signature>System.Web.Security.Membership.get_PasswordAttemptWindow():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_PasswordStrengthRegularExpression" uniqueID="get_PasswordStrengthRegularExpression():System.String">
				<signature>System.Web.Security.Membership.get_PasswordStrengthRegularExpression():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Provider" uniqueID="get_Provider():System.Web.Security.MembershipProvider">
				<signature>System.Web.Security.Membership.get_Provider():System.Web.Security.MembershipProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Providers" uniqueID="get_Providers():System.Web.Security.MembershipProviderCollection">
				<signature>System.Web.Security.Membership.get_Providers():System.Web.Security.MembershipProviderCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_RequiresQuestionAndAnswer" uniqueID="get_RequiresQuestionAndAnswer():System.Boolean">
				<signature>System.Web.Security.Membership.get_RequiresQuestionAndAnswer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_UserIsOnlineTimeWindow" uniqueID="get_UserIsOnlineTimeWindow():System.Int32">
				<signature>System.Web.Security.Membership.get_UserIsOnlineTimeWindow():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="remove_ValidatingPassword" uniqueID="remove_ValidatingPassword(System.Web.Security.MembershipValidatePasswordEventHandler):System.Void">
				<signature>System.Web.Security.Membership.remove_ValidatingPassword(System.Web.Security.MembershipValidatePasswordEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_ApplicationName" uniqueID="set_ApplicationName(System.String):System.Void">
				<signature>System.Web.Security.Membership.set_ApplicationName(System.String):System.Void</signature>
			</method>
		</class>
		<class name="MembershipUser" uniqueID="System.Web.Security.MembershipUser">
			<method accessibility="Public" methodKind="Member" name="ChangePassword" uniqueID="ChangePassword(System.String;System.String):System.Boolean">
				<signature>System.Web.Security.MembershipUser.ChangePassword(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ChangePassword" uniqueID="ChangePassword(System.String;System.String;System.Boolean):System.Boolean">
				<signature>System.Web.Security.MembershipUser.ChangePassword(System.String;System.String;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ChangePasswordQuestionAndAnswer" uniqueID="ChangePasswordQuestionAndAnswer(System.String;System.String;System.String):System.Boolean">
				<signature>System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer(System.String;System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetPassword" uniqueID="GetPassword():System.String">
				<signature>System.Web.Security.MembershipUser.GetPassword():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetPassword" uniqueID="GetPassword(System.Boolean):System.String">
				<signature>System.Web.Security.MembershipUser.GetPassword(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetPassword" uniqueID="GetPassword(System.String):System.String">
				<signature>System.Web.Security.MembershipUser.GetPassword(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetPassword" uniqueID="GetPassword(System.String;System.Boolean):System.String">
				<signature>System.Web.Security.MembershipUser.GetPassword(System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetPassword" uniqueID="GetPassword(System.String;System.Boolean;System.Boolean):System.String">
				<signature>System.Web.Security.MembershipUser.GetPassword(System.String;System.Boolean;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MembershipUser" uniqueID="MembershipUser():System.Void">
				<signature>System.Web.Security.MembershipUser.MembershipUser():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MembershipUser" uniqueID="MembershipUser(System.String;System.String;System.Object;System.String;System.String;System.String;System.Boolean;System.Boolean;System.DateTime;System.DateTime;System.DateTime;System.DateTime;System.DateTime):System.Void">
				<signature>System.Web.Security.MembershipUser.MembershipUser(System.String;System.String;System.Object;System.String;System.String;System.String;System.Boolean;System.Boolean;System.DateTime;System.DateTime;System.DateTime;System.DateTime;System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetPassword" uniqueID="ResetPassword():System.String">
				<signature>System.Web.Security.MembershipUser.ResetPassword():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetPassword" uniqueID="ResetPassword(System.Boolean):System.String">
				<signature>System.Web.Security.MembershipUser.ResetPassword(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetPassword" uniqueID="ResetPassword(System.String):System.String">
				<signature>System.Web.Security.MembershipUser.ResetPassword(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetPassword" uniqueID="ResetPassword(System.String;System.Boolean):System.String">
				<signature>System.Web.Security.MembershipUser.ResetPassword(System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetPassword" uniqueID="ResetPassword(System.String;System.Boolean;System.Boolean):System.String">
				<signature>System.Web.Security.MembershipUser.ResetPassword(System.String;System.Boolean;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Web.Security.MembershipUser.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnlockUser" uniqueID="UnlockUser():System.Boolean">
				<signature>System.Web.Security.MembershipUser.UnlockUser():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Update" uniqueID="Update():System.Void">
				<signature>System.Web.Security.MembershipUser.Update():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UpdateSelf" uniqueID="UpdateSelf():System.Void">
				<signature>System.Web.Security.MembershipUser.UpdateSelf():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comment" uniqueID="get_Comment():System.String">
				<signature>System.Web.Security.MembershipUser.get_Comment():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationDate" uniqueID="get_CreationDate():System.DateTime">
				<signature>System.Web.Security.MembershipUser.get_CreationDate():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Email" uniqueID="get_Email():System.String">
				<signature>System.Web.Security.MembershipUser.get_Email():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsApproved" uniqueID="get_IsApproved():System.Boolean">
				<signature>System.Web.Security.MembershipUser.get_IsApproved():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLockedOut" uniqueID="get_IsLockedOut():System.Boolean">
				<signature>System.Web.Security.MembershipUser.get_IsLockedOut():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsOnline" uniqueID="get_IsOnline():System.Boolean">
				<signature>System.Web.Security.MembershipUser.get_IsOnline():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LastActivityDate" uniqueID="get_LastActivityDate():System.DateTime">
				<signature>System.Web.Security.MembershipUser.get_LastActivityDate():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LastLockoutDate" uniqueID="get_LastLockoutDate():System.DateTime">
				<signature>System.Web.Security.MembershipUser.get_LastLockoutDate():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LastLoginDate" uniqueID="get_LastLoginDate():System.DateTime">
				<signature>System.Web.Security.MembershipUser.get_LastLoginDate():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LastPasswordChangedDate" uniqueID="get_LastPasswordChangedDate():System.DateTime">
				<signature>System.Web.Security.MembershipUser.get_LastPasswordChangedDate():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PasswordQuestion" uniqueID="get_PasswordQuestion():System.String">
				<signature>System.Web.Security.MembershipUser.get_PasswordQuestion():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ProviderName" uniqueID="get_ProviderName():System.String">
				<signature>System.Web.Security.MembershipUser.get_ProviderName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ProviderUserKey" uniqueID="get_ProviderUserKey():System.Object">
				<signature>System.Web.Security.MembershipUser.get_ProviderUserKey():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserName" uniqueID="get_UserName():System.String">
				<signature>System.Web.Security.MembershipUser.get_UserName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Comment" uniqueID="set_Comment(System.String):System.Void">
				<signature>System.Web.Security.MembershipUser.set_Comment(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Email" uniqueID="set_Email(System.String):System.Void">
				<signature>System.Web.Security.MembershipUser.set_Email(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_IsApproved" uniqueID="set_IsApproved(System.Boolean):System.Void">
				<signature>System.Web.Security.MembershipUser.set_IsApproved(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LastActivityDate" uniqueID="set_LastActivityDate(System.DateTime):System.Void">
				<signature>System.Web.Security.MembershipUser.set_LastActivityDate(System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LastLoginDate" uniqueID="set_LastLoginDate(System.DateTime):System.Void">
				<signature>System.Web.Security.MembershipUser.set_LastLoginDate(System.DateTime):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections.Specialized">
		<class name="NameObjectCollectionBase" uniqueID="System.Collections.Specialized.NameObjectCollectionBase">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.String;System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseClear" uniqueID="BaseClear():System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseClear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGet" uniqueID="BaseGet(System.Int32):System.Object">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGet" uniqueID="BaseGet(System.String):System.Object">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGetAllKeys" uniqueID="BaseGetAllKeys():System.String[]">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys():System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGetAllValues" uniqueID="BaseGetAllValues():System.Object[]">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues():System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGetAllValues" uniqueID="BaseGetAllValues(System.Type):System.Object[]">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type):System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGetKey" uniqueID="BaseGetKey(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseHasKeys" uniqueID="BaseHasKeys():System.Boolean">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseRemove" uniqueID="BaseRemove(System.String):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseRemoveAt" uniqueID="BaseRemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseSet" uniqueID="BaseSet(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseSet" uniqueID="BaseSet(System.String;System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.String):System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.FindEntry(System.String):System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase():System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.DBNull):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.DBNull):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Int32;System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32;System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Int32;System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32;System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Reset" uniqueID="Reset(System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.Reset(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.IEqualityComparer">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.get_Comparer():System.Collections.IEqualityComparer</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Specialized.NameObjectCollectionBase+KeysCollection">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.get_Keys():System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Comparer" uniqueID="set_Comparer(System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.set_Comparer(System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsReadOnly" uniqueID="set_IsReadOnly(System.Boolean):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.set_IsReadOnly(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="NameObjectCollectionBase+KeysCollection" uniqueID="System.Collections.Specialized.NameObjectCollectionBase+KeysCollection">
			<method accessibility="Public" methodKind="Member" name="Get" uniqueID="Get(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.Get(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase+KeysCollection" uniqueID="NameObjectCollectionBase+KeysCollection(System.Collections.Specialized.NameObjectCollectionBase):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.NameObjectCollectionBase+KeysCollection(System.Collections.Specialized.NameObjectCollectionBase):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.get_Item(System.Int32):System.String</signature>
			</method>
		</class>
		<class name="NameValueCollection" uniqueID="System.Collections.Specialized.NameValueCollection">
			<method accessibility="Private" methodKind="Static" name="GetAsOneString" uniqueID="GetAsOneString(System.Collections.ArrayList):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.GetAsOneString(System.Collections.ArrayList):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetAsStringArray" uniqueID="GetAsStringArray(System.Collections.ArrayList):System.String[]">
				<signature>System.Collections.Specialized.NameValueCollection.GetAsStringArray(System.Collections.ArrayList):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.String):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Add(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Get" uniqueID="Get(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.Get(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Get" uniqueID="Get(System.String):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.Get(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetKey" uniqueID="GetKey(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.GetKey(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValues" uniqueID="GetValues(System.Int32):System.String[]">
				<signature>System.Collections.Specialized.NameValueCollection.GetValues(System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValues" uniqueID="GetValues(System.String):System.String[]">
				<signature>System.Collections.Specialized.NameValueCollection.GetValues(System.String):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HasKeys" uniqueID="HasKeys():System.Boolean">
				<signature>System.Collections.Specialized.NameValueCollection.HasKeys():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalHasKeys" uniqueID="InternalHasKeys():System.Boolean">
				<signature>System.Collections.Specialized.NameValueCollection.InternalHasKeys():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvalidateCachedArrays" uniqueID="InvalidateCachedArrays():System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection():System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.DBNull):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.DBNull):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Int32;System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32;System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Int32;System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32;System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Int32;System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32;System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Remove(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Set" uniqueID="Set(System.String;System.String):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Set(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllKeys" uniqueID="get_AllKeys():System.String[]">
				<signature>System.Collections.Specialized.NameValueCollection.get_AllKeys():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.get_Item(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.String):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.set_Item(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="INotifyCollectionChanged" uniqueID="System.Collections.Specialized.INotifyCollectionChanged">
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void">
				<signature>System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="NameObjectCollectionBase+NameObjectEntry" uniqueID="System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry">
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase+NameObjectEntry" uniqueID="NameObjectCollectionBase+NameObjectEntry(System.String;System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry.NameObjectCollectionBase+NameObjectEntry(System.String;System.Object):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Data.Entity.Internal.Linq">
		<class name="IInternalQueryAdapter" uniqueID="System.Data.Entity.Internal.Linq.IInternalQueryAdapter">
			<method accessibility="Public" methodKind="Member" name="get_InternalQuery" uniqueID="get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery">
				<signature>System.Data.Entity.Internal.Linq.IInternalQueryAdapter.get_InternalQuery():System.Data.Entity.Internal.Linq.IInternalQuery</signature>
			</method>
		</class>
		<class name="IInternalSetAdapter" uniqueID="System.Data.Entity.Internal.Linq.IInternalSetAdapter">
			<method accessibility="Public" methodKind="Member" name="get_InternalSet" uniqueID="get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet">
				<signature>System.Data.Entity.Internal.Linq.IInternalSetAdapter.get_InternalSet():System.Data.Entity.Internal.Linq.IInternalSet</signature>
			</method>
		</class>
		<class name="IInternalQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
		</class>
		<class name="IInternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Create():MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Create(System.Type):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Find(System.Object[]):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
		</class>
		<class name="IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
		<class name="IInternalQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
		</class>
		<class name="InternalSet&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Private" methodKind="Member" name="&lt;FindInStateManager&gt;b__0" uniqueID="&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ActOnSet" uniqueID="ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.Attach(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.Create():MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.Create(System.Type):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateObjectQuery" uniqueID="CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSqlQuery" uniqueID="ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.Find(System.Object[]):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStateManager" uniqueID="FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStore" uniqueID="FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.Initialize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalSet&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="InternalSet&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.InternalSet&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySet" uniqueID="get_EntitySet():System.Data.Metadata.Edm.EntitySet">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_EntitySet():System.Data.Metadata.Edm.EntitySet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetBaseType" uniqueID="get_EntitySetBaseType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_EntitySetBaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetName" uniqueID="get_EntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_EntitySetName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QuotedEntitySetName" uniqueID="get_QuotedEntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_QuotedEntitySetName():System.String</signature>
			</method>
		</class>
		<class name="IInternalQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
		</class>
		<class name="IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
		</class>
		<class name="InternalSet&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Private" methodKind="Member" name="&lt;FindInStateManager&gt;b__0" uniqueID="&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ActOnSet" uniqueID="ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.Attach(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.Create():MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.Create(System.Type):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateObjectQuery" uniqueID="CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSqlQuery" uniqueID="ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.Find(System.Object[]):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStateManager" uniqueID="FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStore" uniqueID="FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.Initialize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalSet&lt;MvcMusicStore.Models.Order&gt;" uniqueID="InternalSet&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.InternalSet&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySet" uniqueID="get_EntitySet():System.Data.Metadata.Edm.EntitySet">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_EntitySet():System.Data.Metadata.Edm.EntitySet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetBaseType" uniqueID="get_EntitySetBaseType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_EntitySetBaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetName" uniqueID="get_EntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_EntitySetName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QuotedEntitySetName" uniqueID="get_QuotedEntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Order&gt;.get_QuotedEntitySetName():System.String</signature>
			</method>
		</class>
		<class name="IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
		</class>
		<class name="IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeQuery" uniqueID="InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
		</class>
		<class name="IInternalSet" uniqueID="System.Data.Entity.Internal.Linq.IInternalSet">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet.Attach(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSqlQuery" uniqueID="ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet.ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet.Initialize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet.Remove(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IInternalSet&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Album&gt;.Create():MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Album&gt;.Create(System.Type):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Album&gt;.Find(System.Object[]):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Album&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
		</class>
		<class name="IInternalSet&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Artist&gt;.Create():MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Artist&gt;.Create(System.Type):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Artist&gt;.Find(System.Object[]):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
		</class>
		<class name="InternalSet&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Private" methodKind="Member" name="&lt;FindInStateManager&gt;b__0" uniqueID="&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ActOnSet" uniqueID="ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.Attach(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.Create():MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.Create(System.Type):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateObjectQuery" uniqueID="CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSqlQuery" uniqueID="ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Album">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.Find(System.Object[]):MvcMusicStore.Models.Album</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStateManager" uniqueID="FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStore" uniqueID="FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.Initialize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalSet&lt;MvcMusicStore.Models.Album&gt;" uniqueID="InternalSet&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.InternalSet&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySet" uniqueID="get_EntitySet():System.Data.Metadata.Edm.EntitySet">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_EntitySet():System.Data.Metadata.Edm.EntitySet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetBaseType" uniqueID="get_EntitySetBaseType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_EntitySetBaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetName" uniqueID="get_EntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_EntitySetName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QuotedEntitySetName" uniqueID="get_QuotedEntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Album&gt;.get_QuotedEntitySetName():System.String</signature>
			</method>
		</class>
		<class name="IInternalSet&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Cart&gt;.Create():MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Cart&gt;.Create(System.Type):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Cart">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Cart&gt;.Find(System.Object[]):MvcMusicStore.Models.Cart</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Cart&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
		</class>
		<class name="IInternalSet&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Genre&gt;.Create():MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Genre&gt;.Create(System.Type):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Genre&gt;.Find(System.Object[]):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
		</class>
		<class name="IInternalSet&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Order&gt;.Create():MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Order&gt;.Create(System.Type):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Order">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Order&gt;.Find(System.Object[]):MvcMusicStore.Models.Order</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.IInternalSet&lt;MvcMusicStore.Models.Order&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
		</class>
		<class name="InternalQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeQuery" uniqueID="InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.InternalQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.InternalQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Album&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
		</class>
		<class name="InternalQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeQuery" uniqueID="InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.InternalQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.InternalQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Order&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
		</class>
		<class name="InternalQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeQuery" uniqueID="InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Artist&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
		</class>
		<class name="InternalQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeQuery" uniqueID="InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Cart&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
		</class>
		<class name="InternalQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeQuery" uniqueID="InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.InitializeQuery(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="InternalQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.InternalContext;System.Data.Objects.ObjectQuery):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery" uniqueID="System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Data.Entity.Internal.Linq.IInternalQuery.get_ObjectQuery():System.Data.Objects.ObjectQuery</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalQuery&lt;MvcMusicStore.Models.Genre&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
		</class>
		<class name="InternalSet&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Private" methodKind="Member" name="&lt;FindInStateManager&gt;b__0" uniqueID="&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ActOnSet" uniqueID="ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.Attach(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.Create():MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.Create(System.Type):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateObjectQuery" uniqueID="CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSqlQuery" uniqueID="ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Artist">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.Find(System.Object[]):MvcMusicStore.Models.Artist</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStateManager" uniqueID="FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStore" uniqueID="FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.Initialize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalSet&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="InternalSet&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.InternalSet&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySet" uniqueID="get_EntitySet():System.Data.Metadata.Edm.EntitySet">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_EntitySet():System.Data.Metadata.Edm.EntitySet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetBaseType" uniqueID="get_EntitySetBaseType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_EntitySetBaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetName" uniqueID="get_EntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_EntitySetName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QuotedEntitySetName" uniqueID="get_QuotedEntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Artist&gt;.get_QuotedEntitySetName():System.String</signature>
			</method>
		</class>
		<class name="InternalSet&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Private" methodKind="Member" name="&lt;FindInStateManager&gt;b__0" uniqueID="&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ActOnSet" uniqueID="ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.Attach(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.Create():MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.Create(System.Type):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateObjectQuery" uniqueID="CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSqlQuery" uniqueID="ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.Genre">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.Find(System.Object[]):MvcMusicStore.Models.Genre</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStateManager" uniqueID="FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStore" uniqueID="FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.Initialize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalSet&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="InternalSet&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.InternalSet&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySet" uniqueID="get_EntitySet():System.Data.Metadata.Edm.EntitySet">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_EntitySet():System.Data.Metadata.Edm.EntitySet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetBaseType" uniqueID="get_EntitySetBaseType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_EntitySetBaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetName" uniqueID="get_EntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_EntitySetName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QuotedEntitySetName" uniqueID="get_QuotedEntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.Genre&gt;.get_QuotedEntitySetName():System.String</signature>
			</method>
		</class>
		<class name="InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Private" methodKind="Member" name="&lt;FindInStateManager&gt;b__0" uniqueID="&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.&lt;FindInStateManager&gt;b__0(System.Data.Objects.ObjectStateEntry):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ActOnSet" uniqueID="ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.ActOnSet(System.Action;System.Data.EntityState;System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Add(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsNoTracking" uniqueID="AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.AsNoTracking():System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Attach" uniqueID="Attach(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Attach(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create():MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Create():MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.Type):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Create(System.Type):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateObjectQuery" uniqueID="CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.CreateObjectQuery(System.Boolean):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSqlQuery" uniqueID="ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.ExecuteSqlQuery(System.String;System.Boolean;System.Object[]):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):MvcMusicStore.Models.OrderDetail">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Find(System.Object[]):MvcMusicStore.Models.OrderDetail</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStateManager" uniqueID="FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.FindInStateManager(System.Data.Entity.Internal.WrappedEntityKey):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindInStore" uniqueID="FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.FindInStore(System.Data.Entity.Internal.WrappedEntityKey;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Include(System.String):System.Data.Entity.Internal.Linq.IInternalQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Initialize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.InternalContext):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Entity.Internal.InternalContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetQuery" uniqueID="ResetQuery():System.Void">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.ResetQuery():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySet" uniqueID="get_EntitySet():System.Data.Metadata.Edm.EntitySet">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_EntitySet():System.Data.Metadata.Edm.EntitySet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetBaseType" uniqueID="get_EntitySetBaseType():System.Type">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_EntitySetBaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EntitySetName" uniqueID="get_EntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_EntitySetName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InternalContext" uniqueID="get_InternalContext():System.Data.Entity.Internal.InternalContext">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_InternalContext():System.Data.Entity.Internal.InternalContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Local" uniqueID="get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Local():System.Collections.ObjectModel.ObservableCollection&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQuery" uniqueID="get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_ObjectQuery():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectQueryProvider" uniqueID="get_ObjectQueryProvider():System.Linq.IQueryProvider">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_ObjectQueryProvider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QuotedEntitySetName" uniqueID="get_QuotedEntitySetName():System.String">
				<signature>System.Data.Entity.Internal.Linq.InternalSet&lt;MvcMusicStore.Models.OrderDetail&gt;.get_QuotedEntitySetName():System.String</signature>
			</method>
		</class>
	</package>
	<package name="System.Linq.Expressions">
		<class name="Expression" uniqueID="System.Linq.Expressions.Expression">
			<method accessibility="Private" methodKind="Static" name="&lt;FindMethod&gt;b__6" uniqueID="&lt;FindMethod&gt;b__6(System.Reflection.MemberInfo):System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.Expression.&lt;FindMethod&gt;b__6(System.Reflection.MemberInfo):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;FindProperty&gt;b__2" uniqueID="&lt;FindProperty&gt;b__2(System.Reflection.MemberInfo):System.Reflection.PropertyInfo">
				<signature>System.Linq.Expressions.Expression.&lt;FindProperty&gt;b__2(System.Reflection.MemberInfo):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;GetArgTypesString&gt;b__0" uniqueID="&lt;GetArgTypesString&gt;b__0(System.Linq.Expressions.Expression):System.Type">
				<signature>System.Linq.Expressions.Expression.&lt;GetArgTypesString&gt;b__0(System.Linq.Expressions.Expression):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Linq.Expressions.Expression.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Add" uniqueID="Add(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Add" uniqueID="Add(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AddAssign" uniqueID="AddAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AddAssign" uniqueID="AddAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AddAssign" uniqueID="AddAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AddAssignChecked" uniqueID="AddAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AddAssignChecked" uniqueID="AddAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AddAssignChecked" uniqueID="AddAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AddChecked" uniqueID="AddChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AddChecked" uniqueID="AddChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="And" uniqueID="And(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="And" uniqueID="And(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AndAlso" uniqueID="AndAlso(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AndAlso" uniqueID="AndAlso(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AndAssign" uniqueID="AndAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AndAssign" uniqueID="AndAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AndAssign" uniqueID="AndAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ApplyTypeArgs" uniqueID="ApplyTypeArgs(System.Reflection.MethodInfo;System.Type[]):System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.Expression.ApplyTypeArgs(System.Reflection.MethodInfo;System.Type[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ArrayAccess" uniqueID="ArrayAccess(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.IndexExpression">
				<signature>System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.IndexExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ArrayAccess" uniqueID="ArrayAccess(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.IndexExpression">
				<signature>System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.IndexExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ArrayIndex" uniqueID="ArrayIndex(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ArrayIndex" uniqueID="ArrayIndex(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ArrayIndex" uniqueID="ArrayIndex(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ArrayLength" uniqueID="ArrayLength(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Assign" uniqueID="Assign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Bind" uniqueID="Bind(System.Reflection.MemberInfo;System.Linq.Expressions.Expression):System.Linq.Expressions.MemberAssignment">
				<signature>System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo;System.Linq.Expressions.Expression):System.Linq.Expressions.MemberAssignment</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Bind" uniqueID="Bind(System.Reflection.MethodInfo;System.Linq.Expressions.Expression):System.Linq.Expressions.MemberAssignment">
				<signature>System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo;System.Linq.Expressions.Expression):System.Linq.Expressions.MemberAssignment</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Linq.Expressions.Expression[]):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Linq.Expressions.Expression[]):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Linq.Expressions.Expression[]):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[]):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Linq.Expressions.Expression[]):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Linq.Expressions.Expression[]):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Block" uniqueID="Block(System.Type;System.Linq.Expressions.Expression[]):System.Linq.Expressions.BlockExpression">
				<signature>System.Linq.Expressions.Expression.Block(System.Type;System.Linq.Expressions.Expression[]):System.Linq.Expressions.BlockExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Break" uniqueID="Break(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Break" uniqueID="Break(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Break" uniqueID="Break(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Break" uniqueID="Break(System.Linq.Expressions.LabelTarget;System.Type):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget;System.Type):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Linq.Expressions.Expression;System.String;System.Type[];System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression;System.String;System.Type[];System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Call" uniqueID="Call(System.Type;System.String;System.Type[];System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.Expression.Call(System.Type;System.String;System.Type[];System.Linq.Expressions.Expression[]):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Catch" uniqueID="Catch(System.Linq.Expressions.ParameterExpression;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock">
				<signature>System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Catch" uniqueID="Catch(System.Linq.Expressions.ParameterExpression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock">
				<signature>System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Catch" uniqueID="Catch(System.Type;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock">
				<signature>System.Linq.Expressions.Expression.Catch(System.Type;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Catch" uniqueID="Catch(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock">
				<signature>System.Linq.Expressions.Expression.Catch(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CheckMethod" uniqueID="CheckMethod(System.Reflection.MethodInfo;System.Reflection.MethodInfo):System.Boolean">
				<signature>System.Linq.Expressions.Expression.CheckMethod(System.Reflection.MethodInfo;System.Reflection.MethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ClearDebugInfo" uniqueID="ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo):System.Linq.Expressions.DebugInfoExpression">
				<signature>System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo):System.Linq.Expressions.DebugInfoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Coalesce" uniqueID="Coalesce(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Coalesce" uniqueID="Coalesce(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Condition" uniqueID="Condition(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.ConditionalExpression">
				<signature>System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.ConditionalExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Condition" uniqueID="Condition(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.ConditionalExpression">
				<signature>System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.ConditionalExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Constant" uniqueID="Constant(System.Object):System.Linq.Expressions.ConstantExpression">
				<signature>System.Linq.Expressions.Expression.Constant(System.Object):System.Linq.Expressions.ConstantExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Constant" uniqueID="Constant(System.Object;System.Type):System.Linq.Expressions.ConstantExpression">
				<signature>System.Linq.Expressions.Expression.Constant(System.Object;System.Type):System.Linq.Expressions.ConstantExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Continue" uniqueID="Continue(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Continue" uniqueID="Continue(System.Linq.Expressions.LabelTarget;System.Type):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget;System.Type):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Convert" uniqueID="Convert(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Convert" uniqueID="Convert(System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConvertChecked" uniqueID="ConvertChecked(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConvertChecked" uniqueID="ConvertChecked(System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateLambda" uniqueID="CreateLambda(System.Type;System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.CreateLambda(System.Type;System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DebugInfo" uniqueID="DebugInfo(System.Linq.Expressions.SymbolDocumentInfo;System.Int32;System.Int32;System.Int32;System.Int32):System.Linq.Expressions.DebugInfoExpression">
				<signature>System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo;System.Int32;System.Int32;System.Int32;System.Int32):System.Linq.Expressions.DebugInfoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Decrement" uniqueID="Decrement(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Decrement" uniqueID="Decrement(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Default" uniqueID="Default(System.Type):System.Linq.Expressions.DefaultExpression">
				<signature>System.Linq.Expressions.Expression.Default(System.Type):System.Linq.Expressions.DefaultExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Divide" uniqueID="Divide(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Divide" uniqueID="Divide(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DivideAssign" uniqueID="DivideAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DivideAssign" uniqueID="DivideAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DivideAssign" uniqueID="DivideAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Dynamic" uniqueID="Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Dynamic" uniqueID="Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Dynamic" uniqueID="Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Dynamic" uniqueID="Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Dynamic" uniqueID="Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Dynamic" uniqueID="Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression[]):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Linq.Expressions.Expression[]):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ElementInit" uniqueID="ElementInit(System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.ElementInit">
				<signature>System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.ElementInit</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ElementInit" uniqueID="ElementInit(System.Reflection.MethodInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.ElementInit">
				<signature>System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.ElementInit</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Empty" uniqueID="Empty():System.Linq.Expressions.DefaultExpression">
				<signature>System.Linq.Expressions.Expression.Empty():System.Linq.Expressions.DefaultExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equal" uniqueID="Equal(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equal" uniqueID="Equal(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ExclusiveOr" uniqueID="ExclusiveOr(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ExclusiveOr" uniqueID="ExclusiveOr(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ExclusiveOrAssign" uniqueID="ExclusiveOrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ExclusiveOrAssign" uniqueID="ExclusiveOrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ExclusiveOrAssign" uniqueID="ExclusiveOrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Field" uniqueID="Field(System.Linq.Expressions.Expression;System.Reflection.FieldInfo):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression;System.Reflection.FieldInfo):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Field" uniqueID="Field(System.Linq.Expressions.Expression;System.String):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression;System.String):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Field" uniqueID="Field(System.Linq.Expressions.Expression;System.Type;System.String):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression;System.Type;System.String):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FindBestMethod" uniqueID="FindBestMethod(System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;;System.Type[];System.Linq.Expressions.Expression[];System.Reflection.MethodInfo):System.Int32">
				<signature>System.Linq.Expressions.Expression.FindBestMethod(System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;;System.Type[];System.Linq.Expressions.Expression[];System.Reflection.MethodInfo):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FindBestProperty" uniqueID="FindBestProperty(System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;;System.Linq.Expressions.Expression[];System.Reflection.PropertyInfo):System.Int32">
				<signature>System.Linq.Expressions.Expression.FindBestProperty(System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;;System.Linq.Expressions.Expression[];System.Reflection.PropertyInfo):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FindInstanceProperty" uniqueID="FindInstanceProperty(System.Type;System.String;System.Linq.Expressions.Expression[]):System.Reflection.PropertyInfo">
				<signature>System.Linq.Expressions.Expression.FindInstanceProperty(System.Type;System.String;System.Linq.Expressions.Expression[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FindMethod" uniqueID="FindMethod(System.Type;System.String;System.Type[];System.Linq.Expressions.Expression[];System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.Expression.FindMethod(System.Type;System.String;System.Type[];System.Linq.Expressions.Expression[];System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FindProperty" uniqueID="FindProperty(System.Type;System.String;System.Linq.Expressions.Expression[];System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Linq.Expressions.Expression.FindProperty(System.Type;System.String;System.Linq.Expressions.Expression[];System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetActionType" uniqueID="GetActionType(System.Type[]):System.Type">
				<signature>System.Linq.Expressions.Expression.GetActionType(System.Type[]):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetArgTypesString" uniqueID="GetArgTypesString(System.Linq.Expressions.Expression[]):System.String">
				<signature>System.Linq.Expressions.Expression.GetArgTypesString(System.Linq.Expressions.Expression[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetComparisonOperator" uniqueID="GetComparisonOperator(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GetComparisonOperator(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetDelegateType" uniqueID="GetDelegateType(System.Type[]):System.Type">
				<signature>System.Linq.Expressions.Expression.GetDelegateType(System.Type[]):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetEqualityComparisonOperator" uniqueID="GetEqualityComparisonOperator(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GetEqualityComparisonOperator(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetFuncType" uniqueID="GetFuncType(System.Type[]):System.Type">
				<signature>System.Linq.Expressions.Expression.GetFuncType(System.Type[]):System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetInvokeMethod" uniqueID="GetInvokeMethod(System.Linq.Expressions.Expression):System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.Expression.GetInvokeMethod(System.Linq.Expressions.Expression):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMethodBasedAssignOperator" uniqueID="GetMethodBasedAssignOperator(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression;System.Boolean):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GetMethodBasedAssignOperator(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression;System.Boolean):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMethodBasedBinaryOperator" uniqueID="GetMethodBasedBinaryOperator(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Boolean):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GetMethodBasedBinaryOperator(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Boolean):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMethodBasedCoercionOperator" uniqueID="GetMethodBasedCoercionOperator(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.GetMethodBasedCoercionOperator(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMethodBasedUnaryOperator" uniqueID="GetMethodBasedUnaryOperator(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.GetMethodBasedUnaryOperator(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParametersForValidation" uniqueID="GetParametersForValidation(System.Reflection.MethodBase;System.Linq.Expressions.ExpressionType):System.Reflection.ParameterInfo[]">
				<signature>System.Linq.Expressions.Expression.GetParametersForValidation(System.Reflection.MethodBase;System.Linq.Expressions.ExpressionType):System.Reflection.ParameterInfo[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetProperty" uniqueID="GetProperty(System.Reflection.MethodInfo):System.Reflection.PropertyInfo">
				<signature>System.Linq.Expressions.Expression.GetProperty(System.Reflection.MethodInfo):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetResultTypeOfShift" uniqueID="GetResultTypeOfShift(System.Type;System.Type):System.Type">
				<signature>System.Linq.Expressions.Expression.GetResultTypeOfShift(System.Type;System.Type):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUserDefinedAssignOperatorOrThrow" uniqueID="GetUserDefinedAssignOperatorOrThrow(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.LambdaExpression;System.Boolean):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GetUserDefinedAssignOperatorOrThrow(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.LambdaExpression;System.Boolean):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUserDefinedBinaryOperator" uniqueID="GetUserDefinedBinaryOperator(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GetUserDefinedBinaryOperator(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUserDefinedBinaryOperator" uniqueID="GetUserDefinedBinaryOperator(System.Linq.Expressions.ExpressionType;System.Type;System.Type;System.String):System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.Expression.GetUserDefinedBinaryOperator(System.Linq.Expressions.ExpressionType;System.Type;System.Type;System.String):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUserDefinedBinaryOperatorOrThrow" uniqueID="GetUserDefinedBinaryOperatorOrThrow(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GetUserDefinedBinaryOperatorOrThrow(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUserDefinedCoercion" uniqueID="GetUserDefinedCoercion(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.GetUserDefinedCoercion(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUserDefinedCoercionOrThrow" uniqueID="GetUserDefinedCoercionOrThrow(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.GetUserDefinedCoercionOrThrow(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUserDefinedUnaryOperator" uniqueID="GetUserDefinedUnaryOperator(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.GetUserDefinedUnaryOperator(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUserDefinedUnaryOperatorOrThrow" uniqueID="GetUserDefinedUnaryOperatorOrThrow(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.GetUserDefinedUnaryOperatorOrThrow(System.Linq.Expressions.ExpressionType;System.String;System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetValidMethodForDynamic" uniqueID="GetValidMethodForDynamic(System.Type):System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.Expression.GetValidMethodForDynamic(System.Type):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Goto" uniqueID="Goto(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Goto" uniqueID="Goto(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Goto" uniqueID="Goto(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Goto" uniqueID="Goto(System.Linq.Expressions.LabelTarget;System.Type):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget;System.Type):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GreaterThan" uniqueID="GreaterThan(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GreaterThan" uniqueID="GreaterThan(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GreaterThanOrEqual" uniqueID="GreaterThanOrEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GreaterThanOrEqual" uniqueID="GreaterThanOrEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IfThen" uniqueID="IfThen(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.ConditionalExpression">
				<signature>System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.ConditionalExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IfThenElse" uniqueID="IfThenElse(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.ConditionalExpression">
				<signature>System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.ConditionalExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Increment" uniqueID="Increment(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Increment" uniqueID="Increment(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Invoke" uniqueID="Invoke(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.InvocationExpression">
				<signature>System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.InvocationExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Invoke" uniqueID="Invoke(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.InvocationExpression">
				<signature>System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.InvocationExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatible" uniqueID="IsCompatible(System.Reflection.MethodBase;System.Linq.Expressions.Expression[]):System.Boolean">
				<signature>System.Linq.Expressions.Expression.IsCompatible(System.Reflection.MethodBase;System.Linq.Expressions.Expression[]):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatible" uniqueID="IsCompatible(System.Reflection.PropertyInfo;System.Linq.Expressions.Expression[]):System.Boolean">
				<signature>System.Linq.Expressions.Expression.IsCompatible(System.Reflection.PropertyInfo;System.Linq.Expressions.Expression[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsFalse" uniqueID="IsFalse(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsFalse" uniqueID="IsFalse(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLiftingConditionalLogicalOperator" uniqueID="IsLiftingConditionalLogicalOperator(System.Type;System.Type;System.Reflection.MethodInfo;System.Linq.Expressions.ExpressionType):System.Boolean">
				<signature>System.Linq.Expressions.Expression.IsLiftingConditionalLogicalOperator(System.Type;System.Type;System.Reflection.MethodInfo;System.Linq.Expressions.ExpressionType):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsNullComparison" uniqueID="IsNullComparison(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Boolean">
				<signature>System.Linq.Expressions.Expression.IsNullComparison(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsNullConstant" uniqueID="IsNullConstant(System.Linq.Expressions.Expression):System.Boolean">
				<signature>System.Linq.Expressions.Expression.IsNullConstant(System.Linq.Expressions.Expression):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSimpleShift" uniqueID="IsSimpleShift(System.Type;System.Type):System.Boolean">
				<signature>System.Linq.Expressions.Expression.IsSimpleShift(System.Type;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsTrue" uniqueID="IsTrue(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsTrue" uniqueID="IsTrue(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsValidLiftedConditionalLogicalOperator" uniqueID="IsValidLiftedConditionalLogicalOperator(System.Type;System.Type;System.Reflection.ParameterInfo[]):System.Boolean">
				<signature>System.Linq.Expressions.Expression.IsValidLiftedConditionalLogicalOperator(System.Type;System.Type;System.Reflection.ParameterInfo[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Label" uniqueID="Label():System.Linq.Expressions.LabelTarget">
				<signature>System.Linq.Expressions.Expression.Label():System.Linq.Expressions.LabelTarget</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Label" uniqueID="Label(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.LabelExpression">
				<signature>System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.LabelExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Label" uniqueID="Label(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression):System.Linq.Expressions.LabelExpression">
				<signature>System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression):System.Linq.Expressions.LabelExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Label" uniqueID="Label(System.String):System.Linq.Expressions.LabelTarget">
				<signature>System.Linq.Expressions.Expression.Label(System.String):System.Linq.Expressions.LabelTarget</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Label" uniqueID="Label(System.Type):System.Linq.Expressions.LabelTarget">
				<signature>System.Linq.Expressions.Expression.Label(System.Type):System.Linq.Expressions.LabelTarget</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Label" uniqueID="Label(System.Type;System.String):System.Linq.Expressions.LabelTarget">
				<signature>System.Linq.Expressions.Expression.Label(System.Type;System.String):System.Linq.Expressions.LabelTarget</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Linq.Expressions.Expression;System.Boolean;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression;System.Boolean;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Linq.Expressions.Expression;System.Boolean;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression;System.Boolean;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Linq.Expressions.Expression;System.String;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression;System.String;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Type;System.Linq.Expressions.Expression;System.Boolean;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Type;System.Linq.Expressions.Expression;System.Boolean;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Type;System.Linq.Expressions.Expression;System.Boolean;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Type;System.Linq.Expressions.Expression;System.Boolean;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Type;System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Type;System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Type;System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Type;System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda" uniqueID="Lambda(System.Type;System.Linq.Expressions.Expression;System.String;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression.Lambda(System.Type;System.Linq.Expressions.Expression;System.String;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;" uniqueID="Lambda&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;&gt;">
				<signature>System.Linq.Expressions.Expression.Lambda&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LeftShift" uniqueID="LeftShift(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LeftShift" uniqueID="LeftShift(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LeftShiftAssign" uniqueID="LeftShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LeftShiftAssign" uniqueID="LeftShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LeftShiftAssign" uniqueID="LeftShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LessThan" uniqueID="LessThan(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LessThan" uniqueID="LessThan(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LessThanOrEqual" uniqueID="LessThanOrEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LessThanOrEqual" uniqueID="LessThanOrEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListBind" uniqueID="ListBind(System.Reflection.MemberInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;):System.Linq.Expressions.MemberListBinding">
				<signature>System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;):System.Linq.Expressions.MemberListBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListBind" uniqueID="ListBind(System.Reflection.MemberInfo;System.Linq.Expressions.ElementInit[]):System.Linq.Expressions.MemberListBinding">
				<signature>System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo;System.Linq.Expressions.ElementInit[]):System.Linq.Expressions.MemberListBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListBind" uniqueID="ListBind(System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;):System.Linq.Expressions.MemberListBinding">
				<signature>System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;):System.Linq.Expressions.MemberListBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListBind" uniqueID="ListBind(System.Reflection.MethodInfo;System.Linq.Expressions.ElementInit[]):System.Linq.Expressions.MemberListBinding">
				<signature>System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo;System.Linq.Expressions.ElementInit[]):System.Linq.Expressions.MemberListBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListInit" uniqueID="ListInit(System.Linq.Expressions.NewExpression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;):System.Linq.Expressions.ListInitExpression">
				<signature>System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;):System.Linq.Expressions.ListInitExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListInit" uniqueID="ListInit(System.Linq.Expressions.NewExpression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.ListInitExpression">
				<signature>System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.ListInitExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListInit" uniqueID="ListInit(System.Linq.Expressions.NewExpression;System.Linq.Expressions.ElementInit[]):System.Linq.Expressions.ListInitExpression">
				<signature>System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression;System.Linq.Expressions.ElementInit[]):System.Linq.Expressions.ListInitExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListInit" uniqueID="ListInit(System.Linq.Expressions.NewExpression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.ListInitExpression">
				<signature>System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.ListInitExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListInit" uniqueID="ListInit(System.Linq.Expressions.NewExpression;System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.ListInitExpression">
				<signature>System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression;System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.ListInitExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ListInit" uniqueID="ListInit(System.Linq.Expressions.NewExpression;System.Reflection.MethodInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.ListInitExpression">
				<signature>System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression;System.Reflection.MethodInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.ListInitExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Loop" uniqueID="Loop(System.Linq.Expressions.Expression):System.Linq.Expressions.LoopExpression">
				<signature>System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression):System.Linq.Expressions.LoopExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Loop" uniqueID="Loop(System.Linq.Expressions.Expression;System.Linq.Expressions.LabelTarget):System.Linq.Expressions.LoopExpression">
				<signature>System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression;System.Linq.Expressions.LabelTarget):System.Linq.Expressions.LoopExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Loop" uniqueID="Loop(System.Linq.Expressions.Expression;System.Linq.Expressions.LabelTarget;System.Linq.Expressions.LabelTarget):System.Linq.Expressions.LoopExpression">
				<signature>System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression;System.Linq.Expressions.LabelTarget;System.Linq.Expressions.LabelTarget):System.Linq.Expressions.LoopExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeBinary" uniqueID="MakeBinary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeBinary" uniqueID="MakeBinary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeBinary" uniqueID="MakeBinary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeCatchBlock" uniqueID="MakeCatchBlock(System.Type;System.Linq.Expressions.ParameterExpression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock">
				<signature>System.Linq.Expressions.Expression.MakeCatchBlock(System.Type;System.Linq.Expressions.ParameterExpression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.CatchBlock</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MakeDynamic" uniqueID="MakeDynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.MakeDynamic(System.Runtime.CompilerServices.CallSiteBinder;System.Type;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeDynamic" uniqueID="MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeDynamic" uniqueID="MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeDynamic" uniqueID="MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeDynamic" uniqueID="MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeDynamic" uniqueID="MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeDynamic" uniqueID="MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression[]):System.Linq.Expressions.DynamicExpression">
				<signature>System.Linq.Expressions.Expression.MakeDynamic(System.Type;System.Runtime.CompilerServices.CallSiteBinder;System.Linq.Expressions.Expression[]):System.Linq.Expressions.DynamicExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeGoto" uniqueID="MakeGoto(System.Linq.Expressions.GotoExpressionKind;System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind;System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeIndex" uniqueID="MakeIndex(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.IndexExpression">
				<signature>System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.IndexExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeMemberAccess" uniqueID="MakeMemberAccess(System.Linq.Expressions.Expression;System.Reflection.MemberInfo):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression;System.Reflection.MemberInfo):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MakeOpAssignUnary" uniqueID="MakeOpAssignUnary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.MakeOpAssignUnary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeTry" uniqueID="MakeTry(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;):System.Linq.Expressions.TryExpression">
				<signature>System.Linq.Expressions.Expression.MakeTry(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;):System.Linq.Expressions.TryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeUnary" uniqueID="MakeUnary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MakeUnary" uniqueID="MakeUnary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MemberBind" uniqueID="MemberBind(System.Reflection.MemberInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;):System.Linq.Expressions.MemberMemberBinding">
				<signature>System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;):System.Linq.Expressions.MemberMemberBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MemberBind" uniqueID="MemberBind(System.Reflection.MemberInfo;System.Linq.Expressions.MemberBinding[]):System.Linq.Expressions.MemberMemberBinding">
				<signature>System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo;System.Linq.Expressions.MemberBinding[]):System.Linq.Expressions.MemberMemberBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MemberBind" uniqueID="MemberBind(System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;):System.Linq.Expressions.MemberMemberBinding">
				<signature>System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;):System.Linq.Expressions.MemberMemberBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MemberBind" uniqueID="MemberBind(System.Reflection.MethodInfo;System.Linq.Expressions.MemberBinding[]):System.Linq.Expressions.MemberMemberBinding">
				<signature>System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo;System.Linq.Expressions.MemberBinding[]):System.Linq.Expressions.MemberMemberBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MemberInit" uniqueID="MemberInit(System.Linq.Expressions.NewExpression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;):System.Linq.Expressions.MemberInitExpression">
				<signature>System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;):System.Linq.Expressions.MemberInitExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MemberInit" uniqueID="MemberInit(System.Linq.Expressions.NewExpression;System.Linq.Expressions.MemberBinding[]):System.Linq.Expressions.MemberInitExpression">
				<signature>System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression;System.Linq.Expressions.MemberBinding[]):System.Linq.Expressions.MemberInitExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Modulo" uniqueID="Modulo(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Modulo" uniqueID="Modulo(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ModuloAssign" uniqueID="ModuloAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ModuloAssign" uniqueID="ModuloAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ModuloAssign" uniqueID="ModuloAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Multiply" uniqueID="Multiply(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Multiply" uniqueID="Multiply(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MultiplyAssign" uniqueID="MultiplyAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MultiplyAssign" uniqueID="MultiplyAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MultiplyAssign" uniqueID="MultiplyAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MultiplyAssignChecked" uniqueID="MultiplyAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MultiplyAssignChecked" uniqueID="MultiplyAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MultiplyAssignChecked" uniqueID="MultiplyAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MultiplyChecked" uniqueID="MultiplyChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MultiplyChecked" uniqueID="MultiplyChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Negate" uniqueID="Negate(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Negate" uniqueID="Negate(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NegateChecked" uniqueID="NegateChecked(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NegateChecked" uniqueID="NegateChecked(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="New" uniqueID="New(System.Reflection.ConstructorInfo):System.Linq.Expressions.NewExpression">
				<signature>System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo):System.Linq.Expressions.NewExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="New" uniqueID="New(System.Reflection.ConstructorInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.NewExpression">
				<signature>System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.NewExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="New" uniqueID="New(System.Reflection.ConstructorInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;;System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt;):System.Linq.Expressions.NewExpression">
				<signature>System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;;System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt;):System.Linq.Expressions.NewExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="New" uniqueID="New(System.Reflection.ConstructorInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;;System.Reflection.MemberInfo[]):System.Linq.Expressions.NewExpression">
				<signature>System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;;System.Reflection.MemberInfo[]):System.Linq.Expressions.NewExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="New" uniqueID="New(System.Reflection.ConstructorInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.NewExpression">
				<signature>System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.NewExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="New" uniqueID="New(System.Type):System.Linq.Expressions.NewExpression">
				<signature>System.Linq.Expressions.Expression.New(System.Type):System.Linq.Expressions.NewExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NewArrayBounds" uniqueID="NewArrayBounds(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.NewArrayExpression">
				<signature>System.Linq.Expressions.Expression.NewArrayBounds(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.NewArrayExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NewArrayBounds" uniqueID="NewArrayBounds(System.Type;System.Linq.Expressions.Expression[]):System.Linq.Expressions.NewArrayExpression">
				<signature>System.Linq.Expressions.Expression.NewArrayBounds(System.Type;System.Linq.Expressions.Expression[]):System.Linq.Expressions.NewArrayExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NewArrayInit" uniqueID="NewArrayInit(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.NewArrayExpression">
				<signature>System.Linq.Expressions.Expression.NewArrayInit(System.Type;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.NewArrayExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NewArrayInit" uniqueID="NewArrayInit(System.Type;System.Linq.Expressions.Expression[]):System.Linq.Expressions.NewArrayExpression">
				<signature>System.Linq.Expressions.Expression.NewArrayInit(System.Type;System.Linq.Expressions.Expression[]):System.Linq.Expressions.NewArrayExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Not" uniqueID="Not(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Not" uniqueID="Not(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NotEqual" uniqueID="NotEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NotEqual" uniqueID="NotEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Boolean;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OnesComplement" uniqueID="OnesComplement(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OnesComplement" uniqueID="OnesComplement(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Or" uniqueID="Or(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Or" uniqueID="Or(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OrAssign" uniqueID="OrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OrAssign" uniqueID="OrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OrAssign" uniqueID="OrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OrElse" uniqueID="OrElse(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OrElse" uniqueID="OrElse(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parameter" uniqueID="Parameter(System.Type):System.Linq.Expressions.ParameterExpression">
				<signature>System.Linq.Expressions.Expression.Parameter(System.Type):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parameter" uniqueID="Parameter(System.Type;System.String):System.Linq.Expressions.ParameterExpression">
				<signature>System.Linq.Expressions.Expression.Parameter(System.Type;System.String):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ParameterIsAssignable" uniqueID="ParameterIsAssignable(System.Reflection.ParameterInfo;System.Type):System.Boolean">
				<signature>System.Linq.Expressions.Expression.ParameterIsAssignable(System.Reflection.ParameterInfo;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PostDecrementAssign" uniqueID="PostDecrementAssign(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PostDecrementAssign" uniqueID="PostDecrementAssign(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PostIncrementAssign" uniqueID="PostIncrementAssign(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PostIncrementAssign" uniqueID="PostIncrementAssign(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Power" uniqueID="Power(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Power" uniqueID="Power(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PowerAssign" uniqueID="PowerAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PowerAssign" uniqueID="PowerAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PowerAssign" uniqueID="PowerAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PreDecrementAssign" uniqueID="PreDecrementAssign(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PreDecrementAssign" uniqueID="PreDecrementAssign(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PreIncrementAssign" uniqueID="PreIncrementAssign(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PreIncrementAssign" uniqueID="PreIncrementAssign(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Property" uniqueID="Property(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Property" uniqueID="Property(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Property" uniqueID="Property(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.IndexExpression">
				<signature>System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.IndexExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Property" uniqueID="Property(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.IndexExpression">
				<signature>System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo;System.Linq.Expressions.Expression[]):System.Linq.Expressions.IndexExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Property" uniqueID="Property(System.Linq.Expressions.Expression;System.String):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression;System.String):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Property" uniqueID="Property(System.Linq.Expressions.Expression;System.String;System.Linq.Expressions.Expression[]):System.Linq.Expressions.IndexExpression">
				<signature>System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression;System.String;System.Linq.Expressions.Expression[]):System.Linq.Expressions.IndexExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Property" uniqueID="Property(System.Linq.Expressions.Expression;System.Type;System.String):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression;System.Type;System.String):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PropertyOrField" uniqueID="PropertyOrField(System.Linq.Expressions.Expression;System.String):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression;System.String):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Quote" uniqueID="Quote(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReferenceEqual" uniqueID="ReferenceEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReferenceNotEqual" uniqueID="ReferenceNotEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RequiresCanRead" uniqueID="RequiresCanRead(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;;System.String):System.Void">
				<signature>System.Linq.Expressions.Expression.RequiresCanRead(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RequiresCanRead" uniqueID="RequiresCanRead(System.Linq.Expressions.Expression;System.String):System.Void">
				<signature>System.Linq.Expressions.Expression.RequiresCanRead(System.Linq.Expressions.Expression;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RequiresCanWrite" uniqueID="RequiresCanWrite(System.Linq.Expressions.Expression;System.String):System.Void">
				<signature>System.Linq.Expressions.Expression.RequiresCanWrite(System.Linq.Expressions.Expression;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Rethrow" uniqueID="Rethrow():System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Rethrow():System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Rethrow" uniqueID="Rethrow(System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Rethrow(System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Return" uniqueID="Return(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Return" uniqueID="Return(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Return" uniqueID="Return(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Return" uniqueID="Return(System.Linq.Expressions.LabelTarget;System.Type):System.Linq.Expressions.GotoExpression">
				<signature>System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget;System.Type):System.Linq.Expressions.GotoExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReturnReadOnly" uniqueID="ReturnReadOnly(System.Linq.Expressions.IArgumentProvider;System.Object):System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;">
				<signature>System.Linq.Expressions.Expression.ReturnReadOnly(System.Linq.Expressions.IArgumentProvider;System.Object):System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RightShift" uniqueID="RightShift(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RightShift" uniqueID="RightShift(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RightShiftAssign" uniqueID="RightShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RightShiftAssign" uniqueID="RightShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RightShiftAssign" uniqueID="RightShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RuntimeVariables" uniqueID="RuntimeVariables(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.RuntimeVariablesExpression">
				<signature>System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.RuntimeVariablesExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RuntimeVariables" uniqueID="RuntimeVariables(System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.RuntimeVariablesExpression">
				<signature>System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[]):System.Linq.Expressions.RuntimeVariablesExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Subtract" uniqueID="Subtract(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Subtract" uniqueID="Subtract(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SubtractAssign" uniqueID="SubtractAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SubtractAssign" uniqueID="SubtractAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SubtractAssign" uniqueID="SubtractAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SubtractAssignChecked" uniqueID="SubtractAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SubtractAssignChecked" uniqueID="SubtractAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SubtractAssignChecked" uniqueID="SubtractAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SubtractChecked" uniqueID="SubtractChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SubtractChecked" uniqueID="SubtractChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Switch" uniqueID="Switch(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.SwitchCase[]):System.Linq.Expressions.SwitchExpression">
				<signature>System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.SwitchCase[]):System.Linq.Expressions.SwitchExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Switch" uniqueID="Switch(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;):System.Linq.Expressions.SwitchExpression">
				<signature>System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;):System.Linq.Expressions.SwitchExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Switch" uniqueID="Switch(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.SwitchCase[]):System.Linq.Expressions.SwitchExpression">
				<signature>System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.SwitchCase[]):System.Linq.Expressions.SwitchExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Switch" uniqueID="Switch(System.Linq.Expressions.Expression;System.Linq.Expressions.SwitchCase[]):System.Linq.Expressions.SwitchExpression">
				<signature>System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression;System.Linq.Expressions.SwitchCase[]):System.Linq.Expressions.SwitchExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Switch" uniqueID="Switch(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;):System.Linq.Expressions.SwitchExpression">
				<signature>System.Linq.Expressions.Expression.Switch(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;):System.Linq.Expressions.SwitchExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Switch" uniqueID="Switch(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.SwitchCase[]):System.Linq.Expressions.SwitchExpression">
				<signature>System.Linq.Expressions.Expression.Switch(System.Type;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.SwitchCase[]):System.Linq.Expressions.SwitchExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SwitchCase" uniqueID="SwitchCase(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.SwitchCase">
				<signature>System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.SwitchCase</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SwitchCase" uniqueID="SwitchCase(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.SwitchCase">
				<signature>System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression[]):System.Linq.Expressions.SwitchCase</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SymbolDocument" uniqueID="SymbolDocument(System.String):System.Linq.Expressions.SymbolDocumentInfo">
				<signature>System.Linq.Expressions.Expression.SymbolDocument(System.String):System.Linq.Expressions.SymbolDocumentInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SymbolDocument" uniqueID="SymbolDocument(System.String;System.Guid):System.Linq.Expressions.SymbolDocumentInfo">
				<signature>System.Linq.Expressions.Expression.SymbolDocument(System.String;System.Guid):System.Linq.Expressions.SymbolDocumentInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SymbolDocument" uniqueID="SymbolDocument(System.String;System.Guid;System.Guid):System.Linq.Expressions.SymbolDocumentInfo">
				<signature>System.Linq.Expressions.Expression.SymbolDocument(System.String;System.Guid;System.Guid):System.Linq.Expressions.SymbolDocumentInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SymbolDocument" uniqueID="SymbolDocument(System.String;System.Guid;System.Guid;System.Guid):System.Linq.Expressions.SymbolDocumentInfo">
				<signature>System.Linq.Expressions.Expression.SymbolDocument(System.String;System.Guid;System.Guid;System.Guid):System.Linq.Expressions.SymbolDocumentInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Throw" uniqueID="Throw(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Throw" uniqueID="Throw(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryCatch" uniqueID="TryCatch(System.Linq.Expressions.Expression;System.Linq.Expressions.CatchBlock[]):System.Linq.Expressions.TryExpression">
				<signature>System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression;System.Linq.Expressions.CatchBlock[]):System.Linq.Expressions.TryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryCatchFinally" uniqueID="TryCatchFinally(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.CatchBlock[]):System.Linq.Expressions.TryExpression">
				<signature>System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Linq.Expressions.CatchBlock[]):System.Linq.Expressions.TryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryFault" uniqueID="TryFault(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.TryExpression">
				<signature>System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.TryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryFinally" uniqueID="TryFinally(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.TryExpression">
				<signature>System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Linq.Expressions.TryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryGetActionType" uniqueID="TryGetActionType(System.Type[];System.Type):System.Boolean">
				<signature>System.Linq.Expressions.Expression.TryGetActionType(System.Type[];System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryGetFuncType" uniqueID="TryGetFuncType(System.Type[];System.Type):System.Boolean">
				<signature>System.Linq.Expressions.Expression.TryGetFuncType(System.Type[];System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryQuote" uniqueID="TryQuote(System.Type;System.Linq.Expressions.Expression):System.Boolean">
				<signature>System.Linq.Expressions.Expression.TryQuote(System.Type;System.Linq.Expressions.Expression):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TypeAs" uniqueID="TypeAs(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TypeEqual" uniqueID="TypeEqual(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.TypeBinaryExpression">
				<signature>System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.TypeBinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TypeIs" uniqueID="TypeIs(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.TypeBinaryExpression">
				<signature>System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.TypeBinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="UnaryPlus" uniqueID="UnaryPlus(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="UnaryPlus" uniqueID="UnaryPlus(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Unbox" uniqueID="Unbox(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateAccessor" uniqueID="ValidateAccessor(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Reflection.ParameterInfo[];System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateAccessor(System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Reflection.ParameterInfo[];System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateAccessorArgumentTypes" uniqueID="ValidateAccessorArgumentTypes(System.Reflection.MethodInfo;System.Reflection.ParameterInfo[];System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateAccessorArgumentTypes(System.Reflection.MethodInfo;System.Reflection.ParameterInfo[];System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateAnonymousTypeMember" uniqueID="ValidateAnonymousTypeMember(System.Reflection.MemberInfo;System.Type):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateAnonymousTypeMember(System.Reflection.MemberInfo;System.Type):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateArgumentCount" uniqueID="ValidateArgumentCount(System.Reflection.MethodBase;System.Linq.Expressions.ExpressionType;System.Int32;System.Reflection.ParameterInfo[]):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateArgumentCount(System.Reflection.MethodBase;System.Linq.Expressions.ExpressionType;System.Int32;System.Reflection.ParameterInfo[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateArgumentTypes" uniqueID="ValidateArgumentTypes(System.Reflection.MethodBase;System.Linq.Expressions.ExpressionType;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateArgumentTypes(System.Reflection.MethodBase;System.Linq.Expressions.ExpressionType;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateCallInstanceType" uniqueID="ValidateCallInstanceType(System.Type;System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateCallInstanceType(System.Type;System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateCoalesceArgTypes" uniqueID="ValidateCoalesceArgTypes(System.Type;System.Type):System.Type">
				<signature>System.Linq.Expressions.Expression.ValidateCoalesceArgTypes(System.Type;System.Type):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateDynamicArgument" uniqueID="ValidateDynamicArgument(System.Linq.Expressions.Expression):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateDynamicArgument(System.Linq.Expressions.Expression):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateElementInitAddMethodInfo" uniqueID="ValidateElementInitAddMethodInfo(System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateElementInitAddMethodInfo(System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateGettableFieldOrPropertyMember" uniqueID="ValidateGettableFieldOrPropertyMember(System.Reflection.MemberInfo;System.Type):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateGettableFieldOrPropertyMember(System.Reflection.MemberInfo;System.Type):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateGoto" uniqueID="ValidateGoto(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.String;System.String):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateGoto(System.Linq.Expressions.LabelTarget;System.Linq.Expressions.Expression;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateGotoType" uniqueID="ValidateGotoType(System.Type;System.Linq.Expressions.Expression;System.String):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateGotoType(System.Type;System.Linq.Expressions.Expression;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateIndexedProperty" uniqueID="ValidateIndexedProperty(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateIndexedProperty(System.Linq.Expressions.Expression;System.Reflection.PropertyInfo;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateLambdaArgs" uniqueID="ValidateLambdaArgs(System.Type;System.Linq.Expressions.Expression;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateLambdaArgs(System.Type;System.Linq.Expressions.Expression;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateListInitArgs" uniqueID="ValidateListInitArgs(System.Type;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateListInitArgs(System.Type;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ElementInit&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateMemberInitArgs" uniqueID="ValidateMemberInitArgs(System.Type;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateMemberInitArgs(System.Type;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateMethodAndGetParameters" uniqueID="ValidateMethodAndGetParameters(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Reflection.ParameterInfo[]">
				<signature>System.Linq.Expressions.Expression.ValidateMethodAndGetParameters(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Reflection.ParameterInfo[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateMethodInfo" uniqueID="ValidateMethodInfo(System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateMethodInfo(System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateNewArgs" uniqueID="ValidateNewArgs(System.Reflection.ConstructorInfo;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateNewArgs(System.Reflection.ConstructorInfo;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.MemberInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateOneArgument" uniqueID="ValidateOneArgument(System.Reflection.MethodBase;System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Reflection.ParameterInfo):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression.ValidateOneArgument(System.Reflection.MethodBase;System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Reflection.ParameterInfo):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateOpAssignConversionLambda" uniqueID="ValidateOpAssignConversionLambda(System.Linq.Expressions.LambdaExpression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.ExpressionType):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateOpAssignConversionLambda(System.Linq.Expressions.LambdaExpression;System.Linq.Expressions.Expression;System.Reflection.MethodInfo;System.Linq.Expressions.ExpressionType):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateOperator" uniqueID="ValidateOperator(System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateOperator(System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateParamswithOperandsOrThrow" uniqueID="ValidateParamswithOperandsOrThrow(System.Type;System.Type;System.Linq.Expressions.ExpressionType;System.String):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateParamswithOperandsOrThrow(System.Type;System.Type;System.Linq.Expressions.ExpressionType;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateSettableFieldOrPropertyMember" uniqueID="ValidateSettableFieldOrPropertyMember(System.Reflection.MemberInfo;System.Type):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateSettableFieldOrPropertyMember(System.Reflection.MemberInfo;System.Type):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateSpan" uniqueID="ValidateSpan(System.Int32;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateSpan(System.Int32;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateStaticOrInstanceMethod" uniqueID="ValidateStaticOrInstanceMethod(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateStaticOrInstanceMethod(System.Linq.Expressions.Expression;System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateSwitchCaseType" uniqueID="ValidateSwitchCaseType(System.Linq.Expressions.Expression;System.Boolean;System.Type;System.String):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateSwitchCaseType(System.Linq.Expressions.Expression;System.Boolean;System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateTryAndCatchHaveSameType" uniqueID="ValidateTryAndCatchHaveSameType(System.Type;System.Linq.Expressions.Expression;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateTryAndCatchHaveSameType(System.Type;System.Linq.Expressions.Expression;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateTryGetFuncActionArgs" uniqueID="ValidateTryGetFuncActionArgs(System.Type[]):System.Boolean">
				<signature>System.Linq.Expressions.Expression.ValidateTryGetFuncActionArgs(System.Type[]):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ValidateUserDefinedConditionalLogicOperator" uniqueID="ValidateUserDefinedConditionalLogicOperator(System.Linq.Expressions.ExpressionType;System.Type;System.Type;System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateUserDefinedConditionalLogicOperator(System.Linq.Expressions.ExpressionType;System.Type;System.Type;System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ValidateVariables" uniqueID="ValidateVariables(System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;;System.String):System.Void">
				<signature>System.Linq.Expressions.Expression.ValidateVariables(System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Variable" uniqueID="Variable(System.Type):System.Linq.Expressions.ParameterExpression">
				<signature>System.Linq.Expressions.Expression.Variable(System.Type):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Variable" uniqueID="Variable(System.Type;System.String):System.Linq.Expressions.ParameterExpression">
				<signature>System.Linq.Expressions.Expression.Variable(System.Type;System.String):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="VerifyOpTrueFalse" uniqueID="VerifyOpTrueFalse(System.Linq.Expressions.ExpressionType;System.Type;System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.Expression.VerifyOpTrueFalse(System.Linq.Expressions.ExpressionType;System.Type;System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression" uniqueID="Expression():System.Void">
				<signature>System.Linq.Expressions.Expression.Expression():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression" uniqueID="Expression(System.Linq.Expressions.ExpressionType;System.Type):System.Void">
				<signature>System.Linq.Expressions.Expression.Expression(System.Linq.Expressions.ExpressionType;System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reduce" uniqueID="Reduce():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression.Reduce():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReduceAndCheck" uniqueID="ReduceAndCheck():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression.ReduceAndCheck():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReduceExtensions" uniqueID="ReduceExtensions():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression.ReduceExtensions():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Linq.Expressions.Expression.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="VisitChildren" uniqueID="VisitChildren(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanReduce" uniqueID="get_CanReduce():System.Boolean">
				<signature>System.Linq.Expressions.Expression.get_CanReduce():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebugView" uniqueID="get_DebugView():System.String">
				<signature>System.Linq.Expressions.Expression.get_DebugView():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NodeType" uniqueID="get_NodeType():System.Linq.Expressions.ExpressionType">
				<signature>System.Linq.Expressions.Expression.get_NodeType():System.Linq.Expressions.ExpressionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Type" uniqueID="get_Type():System.Type">
				<signature>System.Linq.Expressions.Expression.get_Type():System.Type</signature>
			</method>
		</class>
		<class name="BinaryExpression" uniqueID="System.Linq.Expressions.BinaryExpression">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.Create(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo;System.Linq.Expressions.LambdaExpression):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetBinaryOpFromAssignmentOp" uniqueID="GetBinaryOpFromAssignmentOp(System.Linq.Expressions.ExpressionType):System.Linq.Expressions.ExpressionType">
				<signature>System.Linq.Expressions.BinaryExpression.GetBinaryOpFromAssignmentOp(System.Linq.Expressions.ExpressionType):System.Linq.Expressions.ExpressionType</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsOpAssignment" uniqueID="IsOpAssignment(System.Linq.Expressions.ExpressionType):System.Boolean">
				<signature>System.Linq.Expressions.BinaryExpression.IsOpAssignment(System.Linq.Expressions.ExpressionType):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BinaryExpression" uniqueID="BinaryExpression(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Void">
				<signature>System.Linq.Expressions.BinaryExpression.BinaryExpression(System.Linq.Expressions.Expression;System.Linq.Expressions.Expression):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetConversion" uniqueID="GetConversion():System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.BinaryExpression.GetConversion():System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethod" uniqueID="GetMethod():System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.BinaryExpression.GetMethod():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reduce" uniqueID="Reduce():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.Reduce():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReduceIndex" uniqueID="ReduceIndex():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.ReduceIndex():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReduceMember" uniqueID="ReduceMember():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.ReduceMember():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReduceUserdefinedLifted" uniqueID="ReduceUserdefinedLifted():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.ReduceUserdefinedLifted():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReduceVariable" uniqueID="ReduceVariable():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.ReduceVariable():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Linq.Expressions.LambdaExpression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression">
				<signature>System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression;System.Linq.Expressions.LambdaExpression;System.Linq.Expressions.Expression):System.Linq.Expressions.BinaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanReduce" uniqueID="get_CanReduce():System.Boolean">
				<signature>System.Linq.Expressions.BinaryExpression.get_CanReduce():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Conversion" uniqueID="get_Conversion():System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.BinaryExpression.get_Conversion():System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLifted" uniqueID="get_IsLifted():System.Boolean">
				<signature>System.Linq.Expressions.BinaryExpression.get_IsLifted():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsLiftedLogical" uniqueID="get_IsLiftedLogical():System.Boolean">
				<signature>System.Linq.Expressions.BinaryExpression.get_IsLiftedLogical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLiftedToNull" uniqueID="get_IsLiftedToNull():System.Boolean">
				<signature>System.Linq.Expressions.BinaryExpression.get_IsLiftedToNull():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsReferenceComparison" uniqueID="get_IsReferenceComparison():System.Boolean">
				<signature>System.Linq.Expressions.BinaryExpression.get_IsReferenceComparison():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Left" uniqueID="get_Left():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.get_Left():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Method" uniqueID="get_Method():System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.BinaryExpression.get_Method():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Right" uniqueID="get_Right():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.BinaryExpression.get_Right():System.Linq.Expressions.Expression</signature>
			</method>
		</class>
		<class name="ConstantExpression" uniqueID="System.Linq.Expressions.ConstantExpression">
			<method accessibility="Protected" methodKind="Static" name="Make" uniqueID="Make(System.Object;System.Type):System.Linq.Expressions.ConstantExpression">
				<signature>System.Linq.Expressions.ConstantExpression.Make(System.Object;System.Type):System.Linq.Expressions.ConstantExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.ConstantExpression.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConstantExpression" uniqueID="ConstantExpression(System.Object):System.Void">
				<signature>System.Linq.Expressions.ConstantExpression.ConstantExpression(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NodeType" uniqueID="get_NodeType():System.Linq.Expressions.ExpressionType">
				<signature>System.Linq.Expressions.ConstantExpression.get_NodeType():System.Linq.Expressions.ExpressionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Type" uniqueID="get_Type():System.Type">
				<signature>System.Linq.Expressions.ConstantExpression.get_Type():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Linq.Expressions.ConstantExpression.get_Value():System.Object</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Boolean&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Boolean&gt;&gt;</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Boolean&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Boolean&gt;&gt;</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,System.Int32&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;System.Int32&gt;&gt;</signature>
			</method>
		</class>
		<class name="LambdaExpression" uniqueID="System.Linq.Expressions.LambdaExpression">
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.LambdaExpression.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Delegate">
				<signature>System.Linq.Expressions.LambdaExpression.Compile():System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Delegate">
				<signature>System.Linq.Expressions.LambdaExpression.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompileToMethod" uniqueID="CompileToMethod(System.Reflection.Emit.MethodBuilder):System.Void">
				<signature>System.Linq.Expressions.LambdaExpression.CompileToMethod(System.Reflection.Emit.MethodBuilder):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompileToMethod" uniqueID="CompileToMethod(System.Reflection.Emit.MethodBuilder;System.Runtime.CompilerServices.DebugInfoGenerator):System.Void">
				<signature>System.Linq.Expressions.LambdaExpression.CompileToMethod(System.Reflection.Emit.MethodBuilder;System.Runtime.CompilerServices.DebugInfoGenerator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompileToMethodInternal" uniqueID="CompileToMethodInternal(System.Reflection.Emit.MethodBuilder;System.Runtime.CompilerServices.DebugInfoGenerator):System.Void">
				<signature>System.Linq.Expressions.LambdaExpression.CompileToMethodInternal(System.Reflection.Emit.MethodBuilder;System.Runtime.CompilerServices.DebugInfoGenerator):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LambdaExpression" uniqueID="LambdaExpression(System.Type;System.String;System.Linq.Expressions.Expression;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.LambdaExpression.LambdaExpression(System.Type;System.String;System.Linq.Expressions.Expression;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Body" uniqueID="get_Body():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.LambdaExpression.get_Body():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Linq.Expressions.LambdaExpression.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NodeType" uniqueID="get_NodeType():System.Linq.Expressions.ExpressionType">
				<signature>System.Linq.Expressions.LambdaExpression.get_NodeType():System.Linq.Expressions.ExpressionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Parameters" uniqueID="get_Parameters():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;">
				<signature>System.Linq.Expressions.LambdaExpression.get_Parameters():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReturnType" uniqueID="get_ReturnType():System.Type">
				<signature>System.Linq.Expressions.LambdaExpression.get_ReturnType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TailCall" uniqueID="get_TailCall():System.Boolean">
				<signature>System.Linq.Expressions.LambdaExpression.get_TailCall():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Type" uniqueID="get_Type():System.Type">
				<signature>System.Linq.Expressions.LambdaExpression.get_Type():System.Type</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Artist&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Artist&gt;&gt;</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album,MvcMusicStore.Models.Genre&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Album;MvcMusicStore.Models.Genre&gt;&gt;</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Decimal&gt;&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Decimal&gt;&gt;&gt;</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart,System.Nullable&lt;System.Int32&gt;&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Cart;System.Nullable&lt;System.Int32&gt;&gt;&gt;</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre,System.Boolean&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Genre;System.Boolean&gt;&gt;</signature>
			</method>
		</class>
		<class name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;" uniqueID="System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;">
			<method accessibility="Protected" methodKind="Static" name="Create" uniqueID="Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;.Create(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;.Accept(System.Linq.Expressions.Compiler.StackSpiller):System.Linq.Expressions.LambdaExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile():System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;.Compile():System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;.Compile(System.Runtime.CompilerServices.DebugInfoGenerator):System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;" uniqueID="Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;(System.Linq.Expressions.Expression;System.String;System.Boolean;System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;&gt;">
				<signature>System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order,System.Boolean&gt;&gt;.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;):System.Linq.Expressions.Expression&lt;System.Func&lt;MvcMusicStore.Models.Order;System.Boolean&gt;&gt;</signature>
			</method>
		</class>
		<class name="IArgumentProvider" uniqueID="System.Linq.Expressions.IArgumentProvider">
			<method accessibility="Public" methodKind="Member" name="GetArgument" uniqueID="GetArgument(System.Int32):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ArgumentCount" uniqueID="get_ArgumentCount():System.Int32">
				<signature>System.Linq.Expressions.IArgumentProvider.get_ArgumentCount():System.Int32</signature>
			</method>
		</class>
		<class name="MemberExpression" uniqueID="System.Linq.Expressions.MemberExpression">
			<method accessibility="Protected" methodKind="Static" name="Make" uniqueID="Make(System.Linq.Expressions.Expression;System.Reflection.MemberInfo):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.MemberExpression.Make(System.Linq.Expressions.Expression;System.Reflection.MemberInfo):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMember" uniqueID="GetMember():System.Reflection.MemberInfo">
				<signature>System.Linq.Expressions.MemberExpression.GetMember():System.Reflection.MemberInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberExpression" uniqueID="MemberExpression(System.Linq.Expressions.Expression):System.Void">
				<signature>System.Linq.Expressions.MemberExpression.MemberExpression(System.Linq.Expressions.Expression):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression):System.Linq.Expressions.MemberExpression">
				<signature>System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression):System.Linq.Expressions.MemberExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.MemberExpression.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Member" uniqueID="get_Member():System.Reflection.MemberInfo">
				<signature>System.Linq.Expressions.MemberExpression.get_Member():System.Reflection.MemberInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NodeType" uniqueID="get_NodeType():System.Linq.Expressions.ExpressionType">
				<signature>System.Linq.Expressions.MemberExpression.get_NodeType():System.Linq.Expressions.ExpressionType</signature>
			</method>
		</class>
		<class name="MethodCallExpression" uniqueID="System.Linq.Expressions.MethodCallExpression">
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetInstance" uniqueID="GetInstance():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.MethodCallExpression.GetInstance():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetOrMakeArguments" uniqueID="GetOrMakeArguments():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;">
				<signature>System.Linq.Expressions.MethodCallExpression.GetOrMakeArguments():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MethodCallExpression" uniqueID="MethodCallExpression(System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.MethodCallExpression.MethodCallExpression(System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Rewrite" uniqueID="Rewrite(System.Linq.Expressions.Expression;System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.MethodCallExpression.Rewrite(System.Linq.Expressions.Expression;System.Collections.Generic.IList&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.Expressions.IArgumentProvider.GetArgument" uniqueID="System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.MethodCallExpression.System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.Expressions.IArgumentProvider.get_ArgumentCount" uniqueID="System.Linq.Expressions.IArgumentProvider.get_ArgumentCount():System.Int32">
				<signature>System.Linq.Expressions.MethodCallExpression.System.Linq.Expressions.IArgumentProvider.get_ArgumentCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression">
				<signature>System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression;System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;):System.Linq.Expressions.MethodCallExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Arguments" uniqueID="get_Arguments():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;">
				<signature>System.Linq.Expressions.MethodCallExpression.get_Arguments():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Method" uniqueID="get_Method():System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.MethodCallExpression.get_Method():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NodeType" uniqueID="get_NodeType():System.Linq.Expressions.ExpressionType">
				<signature>System.Linq.Expressions.MethodCallExpression.get_NodeType():System.Linq.Expressions.ExpressionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Object" uniqueID="get_Object():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.MethodCallExpression.get_Object():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Type" uniqueID="get_Type():System.Type">
				<signature>System.Linq.Expressions.MethodCallExpression.get_Type():System.Type</signature>
			</method>
		</class>
		<class name="ParameterExpression" uniqueID="System.Linq.Expressions.ParameterExpression">
			<method accessibility="Protected" methodKind="Static" name="Make" uniqueID="Make(System.Type;System.String;System.Boolean):System.Linq.Expressions.ParameterExpression">
				<signature>System.Linq.Expressions.ParameterExpression.Make(System.Type;System.String;System.Boolean):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIsByRef" uniqueID="GetIsByRef():System.Boolean">
				<signature>System.Linq.Expressions.ParameterExpression.GetIsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParameterExpression" uniqueID="ParameterExpression(System.String):System.Void">
				<signature>System.Linq.Expressions.ParameterExpression.ParameterExpression(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsByRef" uniqueID="get_IsByRef():System.Boolean">
				<signature>System.Linq.Expressions.ParameterExpression.get_IsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Linq.Expressions.ParameterExpression.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NodeType" uniqueID="get_NodeType():System.Linq.Expressions.ExpressionType">
				<signature>System.Linq.Expressions.ParameterExpression.get_NodeType():System.Linq.Expressions.ExpressionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Type" uniqueID="get_Type():System.Type">
				<signature>System.Linq.Expressions.ParameterExpression.get_Type():System.Type</signature>
			</method>
		</class>
		<class name="UnaryExpression" uniqueID="System.Linq.Expressions.UnaryExpression">
			<method accessibility="Public" methodKind="Member" name="Accept" uniqueID="Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.UnaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FunctionalOp" uniqueID="FunctionalOp(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.UnaryExpression.FunctionalOp(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reduce" uniqueID="Reduce():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.UnaryExpression.Reduce():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReduceIndex" uniqueID="ReduceIndex():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.UnaryExpression.ReduceIndex():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReduceMember" uniqueID="ReduceMember():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.UnaryExpression.ReduceMember():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReduceVariable" uniqueID="ReduceVariable():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.UnaryExpression.ReduceVariable():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UnaryExpression" uniqueID="UnaryExpression(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Void">
				<signature>System.Linq.Expressions.UnaryExpression.UnaryExpression(System.Linq.Expressions.ExpressionType;System.Linq.Expressions.Expression;System.Type;System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Update" uniqueID="Update(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression">
				<signature>System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression):System.Linq.Expressions.UnaryExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanReduce" uniqueID="get_CanReduce():System.Boolean">
				<signature>System.Linq.Expressions.UnaryExpression.get_CanReduce():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLifted" uniqueID="get_IsLifted():System.Boolean">
				<signature>System.Linq.Expressions.UnaryExpression.get_IsLifted():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLiftedToNull" uniqueID="get_IsLiftedToNull():System.Boolean">
				<signature>System.Linq.Expressions.UnaryExpression.get_IsLiftedToNull():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_IsPrefix" uniqueID="get_IsPrefix():System.Boolean">
				<signature>System.Linq.Expressions.UnaryExpression.get_IsPrefix():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Method" uniqueID="get_Method():System.Reflection.MethodInfo">
				<signature>System.Linq.Expressions.UnaryExpression.get_Method():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NodeType" uniqueID="get_NodeType():System.Linq.Expressions.ExpressionType">
				<signature>System.Linq.Expressions.UnaryExpression.get_NodeType():System.Linq.Expressions.ExpressionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Operand" uniqueID="get_Operand():System.Linq.Expressions.Expression">
				<signature>System.Linq.Expressions.UnaryExpression.get_Operand():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Type" uniqueID="get_Type():System.Type">
				<signature>System.Linq.Expressions.UnaryExpression.get_Type():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="System.Data.Objects">
		<class name="ObjectQuery" uniqueID="System.Data.Objects.ObjectQuery">
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteInternal" uniqueID="ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery.ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExpression" uniqueID="GetExpression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery.GetExpression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResultType" uniqueID="GetResultType():System.Data.Metadata.Edm.TypeUsage">
				<signature>System.Data.Objects.ObjectQuery.GetResultType():System.Data.Metadata.Edm.TypeUsage</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery" uniqueID="ObjectQuery(System.Data.Objects.Internal.ObjectQueryState):System.Void">
				<signature>System.Data.Objects.ObjectQuery.ObjectQuery(System.Data.Objects.Internal.ObjectQueryState):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_ElementType" uniqueID="System.Linq.IQueryable.get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectQuery.System.Linq.IQueryable.get_ElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Expression" uniqueID="System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery.System.Linq.IQueryable.get_Expression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Linq.IQueryable.get_Provider" uniqueID="System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider">
				<signature>System.Data.Objects.ObjectQuery.System.Linq.IQueryable.get_Provider():System.Linq.IQueryProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToTraceString" uniqueID="ToTraceString():System.String">
				<signature>System.Data.Objects.ObjectQuery.ToTraceString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandText" uniqueID="get_CommandText():System.String">
				<signature>System.Data.Objects.ObjectQuery.get_CommandText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Data.Objects.ObjectContext">
				<signature>System.Data.Objects.ObjectQuery.get_Context():System.Data.Objects.ObjectContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnablePlanCaching" uniqueID="get_EnablePlanCaching():System.Boolean">
				<signature>System.Data.Objects.ObjectQuery.get_EnablePlanCaching():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MergeOption" uniqueID="get_MergeOption():System.Data.Objects.MergeOption">
				<signature>System.Data.Objects.ObjectQuery.get_MergeOption():System.Data.Objects.MergeOption</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Parameters" uniqueID="get_Parameters():System.Data.Objects.ObjectParameterCollection">
				<signature>System.Data.Objects.ObjectQuery.get_Parameters():System.Data.Objects.ObjectParameterCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_QueryState" uniqueID="get_QueryState():System.Data.Objects.Internal.ObjectQueryState">
				<signature>System.Data.Objects.ObjectQuery.get_QueryState():System.Data.Objects.Internal.ObjectQueryState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnablePlanCaching" uniqueID="set_EnablePlanCaching(System.Boolean):System.Void">
				<signature>System.Data.Objects.ObjectQuery.set_EnablePlanCaching(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MergeOption" uniqueID="set_MergeOption(System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery.set_MergeOption(System.Data.Objects.MergeOption):System.Void</signature>
			</method>
		</class>
		<class name="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Private" methodKind="Static" name="BuildScanEntitySetEsql" uniqueID="BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLinqQuery" uniqueID="IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Distinct" uniqueID="Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Except" uniqueID="Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteInternal" uniqueID="ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExpression" uniqueID="GetExpression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.GetExpression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResults" uniqueID="GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GroupBy" uniqueID="GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IncludeSpan" uniqueID="IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Intersect" uniqueID="Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeAs" uniqueID="MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;(System.String;System.Data.Objects.ObjectContext):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;(System.String;System.Data.Objects.ObjectContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Album&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OrderBy" uniqueID="OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Skip" uniqueID="Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Top" uniqueID="Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Union" uniqueID="Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionAll" uniqueID="UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Where" uniqueID="Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Album&gt;.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Private" methodKind="Static" name="BuildScanEntitySetEsql" uniqueID="BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLinqQuery" uniqueID="IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Distinct" uniqueID="Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Except" uniqueID="Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteInternal" uniqueID="ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExpression" uniqueID="GetExpression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.GetExpression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResults" uniqueID="GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GroupBy" uniqueID="GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IncludeSpan" uniqueID="IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Intersect" uniqueID="Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeAs" uniqueID="MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;(System.String;System.Data.Objects.ObjectContext):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;(System.String;System.Data.Objects.ObjectContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OrderBy" uniqueID="OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Skip" uniqueID="Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Top" uniqueID="Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Union" uniqueID="Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionAll" uniqueID="UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Where" uniqueID="Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Cart&gt;.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Private" methodKind="Static" name="BuildScanEntitySetEsql" uniqueID="BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLinqQuery" uniqueID="IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Distinct" uniqueID="Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Except" uniqueID="Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteInternal" uniqueID="ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExpression" uniqueID="GetExpression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.GetExpression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResults" uniqueID="GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GroupBy" uniqueID="GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IncludeSpan" uniqueID="IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Intersect" uniqueID="Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeAs" uniqueID="MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;(System.String;System.Data.Objects.ObjectContext):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;(System.String;System.Data.Objects.ObjectContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Order&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OrderBy" uniqueID="OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Skip" uniqueID="Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Top" uniqueID="Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Union" uniqueID="Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionAll" uniqueID="UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Where" uniqueID="Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Order&gt;.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ObjectResult" uniqueID="System.Data.Objects.ObjectResult">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Objects.ObjectResult.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult" uniqueID="ObjectResult():System.Void">
				<signature>System.Data.Objects.ObjectResult.ObjectResult():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.Objects.ObjectResult.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectResult.get_ElementType():System.Type</signature>
			</method>
		</class>
		<class name="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Private" methodKind="Static" name="BuildScanEntitySetEsql" uniqueID="BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLinqQuery" uniqueID="IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Distinct" uniqueID="Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Except" uniqueID="Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteInternal" uniqueID="ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExpression" uniqueID="GetExpression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.GetExpression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResults" uniqueID="GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GroupBy" uniqueID="GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IncludeSpan" uniqueID="IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Intersect" uniqueID="Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeAs" uniqueID="MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;(System.String;System.Data.Objects.ObjectContext):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;(System.String;System.Data.Objects.ObjectContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OrderBy" uniqueID="OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Skip" uniqueID="Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Top" uniqueID="Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Union" uniqueID="Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionAll" uniqueID="UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Where" uniqueID="Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Artist&gt;.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Private" methodKind="Static" name="BuildScanEntitySetEsql" uniqueID="BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLinqQuery" uniqueID="IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Distinct" uniqueID="Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Except" uniqueID="Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteInternal" uniqueID="ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExpression" uniqueID="GetExpression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.GetExpression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResults" uniqueID="GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GroupBy" uniqueID="GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IncludeSpan" uniqueID="IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Intersect" uniqueID="Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeAs" uniqueID="MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;(System.String;System.Data.Objects.ObjectContext):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;(System.String;System.Data.Objects.ObjectContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OrderBy" uniqueID="OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Skip" uniqueID="Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Top" uniqueID="Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Union" uniqueID="Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionAll" uniqueID="UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Where" uniqueID="Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.Genre&gt;.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ObjectResult&lt;MvcMusicStore.Models.Album&gt;" uniqueID="System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCanEnumerateResults" uniqueID="EnsureCanEnumerateResults():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.EnsureCanEnumerateResults():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Album&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.ObjectResult&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.ObjectResult&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Album&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.ObjectResult&lt;MvcMusicStore.Models.Album&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Album&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Album&gt;.get_ElementType():System.Type</signature>
			</method>
		</class>
		<class name="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Private" methodKind="Static" name="BuildScanEntitySetEsql" uniqueID="BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLinqQuery" uniqueID="IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Distinct" uniqueID="Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Distinct():System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Except" uniqueID="Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Except(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteInternal" uniqueID="ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExpression" uniqueID="GetExpression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetExpression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResults" uniqueID="GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GroupBy" uniqueID="GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Include(System.String):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IncludeSpan" uniqueID="IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Intersect" uniqueID="Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Intersect(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeAs" uniqueID="MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.String;System.Data.Objects.ObjectContext):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.String;System.Data.Objects.ObjectContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OrderBy" uniqueID="OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Skip" uniqueID="Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Top" uniqueID="Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Union" uniqueID="Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Union(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionAll" uniqueID="UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.UnionAll(System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Where" uniqueID="Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;MvcMusicStore.Models.OrderDetail&gt;.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Private" methodKind="Static" name="BuildScanEntitySetEsql" uniqueID="BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.BuildScanEntitySetEsql(System.Data.Metadata.Edm.EntitySetBase):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLinqQuery" uniqueID="IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.IsLinqQuery(System.Data.Objects.ObjectQuery):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Distinct" uniqueID="Distinct():System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Distinct():System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Except" uniqueID="Except(System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Except(System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Execute" uniqueID="Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Execute(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteInternal" uniqueID="ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.ExecuteInternal(System.Data.Objects.MergeOption):System.Data.Objects.ObjectResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExpression" uniqueID="GetExpression():System.Linq.Expressions.Expression">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.GetExpression():System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResults" uniqueID="GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.GetResults(System.Nullable&lt;System.Data.Objects.MergeOption&gt;):System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GroupBy" uniqueID="GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.GroupBy(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Include" uniqueID="Include(System.String):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Include(System.String):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IncludeSpan" uniqueID="IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.IncludeSpan(System.Data.Objects.Span):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Intersect" uniqueID="Intersect(System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Intersect(System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeAs" uniqueID="MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.MergeAs(System.Data.Objects.MergeOption):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Metadata.Edm.EntitySetBase;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Objects.Internal.ObjectQueryState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;(System.String;System.Data.Objects.ObjectContext):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;(System.String;System.Data.Objects.ObjectContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;(System.String;System.Data.Objects.ObjectContext;System.Data.Objects.MergeOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OrderBy" uniqueID="OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.OrderBy(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Select(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Skip" uniqueID="Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Skip(System.String;System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Top" uniqueID="Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Top(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Union" uniqueID="Union(System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Union(System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionAll" uniqueID="UnionAll(System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.UnionAll(System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Where" uniqueID="Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.Where(System.String;System.Data.Objects.ObjectParameter[]):System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;.set_Name(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ObjectResult&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCanEnumerateResults" uniqueID="EnsureCanEnumerateResults():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.EnsureCanEnumerateResults():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Artist&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Artist&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Artist&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Artist&gt;.get_ElementType():System.Type</signature>
			</method>
		</class>
		<class name="ObjectResult&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCanEnumerateResults" uniqueID="EnsureCanEnumerateResults():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.EnsureCanEnumerateResults():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Common.DbDataRecord&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="ObjectResult&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="ObjectResult&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;System.Data.Common.DbDataRecord&gt;" uniqueID="ObjectResult&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;System.Data.Common.DbDataRecord&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectResult&lt;System.Data.Common.DbDataRecord&gt;.get_ElementType():System.Type</signature>
			</method>
		</class>
		<class name="ObjectResult&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCanEnumerateResults" uniqueID="EnsureCanEnumerateResults():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.EnsureCanEnumerateResults():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Cart&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Cart&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Cart&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Cart&gt;.get_ElementType():System.Type</signature>
			</method>
		</class>
		<class name="ObjectResult&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCanEnumerateResults" uniqueID="EnsureCanEnumerateResults():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.EnsureCanEnumerateResults():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Genre&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Genre&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Genre&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Genre&gt;.get_ElementType():System.Type</signature>
			</method>
		</class>
		<class name="ObjectResult&lt;MvcMusicStore.Models.Order&gt;" uniqueID="System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCanEnumerateResults" uniqueID="EnsureCanEnumerateResults():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.EnsureCanEnumerateResults():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.Order&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.ObjectResult&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.ObjectResult&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.Order&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.ObjectResult&lt;MvcMusicStore.Models.Order&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.Order&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.Order&gt;.get_ElementType():System.Type</signature>
			</method>
		</class>
		<class name="ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCanEnumerateResults" uniqueID="EnsureCanEnumerateResults():System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.EnsureCanEnumerateResults():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;MvcMusicStore.Models.OrderDetail&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorInternal" uniqueID="GetEnumeratorInternal():System.Collections.IEnumerator">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.GetEnumeratorInternal():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIListSourceListInternal" uniqueID="GetIListSourceListInternal():System.Collections.IList">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.GetIListSourceListInternal():System.Collections.IList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;" uniqueID="ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;(System.Data.Common.Internal.Materialization.Shaper&lt;MvcMusicStore.Models.OrderDetail&gt;;System.Data.Metadata.Edm.EntitySet;System.Data.Metadata.Edm.TypeUsage;System.Boolean;System.Data.Objects.NextResultGenerator;System.Action&lt;System.Object;System.EventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementType" uniqueID="get_ElementType():System.Type">
				<signature>System.Data.Objects.ObjectResult&lt;MvcMusicStore.Models.OrderDetail&gt;.get_ElementType():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="Microsoft.SqlServer.Server">
		<class name="SqlProcedureAttribute" uniqueID="Microsoft.SqlServer.Server.SqlProcedureAttribute">
			<method accessibility="Public" methodKind="Member" name="SqlProcedureAttribute" uniqueID="SqlProcedureAttribute():System.Void">
				<signature>Microsoft.SqlServer.Server.SqlProcedureAttribute.SqlProcedureAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>Microsoft.SqlServer.Server.SqlProcedureAttribute.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>Microsoft.SqlServer.Server.SqlProcedureAttribute.set_Name(System.String):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Runtime.CompilerServices">
		<class name="CallSite" uniqueID="System.Runtime.CompilerServices.CallSite">
			<method accessibility="Public" methodKind="Static" name="Create" uniqueID="Create(System.Type;System.Runtime.CompilerServices.CallSiteBinder):System.Runtime.CompilerServices.CallSite">
				<signature>System.Runtime.CompilerServices.CallSite.Create(System.Type;System.Runtime.CompilerServices.CallSiteBinder):System.Runtime.CompilerServices.CallSite</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CallSite" uniqueID="CallSite(System.Runtime.CompilerServices.CallSiteBinder):System.Void">
				<signature>System.Runtime.CompilerServices.CallSite.CallSite(System.Runtime.CompilerServices.CallSiteBinder):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Binder" uniqueID="get_Binder():System.Runtime.CompilerServices.CallSiteBinder">
				<signature>System.Runtime.CompilerServices.CallSite.get_Binder():System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
		</class>
		<class name="CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;" uniqueID="System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;CreateCustomNoMatchDelegate&gt;b__1" uniqueID="&lt;CreateCustomNoMatchDelegate&gt;b__1(System.Reflection.ParameterInfo):System.Linq.Expressions.ParameterExpression">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.&lt;CreateCustomNoMatchDelegate&gt;b__1(System.Reflection.ParameterInfo):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;CreateCustomUpdateDelegate&gt;b__3" uniqueID="&lt;CreateCustomUpdateDelegate&gt;b__3(System.Reflection.ParameterInfo):System.Linq.Expressions.ParameterExpression">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.&lt;CreateCustomUpdateDelegate&gt;b__3(System.Reflection.ParameterInfo):System.Linq.Expressions.ParameterExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;CreateCustomUpdateDelegate&gt;b__4" uniqueID="&lt;CreateCustomUpdateDelegate&gt;b__4(System.Linq.Expressions.ParameterExpression):System.Linq.Expressions.Expression">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.&lt;CreateCustomUpdateDelegate&gt;b__4(System.Linq.Expressions.ParameterExpression):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="Convert" uniqueID="Convert(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.Expression">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.Convert(System.Linq.Expressions.Expression;System.Type):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Create" uniqueID="Create(System.Runtime.CompilerServices.CallSiteBinder):System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;&gt;">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.Create(System.Runtime.CompilerServices.CallSiteBinder):System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateDelegateHelper" uniqueID="CreateDelegateHelper(System.Type;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.CreateDelegateHelper(System.Type;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSimpleSignature" uniqueID="IsSimpleSignature(System.Reflection.MethodInfo;System.Type[]):System.Boolean">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.IsSimpleSignature(System.Reflection.MethodInfo;System.Type[]):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddRule" uniqueID="AddRule(System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.AddRule(System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;" uniqueID="CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;():System.Void">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;" uniqueID="CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;(System.Runtime.CompilerServices.CallSiteBinder):System.Void">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;(System.Runtime.CompilerServices.CallSiteBinder):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ClearRuleCache" uniqueID="ClearRuleCache():System.Void">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.ClearRuleCache():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateCustomNoMatchDelegate" uniqueID="CreateCustomNoMatchDelegate(System.Reflection.MethodInfo):System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.CreateCustomNoMatchDelegate(System.Reflection.MethodInfo):System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateCustomUpdateDelegate" uniqueID="CreateCustomUpdateDelegate(System.Reflection.MethodInfo):System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.CreateCustomUpdateDelegate(System.Reflection.MethodInfo):System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateMatchMaker" uniqueID="CreateMatchMaker():System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;&gt;">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.CreateMatchMaker():System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetUpdateDelegate" uniqueID="GetUpdateDelegate():System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.GetUpdateDelegate():System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetUpdateDelegate" uniqueID="GetUpdateDelegate(System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;):System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.GetUpdateDelegate(System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;):System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MakeUpdateDelegate" uniqueID="MakeUpdateDelegate():System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.MakeUpdateDelegate():System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveRule" uniqueID="MoveRule(System.Int32):System.Void">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.MoveRule(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Update" uniqueID="get_Update():System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;">
				<signature>System.Runtime.CompilerServices.CallSite&lt;System.Func&lt;System.Runtime.CompilerServices.CallSite,System.Object,System.Web.Mvc.SelectList,System.Object&gt;&gt;.get_Update():System.Func&lt;System.Runtime.CompilerServices.CallSite;System.Object;System.Web.Mvc.SelectList;System.Object&gt;</signature>
			</method>
		</class>
		<class name="CallSiteBinder" uniqueID="System.Runtime.CompilerServices.CallSiteBinder">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Runtime.CompilerServices.CallSiteBinder.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_UpdateLabel" uniqueID="get_UpdateLabel():System.Linq.Expressions.LabelTarget">
				<signature>System.Runtime.CompilerServices.CallSiteBinder.get_UpdateLabel():System.Linq.Expressions.LabelTarget</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Bind" uniqueID="Bind(System.Object[];System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Linq.Expressions.LabelTarget):System.Linq.Expressions.Expression">
				<signature>System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[];System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;;System.Linq.Expressions.LabelTarget):System.Linq.Expressions.Expression</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CallSiteBinder" uniqueID="CallSiteBinder():System.Void">
				<signature>System.Runtime.CompilerServices.CallSiteBinder.CallSiteBinder():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="Microsoft.CSharp.RuntimeBinder">
		<class name="Binder" uniqueID="Microsoft.CSharp.RuntimeBinder.Binder">
			<method accessibility="Public" methodKind="Static" name="BinaryOperation" uniqueID="BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Linq.Expressions.ExpressionType;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Linq.Expressions.ExpressionType;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Convert" uniqueID="Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Type):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Type):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetIndex" uniqueID="GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetMember" uniqueID="GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.String;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.String;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Invoke" uniqueID="Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="InvokeConstructor" uniqueID="InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="InvokeMember" uniqueID="InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.String;System.Collections.Generic.IEnumerable&lt;System.Type&gt;;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.String;System.Collections.Generic.IEnumerable&lt;System.Type&gt;;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsEvent" uniqueID="IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.String;System.Type):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.String;System.Type):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetIndex" uniqueID="SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetMember" uniqueID="SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.String;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.String;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="UnaryOperation" uniqueID="UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Linq.Expressions.ExpressionType;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder">
				<signature>Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags;System.Linq.Expressions.ExpressionType;System.Type;System.Collections.Generic.IEnumerable&lt;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&gt;):System.Runtime.CompilerServices.CallSiteBinder</signature>
			</method>
		</class>
		<class name="CSharpArgumentInfo" uniqueID="Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Create" uniqueID="Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags;System.String):Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags;System.String):Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CSharpArgumentInfo" uniqueID="CSharpArgumentInfo(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags;System.String):System.Void">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.CSharpArgumentInfo(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Flags" uniqueID="get_Flags():Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.get_Flags():Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsByRef" uniqueID="get_IsByRef():System.Boolean">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.get_IsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsOut" uniqueID="get_IsOut():System.Boolean">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.get_IsOut():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsStaticType" uniqueID="get_IsStaticType():System.Boolean">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.get_IsStaticType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LiteralConstant" uniqueID="get_LiteralConstant():System.Boolean">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.get_LiteralConstant():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NamedArgument" uniqueID="get_NamedArgument():System.Boolean">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.get_NamedArgument():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UseCompileTimeType" uniqueID="get_UseCompileTimeType():System.Boolean">
				<signature>Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.get_UseCompileTimeType():System.Boolean</signature>
			</method>
		</class>
	</package>
	<package name="System.ServiceModel">
		<class name="ServiceContractAttribute" uniqueID="System.ServiceModel.ServiceContractAttribute">
			<method accessibility="Public" methodKind="Member" name="ServiceContractAttribute" uniqueID="ServiceContractAttribute():System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.ServiceContractAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CallbackContract" uniqueID="get_CallbackContract():System.Type">
				<signature>System.ServiceModel.ServiceContractAttribute.get_CallbackContract():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConfigurationName" uniqueID="get_ConfigurationName():System.String">
				<signature>System.ServiceModel.ServiceContractAttribute.get_ConfigurationName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasProtectionLevel" uniqueID="get_HasProtectionLevel():System.Boolean">
				<signature>System.ServiceModel.ServiceContractAttribute.get_HasProtectionLevel():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.ServiceModel.ServiceContractAttribute.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.ServiceModel.ServiceContractAttribute.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ProtectionLevel" uniqueID="get_ProtectionLevel():System.Net.Security.ProtectionLevel">
				<signature>System.ServiceModel.ServiceContractAttribute.get_ProtectionLevel():System.Net.Security.ProtectionLevel</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SessionMode" uniqueID="get_SessionMode():System.ServiceModel.SessionMode">
				<signature>System.ServiceModel.ServiceContractAttribute.get_SessionMode():System.ServiceModel.SessionMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CallbackContract" uniqueID="set_CallbackContract(System.Type):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_CallbackContract(System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ConfigurationName" uniqueID="set_ConfigurationName(System.String):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_ConfigurationName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_Name(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Namespace" uniqueID="set_Namespace(System.String):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_Namespace(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ProtectionLevel" uniqueID="set_ProtectionLevel(System.Net.Security.ProtectionLevel):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_ProtectionLevel(System.Net.Security.ProtectionLevel):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SessionMode" uniqueID="set_SessionMode(System.ServiceModel.SessionMode):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_SessionMode(System.ServiceModel.SessionMode):System.Void</signature>
			</method>
		</class>
	</package>
</api_info>
